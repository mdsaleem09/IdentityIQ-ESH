##### iiq.properties #####
#
# (c) Copyright 2008 SailPoint Technologies, Inc., All Rights Reserved.
#
# This file contains configuration settings for IdentityIQ.  For your unique
# environment, you will need to adjust the properties below.
#
# IdentityIQ can either create its own datasource or use a datasource that is
# managed by an application server.  Depending on the type of database being
# used, you will need to do the following:
#
# 1) Uncomment the correct sessionFactory.hibernateProperties.hibernate.dialect
#    and ensure that all other dialects are commented out.
# 2) If using MS SQL Server, also uncomment the quartz properties:
#    scheduler.quartzProperties.org.quartz.jobStore.driverDelegateClass and
#    scheduler.quartzProperties.org.quartz.jobStore.selectWithLockSQL.
#
#
# IDENTITYIQ MANAGED DATASOURCES ONLY
#
# In addition to the steps above, if IdentityIQ is creating its own datasource
# (ie - not using an application server managed datasource), you will need to
# perform the following steps:
#
# 1) Modify dataSource.username and dataSource.password to include the username
#    and password of the database user.  The password may be an encrypted using
#    the "encrypt" command when running "iiq console".
# 2) Configure the dataSource.url to connect to the database, and uncomment the
#    appropriate dataSource.driverClassName.
# 3) Optionally configure other connection pool settings.
#
#
# APPLICATION SERVER MANAGED DATASOURCES ONLY
#
# In addition to the steps above, if IdentityIQ is using an application server
# managed datasource, you will need to perform the following steps:
#
# 1) Configure the datasource in your application server.  This usually involves
#    putting the JDBC driver jar file in a common location and configuring
#    properties for your database connection and pool settings.  Consult the
#    documentation for the application server for more information.  Also,
#    ensure that the JDBC driver jar file is not in the WEB-INF\lib directory
#    of the IdentityIQ web application.
# 2) Change jndiDataSource.jndiName to point to the location in JNDI in which
#    the datasource is stored.
# 3) Change configuredDataSource.targetBeanName to "jndiDataSource".
#    7.1 update: at the moment targetBeanName doesn't work after the Spring upgrade
#    you must edit the <alias> definition in configBeans.xml
#

##### Application Server Managed Data Source Properties #####

# Depending on the app server, the "java:comp/env/" may not be required.
jndiDataSource.jndiName=java:comp/env/jdbc/testDataSource

# Set to "jndiDataSource" to use an app server managed datasource. Otherwise
# leave the default value "dataSource".
configuredDataSource.targetBeanName=dataSource


##### Data Source Properties #####
dataSource.maxWait=10000
dataSource.maxActive=50
dataSource.minIdle=5
#dataSource.minEvictableIdleTimeMillis=300000
#dataSource.maxOpenPreparedStatements=-1

dataSource.username=identityiq
dataSource.password=1:iCAlakm5CVUe7+Q6hVJIBA==

##### MySQL #####
## URL Format: dataSource.url=jdbc:mysql://<host_name>:<port>/<dbname>?useServerPrepStmts=true&tinyInt1isBit=true&useUnicode=true&characterEncoding=utf8
#dataSource.url=jdbc:mysql://localhost/identityiq?useServerPrepStmts=true&tinyInt1isBit=true&useUnicode=true&characterEncoding=utf8
#dataSource.driverClassName=com.mysql.jdbc.Driver
#sessionFactory.hibernateProperties.hibernate.dialect=sailpoint.persistence.MySQL5InnoDBDialect

##### p6spy #####
## You also need to modify spy.properties to have the name of the real driver class
#dataSource.driverClassName=com.p6spy.engine.spy.P6SpyDriver

##### Oracle #####
## URL Format: dataSource.url=jdbc:oracle:<drivertype>:<username/password>@<database>:<port>:<sid>
dataSource.url=jdbc:oracle:thin:@localhost:1521/orcl
dataSource.driverClassName=oracle.jdbc.driver.OracleDriver
sessionFactory.hibernateProperties.hibernate.dialect=sailpoint.persistence.Oracle10gDialect

##### MSSQL Server #####
## URL Format: dataSource.url=jdbc:sqlserver://[serverName[\instanceName][:portNumber]][;property=value[;property=value]]
#dataSource.url=jdbc:sqlserver://localhost:1433;databaseName=identityiq;
#dataSource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#sessionFactory.hibernateProperties.hibernate.dialect=sailpoint.persistence.SQLServerPagingDialect
#scheduler.quartzProperties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.MSSQLDelegate
#scheduler.quartzProperties.org.quartz.jobStore.selectWithLockSQL=SELECT * FROM {0}LOCKS UPDLOCK WHERE LOCK_NAME = ?

##### IBM DB2 #####
## URL Format: dataSource.url=jdbc:db2://<host_name>:<port_number>/<database_name>
#dataSource.url=jdbc:db2://localhost:50000/iiq
#dataSource.driverClassName=com.ibm.db2.jcc.DB2Driver
#sessionFactory.hibernateProperties.hibernate.dialect=sailpoint.persistence.DB2Dialect


##### Plugins ####

# Determines whether or not plugins are enabled, change
# to false if plugins should be disabled globally
plugins.enabled=true

# Determines if SQL scripts should be executed dynamically
# at the time a plugin is installed, upgraded or uninstalled
plugins.runSqlScripts=true

# Determines if XML object files should be imported dynamically
# at the time a plugin is installed, upgraded or uninstalled
plugins.importObjects=true

# Determines if the global SailPoint angular bundle will be used when
# there are snippets on a page
plugins.angularSnippetEnabled=false


##### Application Server Managed Plugins Data Source Properties #####

# Depending on the app server, the "java:comp/env/" may not be required.
jndiPluginsDataSource.jndiName=java:comp/env/jdbc/testPluginsDataSource

# Set to "jndiPluginsDataSource" to use an app server managed datasource. Otherwise
# leave the default value "pluginsDataSource".
configuredPluginsDataSource.targetBeanName=pluginsDataSource


##### Plugins Data Source Properties #####
pluginsDataSource.maxWait=10000
pluginsDataSource.maxActive=50
pluginsDataSource.minIdle=5
#pluginsDataSource.minEvictableIdleTimeMillis=300000
#pluginsDataSource.maxOpenPreparedStatements=-1

pluginsDataSource.username=identityiqPlugin
pluginsDataSource.password=1:8ORggiEVfa289a0+YccD4QQO0Eec3V9eSHaQwFHsNR4=

##### MySQL #####
## URL Format: dataSource.url=jdbc:mysql://<host_name>:<port>/<dbname>?useServerPrepStmts=true&tinyInt1isBit=true&useUnicode=true&characterEncoding=utf8
#pluginsDataSource.url=jdbc:mysql://localhost/identityiqPlugin?useServerPrepStmts=true&tinyInt1isBit=true&useUnicode=true&characterEncoding=utf8
#pluginsDataSource.driverClassName=com.mysql.jdbc.Driver

##### p6spy #####
## You also need to modify spy.properties to have the name of the real driver class
#pluginsDataSource.driverClassName=com.p6spy.engine.spy.P6SpyDriver

##### Oracle #####
## URL Format: dataSource.url=jdbc:oracle:<drivertype>:<username/password>@<database>:<port>:<sid>
pluginsDataSource.url=jdbc:oracle:thin:@localhost:1521/orcl
pluginsDataSource.driverClassName=oracle.jdbc.driver.OracleDriver

##### MSSQL Server #####
## URL Format: dataSource.url=jdbc:sqlserver://[serverName[\instanceName][:portNumber]][;property=value[;property=value]]
#pluginsDataSource.url=jdbc:sqlserver://localhost:1433;databaseName=identityiqPlugin
#pluginsDataSource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver

##### IBM DB2 #####
## URL Format: dataSource.url=jdbc:db2://<host_name>:<port_number>/<database_name>
#pluginsDataSource.url=jdbc:db2://localhost:50000/iiq_pl
#pluginsDataSource.driverClassName=com.ibm.db2.jcc.DB2Driver


#
# Setting for the BSFManagerPool set on the ruleRunner
# 
ruleRunner.maxPoolReuse=1000
bsfManagerPool.maxActive=30
bsfManagerPool.minEvictableIdleTimeMillis=900000
bsfManagerPool.timeBetweenEvictionRunsMillis=600000


##### Debug Settings #####

# Uncomment to send all SQL queries to std out. This provides a lot of output
# and slows down execution, so use it wisely.
#sessionFactory.hibernateProperties.hibernate.show_sql=true

# Hibernate Transaction Isolation Levels
# 1 = Read Uncommitted, 2 = Read Committed, 4 = Repeatable Read, 8 = Serializable
#sessionFactory.hibernateProperties.hibernate.connection.isolation=1

#
# IIQ Keystore and Master Password properties
#

# file location of the IIQ keystore
# (override of the default $SPHOME/WEB-INF/classes/iiq.dat )
#
#keyStore.file  = /example/path/filename

# file location of the IIQ master password file
# (override of the default $SPHOME/WEB-INF/classes/iiq.cfg )
#
#keyStore.passwordFile = /example/path/filename

