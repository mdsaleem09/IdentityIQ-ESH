--
-- This script is a SAMPLE and can be modified as appropriate by the
-- customer as long as the equivalent tables and indexes are created.
-- The database name, user, and password must match those defined in
-- iiq.properties in the IdentityIQ installation.
--

--
-- The DATAFILE location must be modified to match your environment.
-- Because of this, these commands are commented out in this script.
--
-- 
-- CREATE BIGFILE TABLESPACE identityiq_ts
-- DATAFILE '/usr/local/oradata/identityiq.dbf' SIZE 1G 
--    AUTOEXTEND ON NEXT 512M MAXSIZE UNLIMITED
--    EXTENT MANAGEMENT LOCAL;
-- 
-- CREATE USER identityiq IDENTIFIED BY identityiq
--     DEFAULT TABLESPACE identityiq_ts
--     QUOTA UNLIMITED ON identityiq_ts;
-- 
-- GRANT CREATE SESSION to identityiq;
-- GRANT CREATE TABLE to identityiq;


--
-- The DATAFILE location must be modified to match your environment.
-- Because of this, these commands are commented out in this script.
--
--
-- CREATE BIGFILE TABLESPACE identityiqPlugin_ts
-- DATAFILE '/usr/local/oradata/identityiqPlugin.dbf' SIZE 128M
--    AUTOEXTEND ON NEXT 128M MAXSIZE UNLIMITED
--    EXTENT MANAGEMENT LOCAL;
--
-- CREATE USER identityiqPlugin IDENTIFIED BY identityiqPlugin
--     DEFAULT TABLESPACE identityiqPlugin_ts
--     QUOTA UNLIMITED ON identityiqPlugin_ts;
--
-- GRANT CREATE SESSION to identityiqPlugin;
-- GRANT CREATE TABLE to identityiqPlugin;
--
-- A hint submitted by a user: Oracle DB MUST be created as "shared" and the
-- job_queue_processes parameter  must be greater than 2, otherwise a DB lock
-- will happen.   However, these settings are pretty much standard after any
-- Oracle install, so most users need not worry about this.
--
-- IdentityIQ NOTES
--
-- Since things like Application names can make their way into TaskSchedule
-- object names we have to be careful with the sizes of various Quartz name
-- columns.  The original size was 80, this has been raised to 2000.  The
-- maximum size of a varchar2 in Oracle is 4000.
--
CREATE TABLE identityiq.qrtz221_job_details
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    JOB_NAME  VARCHAR2(200) NOT NULL,
    JOB_GROUP VARCHAR2(200) NOT NULL,
    DESCRIPTION VARCHAR2(250) NULL,
    JOB_CLASS_NAME   VARCHAR2(250) NOT NULL,
    IS_DURABLE VARCHAR2(1) NOT NULL,
    IS_NONCONCURRENT VARCHAR2(1) NOT NULL,
    IS_UPDATE_DATA VARCHAR2(1) NOT NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NOT NULL,
    JOB_DATA BLOB NULL,
    CONSTRAINT QRTZ221_JOB_DETAILS_PK PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);

CREATE TABLE identityiq.qrtz221_triggers
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    JOB_NAME  VARCHAR2(200) NOT NULL,
    JOB_GROUP VARCHAR2(200) NOT NULL,
    DESCRIPTION VARCHAR2(250) NULL,
    NEXT_FIRE_TIME NUMBER(13) NULL,
    PREV_FIRE_TIME NUMBER(13) NULL,
    PRIORITY NUMBER(13) NULL,
    TRIGGER_STATE VARCHAR2(16) NOT NULL,
    TRIGGER_TYPE VARCHAR2(8) NOT NULL,
    START_TIME NUMBER(13) NOT NULL,
    END_TIME NUMBER(13) NULL,
    CALENDAR_NAME VARCHAR2(200) NULL,
    MISFIRE_INSTR NUMBER(2) NULL,
    JOB_DATA BLOB NULL,
    CONSTRAINT QRTZ221_TRIGGERS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ221_TRIGGER_TO_JOBS_FK FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
      REFERENCES identityiq.qrtz221_job_details(SCHED_NAME,JOB_NAME,JOB_GROUP)
);

CREATE TABLE identityiq.qrtz221_simple_triggers
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    REPEAT_COUNT NUMBER(7) NOT NULL,
    REPEAT_INTERVAL NUMBER(12) NOT NULL,
    TIMES_TRIGGERED NUMBER(10) NOT NULL,
    CONSTRAINT QRTZ221_SMPL_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ221_SMPL_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE identityiq.qrtz221_cron_triggers
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    CRON_EXPRESSION VARCHAR2(120) NOT NULL,
    TIME_ZONE_ID VARCHAR2(80),
    CONSTRAINT QRTZ221_CRON_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ221_CRON_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
      REFERENCES identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE identityiq.qrtz221_simprop_triggers
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    STR_PROP_1 VARCHAR2(512) NULL,
    STR_PROP_2 VARCHAR2(512) NULL,
    STR_PROP_3 VARCHAR2(512) NULL,
    INT_PROP_1 NUMBER(10) NULL,
    INT_PROP_2 NUMBER(10) NULL,
    LONG_PROP_1 NUMBER(13) NULL,
    LONG_PROP_2 NUMBER(13) NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 VARCHAR2(1) NULL,
    BOOL_PROP_2 VARCHAR2(1) NULL,
    CONSTRAINT QRTZ221_SIMPROP_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ221_SP_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
      REFERENCES identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE identityiq.qrtz221_blob_triggers
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    BLOB_DATA BLOB NULL,
    CONSTRAINT QRTZ221_BLOB_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ221_BLOB_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
        REFERENCES identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE identityiq.qrtz221_calendars
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    CALENDAR_NAME  VARCHAR2(200) NOT NULL,
    CALENDAR BLOB NOT NULL,
    CONSTRAINT QRTZ221_CALENDARS_PK PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);

CREATE TABLE identityiq.qrtz221_paused_trigger_grps
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR2(200) NOT NULL,
    CONSTRAINT QRTZ221_PAUSED_TRIG_GRPS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);

CREATE TABLE identityiq.qrtz221_fired_triggers
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    ENTRY_ID VARCHAR2(95) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    INSTANCE_NAME VARCHAR2(200) NOT NULL,
    FIRED_TIME NUMBER(13) NOT NULL,
    SCHED_TIME NUMBER(13) NOT NULL,
    PRIORITY NUMBER(13) NOT NULL,
    STATE VARCHAR2(16) NOT NULL,
    JOB_NAME VARCHAR2(200) NULL,
    JOB_GROUP VARCHAR2(200) NULL,
    IS_NONCONCURRENT VARCHAR2(1) NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NULL,
    CONSTRAINT QRTZ221_FIRED_TRIGGER_PK PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);

CREATE TABLE identityiq.qrtz221_scheduler_state
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    INSTANCE_NAME VARCHAR2(200) NOT NULL,
    LAST_CHECKIN_TIME NUMBER(13) NOT NULL,
    CHECKIN_INTERVAL NUMBER(13) NOT NULL,
    CONSTRAINT QRTZ221_SCHEDULER_STATE_PK PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);

CREATE TABLE identityiq.qrtz221_locks
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    LOCK_NAME  VARCHAR2(40) NOT NULL,
    CONSTRAINT QRTZ221_LOCKS_PK PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);

INSERT INTO identityiq.qrtz221_locks VALUES('QuartzScheduler', 'TRIGGER_ACCESS');
INSERT INTO identityiq.qrtz221_locks VALUES('QuartzScheduler', 'JOB_ACCESS');
INSERT INTO identityiq.qrtz221_locks VALUES('QuartzScheduler', 'CALENDAR_ACCESS');
INSERT INTO identityiq.qrtz221_locks VALUES('QuartzScheduler', 'STATE_ACCESS');
INSERT INTO identityiq.qrtz221_locks VALUES('QuartzScheduler', 'MISFIRE_ACCESS');

CREATE INDEX identityiq.idx_qrtz221_j_req_recovery ON identityiq.qrtz221_job_details(SCHED_NAME,REQUESTS_RECOVERY);
CREATE INDEX identityiq.idx_qrtz221_j_grp ON identityiq.qrtz221_job_details(SCHED_NAME,JOB_GROUP);

CREATE INDEX identityiq.idx_qrtz221_t_j ON identityiq.qrtz221_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX identityiq.idx_qrtz221_t_jg ON identityiq.qrtz221_triggers(SCHED_NAME,JOB_GROUP);
CREATE INDEX identityiq.idx_qrtz221_t_c ON identityiq.qrtz221_triggers(SCHED_NAME,CALENDAR_NAME);
CREATE INDEX identityiq.idx_qrtz221_t_g ON identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_GROUP);
CREATE INDEX identityiq.idx_qrtz221_t_state ON identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_STATE);
CREATE INDEX identityiq.idx_qrtz221_t_n_state ON identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX identityiq.idx_qrtz221_t_n_g_state ON identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX identityiq.idx_qrtz221_t_next_fire_time ON identityiq.qrtz221_triggers(SCHED_NAME,NEXT_FIRE_TIME);
CREATE INDEX identityiq.idx_qrtz221_t_nft_st ON identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
CREATE INDEX identityiq.idx_qrtz221_t_nft_misfire ON identityiq.qrtz221_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
CREATE INDEX identityiq.idx_qrtz221_t_nft_st_misfire ON identityiq.qrtz221_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
CREATE INDEX identityiq.idx_qrtz221_t_nft_st_mf_grp ON identityiq.qrtz221_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);

CREATE INDEX identityiq.idx_qrtz221_ft_trig_inst_name ON identityiq.qrtz221_fired_triggers(SCHED_NAME,INSTANCE_NAME);
CREATE INDEX identityiq.idx_qrtz221_ft_inst_req_rcvry ON identityiq.qrtz221_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
CREATE INDEX identityiq.idx_qrtz221_ft_j_g ON identityiq.qrtz221_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX identityiq.idx_qrtz221_ft_jg ON identityiq.qrtz221_fired_triggers(SCHED_NAME,JOB_GROUP);
CREATE INDEX identityiq.idx_qrtz221_ft_t_g ON identityiq.qrtz221_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
CREATE INDEX identityiq.idx_qrtz221_ft_tg ON identityiq.qrtz221_fired_triggers(SCHED_NAME,TRIGGER_GROUP);

commit;

    create table identityiq.spt_account_group (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        description varchar2(1024 char),
        native_identity varchar2(322 char),
        reference_attribute varchar2(128 char),
        member_attribute varchar2(128 char),
        last_refresh number(19,0),
        last_target_aggregation number(19,0),
        uncorrelated number(1,0),
        application varchar2(32 char),
        attributes clob,
        key1 varchar2(128 char),
        key2 varchar2(128 char),
        key3 varchar2(128 char),
        key4 varchar2(128 char),
        primary key (id)
    );

    create table identityiq.spt_account_group_inheritance (
        account_group varchar2(32 char) not null,
        inherits_from varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (account_group, idx)
    );

    create table identityiq.spt_account_group_perms (
        accountgroup varchar2(32 char) not null,
        target varchar2(255 char),
        rights varchar2(4000 char),
        annotation varchar2(255 char),
        idx number(10,0) not null,
        primary key (accountgroup, idx)
    );

    create table identityiq.spt_account_group_target_perms (
        accountgroup varchar2(32 char) not null,
        target varchar2(255 char),
        rights varchar2(4000 char),
        annotation varchar2(255 char),
        idx number(10,0) not null,
        primary key (accountgroup, idx)
    );

    create table identityiq.spt_activity_constraint (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(2000 char),
        description varchar2(4000 char),
        policy varchar2(32 char),
        violation_owner_type varchar2(255 char),
        violation_owner varchar2(32 char),
        violation_owner_rule varchar2(32 char),
        compensating_control clob,
        disabled number(1,0),
        weight number(10,0),
        remediation_advice clob,
        violation_summary clob,
        identity_filters clob,
        activity_filters clob,
        time_periods clob,
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_activity_data_source (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null,
        description varchar2(1024 char),
        collector varchar2(255 char),
        type varchar2(255 char),
        configuration clob,
        last_refresh number(19,0),
        targets clob,
        correlation_rule varchar2(32 char),
        transformation_rule varchar2(32 char),
        application varchar2(32 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_activity_time_periods (
        application_activity varchar2(32 char) not null,
        time_period varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (application_activity, idx)
    );

    create table identityiq.spt_alert (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        extended1 varchar2(255 char),
        attributes clob,
        source varchar2(32 char),
        alert_date number(19,0),
        native_id varchar2(255 char),
        target_id varchar2(255 char),
        target_type varchar2(255 char),
        target_display_name varchar2(255 char),
        last_processed number(19,0),
        display_name varchar2(128 char),
        name varchar2(255 char),
        type varchar2(255 char),
        primary key (id)
    );

    create table identityiq.spt_alert_action (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        alert_def clob,
        action_type varchar2(255 char),
        result_id varchar2(255 char),
        result clob,
        alert varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_alert_definition (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        match_config clob,
        disabled number(1,0),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        display_name varchar2(128 char),
        action_config clob,
        primary key (id)
    );

    create table identityiq.spt_app_dependencies (
        application varchar2(32 char) not null,
        dependency varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (application, idx)
    );

    create table identityiq.spt_app_secondary_owners (
        application varchar2(32 char) not null,
        elt varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (application, idx)
    );

    create table identityiq.spt_application (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        extended1 varchar2(450 char),
        extended2 varchar2(450 char),
        extended3 varchar2(450 char),
        extended4 varchar2(450 char),
        name varchar2(128 char) not null unique,
        proxied_name varchar2(128 char),
        app_cluster varchar2(255 char),
        icon varchar2(255 char),
        connector varchar2(255 char),
        type varchar2(255 char),
        features_string varchar2(512 char),
        aggregation_types varchar2(128 char),
        profile_class varchar2(255 char),
        authentication_resource number(1,0),
        case_insensitive number(1,0),
        authoritative number(1,0),
        maintenance_expiration number(19,0),
        logical number(1,0),
        supports_provisioning number(1,0),
        supports_authenticate number(1,0),
        supports_account_only number(1,0),
        supports_additional_accounts number(1,0),
        no_aggregation number(1,0),
        sync_provisioning number(1,0),
        attributes clob,
        templates clob,
        provisioning_forms clob,
        provisioning_config clob,
        manages_other_apps number(1,0) not null,
        proxy varchar2(32 char),
        correlation_rule varchar2(32 char),
        creation_rule varchar2(32 char),
        manager_correlation_rule varchar2(32 char),
        customization_rule varchar2(32 char),
        managed_attr_customize_rule varchar2(32 char),
        account_correlation_config varchar2(32 char),
        scorecard varchar2(32 char),
        target_source varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_application_activity (
        id varchar2(32 char) not null,
        time_stamp number(19,0),
        source_application varchar2(128 char),
        action varchar2(255 char),
        result varchar2(255 char),
        data_source varchar2(128 char),
        instance varchar2(128 char),
        username varchar2(128 char),
        target varchar2(128 char),
        info varchar2(512 char),
        identity_id varchar2(128 char),
        identity_name varchar2(128 char),
        assigned_scope varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_application_remediators (
        application varchar2(32 char) not null,
        elt varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (application, idx)
    );

    create table identityiq.spt_application_schema (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        object_type varchar2(255 char),
        aggregation_type varchar2(128 char),
        native_object_type varchar2(255 char),
        identity_attribute varchar2(255 char),
        display_attribute varchar2(255 char),
        instance_attribute varchar2(255 char),
        group_attribute varchar2(255 char),
        hierarchy_attribute varchar2(255 char),
        reference_attribute varchar2(255 char),
        include_permissions number(1,0),
        index_permissions number(1,0),
        child_hierarchy number(1,0),
        perm_remed_mod_type varchar2(255 char),
        config clob,
        features_string varchar2(512 char),
        association_schema_name varchar2(255 char),
        creation_rule varchar2(32 char),
        customization_rule varchar2(32 char),
        correlation_rule varchar2(32 char),
        refresh_rule varchar2(32 char),
        application varchar2(32 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_application_scorecard (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        incomplete number(1,0),
        composite_score number(10,0),
        attributes clob,
        items clob,
        application_id varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_arch_cert_item_apps (
        arch_cert_item_id varchar2(32 char) not null,
        application_name varchar2(255 char),
        idx number(10,0) not null,
        primary key (arch_cert_item_id, idx)
    );

    create table identityiq.spt_archived_cert_entity (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        entity clob,
        reason varchar2(255 char),
        explanation clob,
        certification_id varchar2(32 char),
        target_name varchar2(255 char),
        identity_name varchar2(450 char),
        account_group varchar2(450 char),
        application varchar2(255 char),
        native_identity varchar2(322 char),
        reference_attribute varchar2(255 char),
        schema_object_type varchar2(255 char),
        target_id varchar2(255 char),
        target_display_name varchar2(255 char),
        primary key (id)
    );

    create table identityiq.spt_archived_cert_item (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        type varchar2(255 char),
        sub_type varchar2(255 char),
        item_id varchar2(128 char),
        exception_application varchar2(128 char),
        exception_attribute_name varchar2(255 char),
        exception_attribute_value varchar2(2048 char),
        exception_permission_target varchar2(255 char),
        exception_permission_right varchar2(255 char),
        exception_native_identity varchar2(322 char),
        constraint_name varchar2(2000 char),
        policy varchar2(256 char),
        bundle varchar2(255 char),
        violation_summary varchar2(256 char),
        entitlements clob,
        parent_id varchar2(32 char),
        target_display_name varchar2(255 char),
        target_name varchar2(255 char),
        target_id varchar2(255 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_audit_config (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        disabled number(1,0),
        classes clob,
        resources clob,
        attributes clob,
        actions clob,
        primary key (id)
    );

    create table identityiq.spt_audit_event (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        interface varchar2(128 char),
        source varchar2(128 char),
        action varchar2(128 char),
        target varchar2(255 char),
        application varchar2(128 char),
        account_name varchar2(256 char),
        instance varchar2(128 char),
        attribute_name varchar2(128 char),
        attribute_value varchar2(450 char),
        tracking_id varchar2(128 char),
        attributes clob,
        string1 varchar2(450 char),
        string2 varchar2(450 char),
        string3 varchar2(450 char),
        string4 varchar2(450 char),
        primary key (id)
    );

    create table identityiq.spt_authentication_answer (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        identity_id varchar2(32 char),
        question_id varchar2(32 char),
        answer varchar2(512 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_authentication_question (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        question varchar2(1024 char),
        primary key (id)
    );

    create table identityiq.spt_batch_request (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        file_name varchar2(255 char),
        header varchar2(4000 char),
        run_date number(19,0),
        completed_date number(19,0),
        record_count number(10,0),
        completed_count number(10,0),
        error_count number(10,0),
        invalid_count number(10,0),
        message varchar2(4000 char),
        error_message clob,
        file_contents clob,
        status varchar2(255 char),
        run_config clob,
        primary key (id)
    );

    create table identityiq.spt_batch_request_item (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        request_data varchar2(4000 char),
        status varchar2(255 char),
        message varchar2(4000 char),
        error_message clob,
        result varchar2(255 char),
        identity_request_id varchar2(255 char),
        target_identity_id varchar2(255 char),
        batch_request_id varchar2(32 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_bundle (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        extended1 varchar2(450 char),
        extended2 varchar2(450 char),
        extended3 varchar2(450 char),
        extended4 varchar2(450 char),
        name varchar2(128 char) not null unique,
        display_name varchar2(128 char),
        displayable_name varchar2(128 char),
        disabled number(1,0),
        risk_score_weight number(10,0),
        activity_config clob,
        mining_statistics clob,
        attributes clob,
        type varchar2(128 char),
        join_rule varchar2(32 char),
        pending_workflow varchar2(32 char),
        role_index varchar2(32 char),
        selector clob,
        provisioning_plan clob,
        templates clob,
        provisioning_forms clob,
        or_profiles number(1,0),
        activation_date number(19,0),
        deactivation_date number(19,0),
        scorecard varchar2(32 char),
        pending_delete number(1,0),
        primary key (id)
    );

    create table identityiq.spt_bundle_archive (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        source_id varchar2(128 char),
        version number(10,0),
        creator varchar2(128 char),
        archive clob,
        primary key (id)
    );

    create table identityiq.spt_bundle_children (
        bundle varchar2(32 char) not null,
        child varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (bundle, idx)
    );

    create table identityiq.spt_bundle_permits (
        bundle varchar2(32 char) not null,
        child varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (bundle, idx)
    );

    create table identityiq.spt_bundle_requirements (
        bundle varchar2(32 char) not null,
        child varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (bundle, idx)
    );

    create table identityiq.spt_capability (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        display_name varchar2(128 char),
        applies_to_analyzer number(1,0),
        primary key (id)
    );

    create table identityiq.spt_capability_children (
        capability_id varchar2(32 char) not null,
        child_id varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (capability_id, idx)
    );

    create table identityiq.spt_capability_rights (
        capability_id varchar2(32 char) not null,
        right_id varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (capability_id, idx)
    );

    create table identityiq.spt_category (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        targets clob,
        primary key (id)
    );

    create table identityiq.spt_cert_action_assoc (
        parent_id varchar2(32 char) not null,
        child_id varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (parent_id, idx)
    );

    create table identityiq.spt_cert_item_applications (
        certification_item_id varchar2(32 char) not null,
        application_name varchar2(255 char),
        idx number(10,0) not null,
        primary key (certification_item_id, idx)
    );

    create table identityiq.spt_certification (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        attributes clob,
        iiqlock varchar2(128 char),
        name varchar2(256 char),
        short_name varchar2(255 char),
        description varchar2(1024 char),
        creator varchar2(255 char),
        complete number(1,0),
        complete_hierarchy number(1,0),
        signed number(19,0),
        approver_rule varchar2(512 char),
        finished number(19,0),
        expiration number(19,0),
        automatic_closing_date number(19,0),
        application_id varchar2(255 char),
        manager varchar2(255 char),
        group_definition varchar2(512 char),
        group_definition_id varchar2(128 char),
        group_definition_name varchar2(255 char),
        comments clob,
        error clob,
        entities_to_refresh clob,
        commands clob,
        activated number(19,0),
        total_entities number(10,0),
        excluded_entities number(10,0),
        completed_entities number(10,0),
        delegated_entities number(10,0),
        percent_complete number(10,0),
        certified_entities number(10,0),
        cert_req_entities number(10,0),
        overdue_entities number(10,0),
        total_items number(10,0),
        excluded_items number(10,0),
        completed_items number(10,0),
        delegated_items number(10,0),
        item_percent_complete number(10,0),
        certified_items number(10,0),
        cert_req_items number(10,0),
        overdue_items number(10,0),
        remediations_kicked_off number(10,0),
        remediations_completed number(10,0),
        total_violations number(10,0) not null,
        violations_allowed number(10,0) not null,
        violations_remediated number(10,0) not null,
        violations_acknowledged number(10,0) not null,
        total_roles number(10,0) not null,
        roles_approved number(10,0) not null,
        roles_allowed number(10,0) not null,
        roles_remediated number(10,0) not null,
        total_exceptions number(10,0) not null,
        exceptions_approved number(10,0) not null,
        exceptions_allowed number(10,0) not null,
        exceptions_remediated number(10,0) not null,
        total_grp_perms number(10,0) not null,
        grp_perms_approved number(10,0) not null,
        grp_perms_remediated number(10,0) not null,
        total_grp_memberships number(10,0) not null,
        grp_memberships_approved number(10,0) not null,
        grp_memberships_remediated number(10,0) not null,
        total_accounts number(10,0) not null,
        accounts_approved number(10,0) not null,
        accounts_allowed number(10,0) not null,
        accounts_remediated number(10,0) not null,
        total_profiles number(10,0) not null,
        profiles_approved number(10,0) not null,
        profiles_remediated number(10,0) not null,
        total_scopes number(10,0) not null,
        scopes_approved number(10,0) not null,
        scopes_remediated number(10,0) not null,
        total_capabilities number(10,0) not null,
        capabilities_approved number(10,0) not null,
        capabilities_remediated number(10,0) not null,
        total_permits number(10,0) not null,
        permits_approved number(10,0) not null,
        permits_remediated number(10,0) not null,
        total_requirements number(10,0) not null,
        requirements_approved number(10,0) not null,
        requirements_remediated number(10,0) not null,
        total_hierarchies number(10,0) not null,
        hierarchies_approved number(10,0) not null,
        hierarchies_remediated number(10,0) not null,
        type varchar2(255 char),
        task_schedule_id varchar2(255 char),
        trigger_id varchar2(128 char),
        certification_definition_id varchar2(128 char),
        phase varchar2(255 char),
        next_phase_transition number(19,0),
        phase_config clob,
        process_revokes_immediately number(1,0),
        next_remediation_scan number(19,0),
        entitlement_granularity varchar2(255 char),
        bulk_reassignment number(1,0),
        continuous number(1,0),
        continuous_config clob,
        next_cert_required_scan number(19,0),
        next_overdue_scan number(19,0),
        exclude_inactive number(1,0),
        parent varchar2(32 char),
        immutable number(1,0),
        electronically_signed number(1,0),
        self_cert_reassignment number(1,0),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_certification_action (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        owner_name varchar2(255 char),
        email_template varchar2(255 char),
        comments clob,
        expiration timestamp,
        work_item varchar2(255 char),
        completion_state varchar2(255 char),
        completion_comments clob,
        completion_user varchar2(128 char),
        actor_name varchar2(128 char),
        actor_display_name varchar2(128 char),
        acting_work_item varchar2(255 char),
        description varchar2(1024 char),
        status varchar2(255 char),
        decision_date number(19,0),
        decision_certification_id varchar2(128 char),
        reviewed number(1,0),
        bulk_certified number(1,0),
        mitigation_expiration number(19,0),
        remediation_action varchar2(255 char),
        remediation_details clob,
        additional_actions clob,
        revoke_account number(1,0),
        ready_for_remediation number(1,0),
        remediation_kicked_off number(1,0),
        remediation_completed number(1,0),
        source_action varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_certification_archive (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(256 char),
        certification_id varchar2(255 char),
        certification_group_id varchar2(255 char),
        signed number(19,0),
        expiration number(19,0),
        creator varchar2(128 char),
        comments clob,
        archive clob,
        immutable number(1,0),
        primary key (id)
    );

    create table identityiq.spt_certification_challenge (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        owner_name varchar2(255 char),
        email_template varchar2(255 char),
        comments clob,
        expiration timestamp,
        work_item varchar2(255 char),
        completion_state varchar2(255 char),
        completion_comments clob,
        completion_user varchar2(128 char),
        actor_name varchar2(128 char),
        actor_display_name varchar2(128 char),
        acting_work_item varchar2(255 char),
        description varchar2(1024 char),
        challenged number(1,0),
        decision varchar2(255 char),
        decision_comments clob,
        decider_name varchar2(255 char),
        challenge_decision_expired number(1,0),
        primary key (id)
    );

    create table identityiq.spt_certification_def_tags (
        cert_def_id varchar2(32 char) not null,
        elt varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (cert_def_id, idx)
    );

    create table identityiq.spt_certification_definition (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(255 char) not null unique,
        description varchar2(1024 char),
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_certification_delegation (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        owner_name varchar2(255 char),
        email_template varchar2(255 char),
        comments clob,
        expiration timestamp,
        work_item varchar2(255 char),
        completion_state varchar2(255 char),
        completion_comments clob,
        completion_user varchar2(128 char),
        actor_name varchar2(128 char),
        actor_display_name varchar2(128 char),
        acting_work_item varchar2(255 char),
        description varchar2(1024 char),
        review_required number(1,0),
        revoked number(1,0),
        primary key (id)
    );

    create table identityiq.spt_certification_entity (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        action varchar2(32 char),
        delegation varchar2(32 char),
        completed number(19,0),
        summary_status varchar2(255 char),
        continuous_state varchar2(255 char),
        last_decision number(19,0),
        next_continuous_state_change number(19,0),
        overdue_date number(19,0),
        has_differences number(1,0),
        action_required number(1,0),
        target_display_name varchar2(255 char),
        target_name varchar2(255 char),
        target_id varchar2(255 char),
        custom1 varchar2(450 char),
        custom2 varchar2(450 char),
        custom_map clob,
        type varchar2(255 char),
        bulk_certified number(1,0),
        attributes clob,
        identity_id varchar2(450 char),
        firstname varchar2(255 char),
        lastname varchar2(255 char),
        composite_score number(10,0),
        snapshot_id varchar2(255 char),
        differences clob,
        new_user number(1,0),
        account_group varchar2(450 char),
        application varchar2(255 char),
        native_identity varchar2(322 char),
        reference_attribute varchar2(255 char),
        schema_object_type varchar2(255 char),
        certification_id varchar2(32 char),
        pending_certification varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_certification_group (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(256 char),
        type varchar2(255 char),
        status varchar2(255 char),
        attributes clob,
        total_certifications number(10,0),
        percent_complete number(10,0),
        completed_certifications number(10,0),
        certification_definition varchar2(32 char),
        messages clob,
        primary key (id)
    );

    create table identityiq.spt_certification_groups (
        certification_id varchar2(32 char) not null,
        group_id varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (certification_id, idx)
    );

    create table identityiq.spt_certification_item (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        action varchar2(32 char),
        delegation varchar2(32 char),
        completed number(19,0),
        summary_status varchar2(255 char),
        continuous_state varchar2(255 char),
        last_decision number(19,0),
        next_continuous_state_change number(19,0),
        overdue_date number(19,0),
        has_differences number(1,0),
        action_required number(1,0),
        target_display_name varchar2(255 char),
        target_name varchar2(255 char),
        target_id varchar2(255 char),
        custom1 varchar2(450 char),
        custom2 varchar2(450 char),
        custom_map clob,
        bundle varchar2(255 char),
        type varchar2(255 char),
        sub_type varchar2(255 char),
        bundle_assignment_id varchar2(128 char),
        certification_entity_id varchar2(32 char),
        exception_entitlements varchar2(32 char),
        needs_refresh number(1,0),
        exception_application varchar2(128 char),
        exception_attribute_name varchar2(255 char),
        exception_attribute_value varchar2(2048 char),
        exception_permission_target varchar2(255 char),
        exception_permission_right varchar2(255 char),
        policy_violation clob,
        violation_summary varchar2(256 char),
        challenge varchar2(32 char),
        wake_up_date number(19,0),
        reminders_sent number(10,0),
        needs_continuous_flush number(1,0),
        phase varchar2(255 char),
        next_phase_transition number(19,0),
        finished_date number(19,0),
        attributes clob,
        extended1 varchar2(450 char),
        extended2 varchar2(450 char),
        extended3 varchar2(450 char),
        extended4 varchar2(450 char),
        extended5 varchar2(450 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_certification_tags (
        certification_id varchar2(32 char) not null,
        elt varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (certification_id, idx)
    );

    create table identityiq.spt_certifiers (
        certification_id varchar2(32 char) not null,
        certifier varchar2(255 char),
        idx number(10,0) not null,
        primary key (certification_id, idx)
    );

    create table identityiq.spt_child_certification_ids (
        certification_archive_id varchar2(32 char) not null,
        child_id varchar2(255 char),
        idx number(10,0) not null,
        primary key (certification_archive_id, idx)
    );

    create table identityiq.spt_configuration (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_correlation_config (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(256 char),
        attribute_assignments clob,
        direct_assignments clob,
        primary key (id)
    );

    create table identityiq.spt_custom (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        description varchar2(1024 char),
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_dashboard_content (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        title varchar2(255 char),
        source varchar2(255 char),
        required number(1,0),
        region_size varchar2(255 char),
        source_task_id varchar2(128 char),
        type varchar2(255 char),
        parent varchar2(32 char),
        arguments clob,
        enabling_attributes clob,
        primary key (id)
    );

    create table identityiq.spt_dashboard_content_rights (
        dashboard_content_id varchar2(32 char) not null,
        right_id varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (dashboard_content_id, idx)
    );

    create table identityiq.spt_dashboard_layout (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        type varchar2(255 char),
        regions clob,
        primary key (id)
    );

    create table identityiq.spt_dashboard_reference (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        identity_dashboard_id varchar2(32 char),
        content_id varchar2(32 char),
        region varchar2(128 char),
        order_id number(10,0),
        minimized number(1,0),
        arguments clob,
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_database_version (
        name varchar2(255 char) not null,
        system_version varchar2(128 char),
        schema_version varchar2(128 char),
        primary key (name)
    );

    create table identityiq.spt_deleted_object (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        uuid varchar2(128 char),
        name varchar2(128 char),
        native_identity varchar2(322 char) not null,
        last_refresh number(19,0),
        object_type varchar2(128 char),
        application varchar2(32 char),
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_dictionary (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        primary key (id)
    );

    create table identityiq.spt_dictionary_term (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        value varchar2(128 char) not null unique,
        dictionary_id varchar2(32 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_dynamic_scope (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        selector clob,
        allow_all number(1,0),
        population_request_authority clob,
        role_request_control varchar2(32 char),
        application_request_control varchar2(32 char),
        managed_attr_request_control varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_dynamic_scope_exclusions (
        dynamic_scope_id varchar2(32 char) not null,
        identity_id varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (dynamic_scope_id, idx)
    );

    create table identityiq.spt_dynamic_scope_inclusions (
        dynamic_scope_id varchar2(32 char) not null,
        identity_id varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (dynamic_scope_id, idx)
    );

    create table identityiq.spt_email_template (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        from_address varchar2(255 char),
        to_address varchar2(255 char),
        cc_address varchar2(255 char),
        bcc_address varchar2(255 char),
        subject varchar2(255 char),
        body clob,
        signature clob,
        primary key (id)
    );

    create table identityiq.spt_email_template_properties (
        id varchar2(32 char) not null,
        value varchar2(255 char),
        name varchar2(78 char) not null,
        primary key (id, name)
    );

    create table identityiq.spt_entitlement_group (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        application varchar2(32 char),
        instance varchar2(128 char),
        native_identity varchar2(322 char),
        display_name varchar2(128 char),
        account_only number(1,0) not null,
        attributes clob,
        identity_id varchar2(32 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_entitlement_snapshot (
        id varchar2(32 char) not null,
        application varchar2(255 char),
        instance varchar2(128 char),
        native_identity varchar2(322 char),
        display_name varchar2(450 char),
        account_only number(1,0) not null,
        attributes clob,
        certification_item_id varchar2(32 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_file_bucket (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        file_index number(10,0),
        parent_id varchar2(32 char),
        data blob,
        primary key (id)
    );

    create table identityiq.spt_form (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(4000 char),
        hidden number(1,0),
        type varchar2(255 char),
        application varchar2(32 char),
        sections clob,
        buttons clob,
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_full_text_index (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        iiqlock varchar2(128 char),
        last_refresh number(19,0),
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_generic_constraint (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(2000 char),
        description varchar2(4000 char),
        policy varchar2(32 char),
        violation_owner_type varchar2(255 char),
        violation_owner varchar2(32 char),
        violation_owner_rule varchar2(32 char),
        compensating_control clob,
        disabled number(1,0),
        weight number(10,0),
        remediation_advice clob,
        violation_summary clob,
        arguments clob,
        selectors clob,
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_group_definition (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(255 char),
        description varchar2(1024 char),
        filter clob,
        last_refresh number(19,0),
        null_group number(1,0),
        indexed number(1,0),
        private number(1,0),
        factory varchar2(32 char),
        group_index varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_group_factory (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(255 char),
        description varchar2(1024 char),
        factory_attribute varchar2(255 char),
        enabled number(1,0),
        last_refresh number(19,0),
        group_owner_rule varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_group_index (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        incomplete number(1,0),
        composite_score number(10,0),
        attributes clob,
        items clob,
        business_role_score number(10,0),
        raw_business_role_score number(10,0),
        entitlement_score number(10,0),
        raw_entitlement_score number(10,0),
        policy_score number(10,0),
        raw_policy_score number(10,0),
        certification_score number(10,0),
        total_violations number(10,0),
        total_remediations number(10,0),
        total_delegations number(10,0),
        total_mitigations number(10,0),
        total_approvals number(10,0),
        definition varchar2(32 char),
        name varchar2(255 char),
        member_count number(10,0),
        band_count number(10,0),
        band1 number(10,0),
        band2 number(10,0),
        band3 number(10,0),
        band4 number(10,0),
        band5 number(10,0),
        band6 number(10,0),
        band7 number(10,0),
        band8 number(10,0),
        band9 number(10,0),
        band10 number(10,0),
        certifications_due number(10,0),
        certifications_on_time number(10,0),
        primary key (id)
    );

    create table identityiq.spt_group_permissions (
        entitlement_group_id varchar2(32 char) not null,
        target varchar2(255 char),
        annotation varchar2(255 char),
        rights varchar2(4000 char),
        attributes clob,
        idx number(10,0) not null,
        primary key (entitlement_group_id, idx)
    );

    create table identityiq.spt_identity (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        extended1 varchar2(450 char),
        extended2 varchar2(450 char),
        extended3 varchar2(450 char),
        extended4 varchar2(450 char),
        extended5 varchar2(450 char),
        extended6 varchar2(450 char),
        extended7 varchar2(450 char),
        extended8 varchar2(450 char),
        extended9 varchar2(450 char),
        extended10 varchar2(450 char),
        extended_identity1 varchar2(32 char),
        extended_identity2 varchar2(32 char),
        extended_identity3 varchar2(32 char),
        extended_identity4 varchar2(32 char),
        extended_identity5 varchar2(32 char),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        protected number(1,0),
        needs_refresh number(1,0),
        iiqlock varchar2(128 char),
        attributes clob,
        manager varchar2(32 char),
        display_name varchar2(128 char),
        firstname varchar2(128 char),
        lastname varchar2(128 char),
        email varchar2(128 char),
        manager_status number(1,0),
        inactive number(1,0),
        last_login number(19,0),
        last_refresh number(19,0),
        password varchar2(450 char),
        password_expiration number(19,0),
        password_history varchar2(2000 char),
        bundle_summary varchar2(2000 char),
        assigned_role_summary varchar2(2000 char),
        correlated number(1,0),
        correlated_overridden number(1,0),
        type varchar2(128 char),
        software_version varchar2(128 char),
        administrator varchar2(32 char),
        auth_lock_start number(19,0),
        failed_auth_question_attempts number(10,0),
        failed_login_attempts number(10,0),
        controls_assigned_scope number(1,0),
        certifications clob,
        activity_config clob,
        preferences clob,
        scorecard varchar2(32 char),
        uipreferences varchar2(32 char),
        attribute_meta_data clob,
        workgroup number(1,0),
        primary key (id)
    );

    create table identityiq.spt_identity_archive (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        source_id varchar2(128 char),
        version number(10,0),
        creator varchar2(128 char),
        archive clob,
        primary key (id)
    );

    create table identityiq.spt_identity_assigned_roles (
        identity_id varchar2(32 char) not null,
        bundle varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (identity_id, idx)
    );

    create table identityiq.spt_identity_bundles (
        identity_id varchar2(32 char) not null,
        bundle varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (identity_id, idx)
    );

    create table identityiq.spt_identity_capabilities (
        identity_id varchar2(32 char) not null,
        capability_id varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (identity_id, idx)
    );

    create table identityiq.spt_identity_controlled_scopes (
        identity_id varchar2(32 char) not null,
        scope_id varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (identity_id, idx)
    );

    create table identityiq.spt_identity_dashboard (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        description varchar2(1024 char),
        identity_id varchar2(32 char),
        type varchar2(255 char),
        layout varchar2(32 char),
        arguments clob,
        primary key (id)
    );

    create table identityiq.spt_identity_entitlement (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        start_date number(19,0),
        end_date number(19,0),
        attributes clob,
        name varchar2(255 char),
        value varchar2(450 char),
        annotation varchar2(450 char),
        display_name varchar2(255 char),
        native_identity varchar2(450 char),
        instance varchar2(128 char),
        application varchar2(32 char),
        identity_id varchar2(32 char) not null,
        aggregation_state varchar2(255 char),
        source varchar2(64 char),
        assigned number(1,0),
        allowed number(1,0),
        granted_by_role number(1,0),
        assigner varchar2(128 char),
        assignment_id varchar2(64 char),
        assignment_note varchar2(1024 char),
        type varchar2(255 char),
        request_item varchar2(32 char),
        pending_request_item varchar2(32 char),
        certification_item varchar2(32 char),
        pending_certification_item varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_identity_external_attr (
        id varchar2(32 char) not null,
        object_id varchar2(64 char),
        attribute_name varchar2(64 char),
        value varchar2(322 char),
        primary key (id)
    );

    create table identityiq.spt_identity_history_item (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        identity_id varchar2(32 char),
        type varchar2(255 char),
        certifiable_descriptor clob,
        action clob,
        certification_link clob,
        comments clob,
        certification_type varchar2(255 char),
        status varchar2(255 char),
        actor varchar2(128 char),
        entry_date number(19,0),
        application varchar2(128 char),
        instance varchar2(128 char),
        account varchar2(128 char),
        native_identity varchar2(322 char),
        attribute varchar2(450 char),
        value varchar2(450 char),
        policy varchar2(255 char),
        constraint_name varchar2(2000 char),
        role varchar2(255 char),
        primary key (id)
    );

    create table identityiq.spt_identity_request (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(255 char),
        state varchar2(255 char),
        type varchar2(255 char),
        source varchar2(255 char),
        target_id varchar2(128 char),
        target_display_name varchar2(255 char),
        target_class varchar2(255 char),
        requester_display_name varchar2(255 char),
        requester_id varchar2(128 char),
        end_date number(19,0),
        verified number(19,0),
        priority varchar2(128 char),
        completion_status varchar2(128 char),
        execution_status varchar2(128 char),
        has_messages number(1,0) not null,
        external_ticket_id varchar2(128 char),
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_identity_request_item (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        start_date number(19,0),
        end_date number(19,0),
        attributes clob,
        name varchar2(255 char),
        value varchar2(450 char),
        annotation varchar2(450 char),
        display_name varchar2(255 char),
        native_identity varchar2(450 char),
        instance varchar2(128 char),
        application varchar2(255 char),
        owner_name varchar2(128 char),
        approver_name varchar2(128 char),
        operation varchar2(128 char),
        retries number(10,0),
        provisioning_engine varchar2(255 char),
        approval_state varchar2(128 char),
        provisioning_state varchar2(128 char),
        compilation_status varchar2(128 char),
        expansion_cause varchar2(128 char),
        identity_request_id varchar2(32 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_identity_role_metadata (
        identity_id varchar2(32 char) not null,
        role_metadata_id varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (identity_id, idx)
    );

    create table identityiq.spt_identity_snapshot (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        identity_id varchar2(255 char),
        identity_name varchar2(255 char),
        summary varchar2(2000 char),
        differences varchar2(2000 char),
        applications varchar2(2000 char),
        scorecard clob,
        attributes clob,
        bundles clob,
        exceptions clob,
        links clob,
        violations clob,
        assigned_roles clob,
        primary key (id)
    );

    create table identityiq.spt_identity_trigger (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(256 char),
        description varchar2(1024 char),
        disabled number(1,0),
        type varchar2(255 char),
        rule_id varchar2(32 char),
        attribute_name varchar2(256 char),
        old_value_filter varchar2(256 char),
        new_value_filter varchar2(256 char),
        selector clob,
        handler varchar2(256 char),
        parameters clob,
        primary key (id)
    );

    create table identityiq.spt_identity_workgroups (
        identity_id varchar2(32 char) not null,
        workgroup varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (identity_id, idx)
    );

    create table identityiq.spt_integration_config (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(4000 char),
        executor varchar2(255 char),
        exec_style varchar2(255 char),
        role_sync_style varchar2(255 char),
        template number(1,0),
        signature clob,
        attributes clob,
        plan_initializer varchar2(32 char),
        resources clob,
        application_id varchar2(32 char),
        role_sync_filter clob,
        container_id varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_jasper_files (
        result varchar2(32 char) not null,
        elt varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (result, idx)
    );

    create table identityiq.spt_jasper_page_bucket (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        bucket_number number(10,0),
        handler_id varchar2(128 char),
        xml clob,
        primary key (id)
    );

    create table identityiq.spt_jasper_result (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        handler_id varchar2(128 char),
        print_xml clob,
        page_count number(10,0),
        pages_per_bucket number(10,0),
        handler_page_count number(10,0),
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_jasper_template (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        design_xml clob,
        primary key (id)
    );

    create table identityiq.spt_link (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        key1 varchar2(450 char),
        key2 varchar2(255 char),
        key3 varchar2(255 char),
        key4 varchar2(255 char),
        extended1 varchar2(450 char),
        extended2 varchar2(450 char),
        extended3 varchar2(450 char),
        extended4 varchar2(450 char),
        extended5 varchar2(450 char),
        uuid varchar2(128 char),
        display_name varchar2(128 char),
        instance varchar2(128 char),
        native_identity varchar2(322 char) not null,
        last_refresh number(19,0),
        last_target_aggregation number(19,0),
        manually_correlated number(1,0),
        entitlements number(1,0) not null,
        identity_id varchar2(32 char),
        application varchar2(32 char),
        attributes clob,
        password_history varchar2(2000 char),
        component_ids varchar2(256 char),
        attribute_meta_data clob,
        primary key (id)
    );

    create table identityiq.spt_link_external_attr (
        id varchar2(32 char) not null,
        object_id varchar2(64 char),
        attribute_name varchar2(64 char),
        value varchar2(322 char),
        primary key (id)
    );

    create table identityiq.spt_localized_attribute (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        name varchar2(255 char),
        locale varchar2(128 char),
        attribute varchar2(128 char),
        value varchar2(1024 char),
        target_class varchar2(255 char),
        target_name varchar2(255 char),
        target_id varchar2(255 char),
        primary key (id)
    );

    create table identityiq.spt_managed_attr_inheritance (
        managedattribute varchar2(32 char) not null,
        inherits_from varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (managedattribute, idx)
    );

    create table identityiq.spt_managed_attr_perms (
        managedattribute varchar2(32 char) not null,
        target varchar2(255 char),
        rights varchar2(4000 char),
        annotation varchar2(255 char),
        attributes clob,
        idx number(10,0) not null,
        primary key (managedattribute, idx)
    );

    create table identityiq.spt_managed_attr_target_perms (
        managedattribute varchar2(32 char) not null,
        target varchar2(255 char),
        rights varchar2(4000 char),
        annotation varchar2(255 char),
        attributes clob,
        idx number(10,0) not null,
        primary key (managedattribute, idx)
    );

    create table identityiq.spt_managed_attribute (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        extended1 varchar2(450 char),
        extended2 varchar2(450 char),
        extended3 varchar2(450 char),
        purview varchar2(128 char),
        application varchar2(32 char),
        type varchar2(255 char),
        aggregated number(1,0),
        attribute varchar2(322 char),
        value varchar2(450 char),
        hash varchar2(128 char) not null unique,
        display_name varchar2(450 char),
        displayable_name varchar2(450 char),
        uuid varchar2(128 char),
        attributes clob,
        requestable number(1,0),
        uncorrelated number(1,0),
        last_refresh number(19,0),
        last_target_aggregation number(19,0),
        key1 varchar2(128 char),
        key2 varchar2(128 char),
        key3 varchar2(128 char),
        key4 varchar2(128 char),
        primary key (id)
    );

    create table identityiq.spt_message_template (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        text clob,
        primary key (id)
    );

    create table identityiq.spt_mining_config (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        arguments clob,
        app_constraints clob,
        primary key (id)
    );

    create table identityiq.spt_mitigation_expiration (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        expiration number(19,0) not null,
        mitigator varchar2(32 char) not null,
        comments clob,
        identity_id varchar2(32 char),
        certification_link clob,
        certifiable_descriptor clob,
        action varchar2(255 char),
        action_parameters clob,
        last_action_date number(19,0),
        role_name varchar2(128 char),
        policy varchar2(128 char),
        constraint_name varchar2(2000 char),
        application varchar2(128 char),
        instance varchar2(128 char),
        native_identity varchar2(322 char),
        account_display_name varchar2(128 char),
        attribute_name varchar2(450 char),
        attribute_value varchar2(450 char),
        permission number(1,0),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_monitoring_statistic (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        display_name varchar2(128 char),
        description varchar2(1024 char),
        value varchar2(4000 char),
        value_type varchar2(128 char),
        type varchar2(128 char),
        attributes clob,
        template number(1,0),
        primary key (id)
    );

    create table identityiq.spt_monitoring_statistic_tags (
        statistic_id varchar2(32 char) not null,
        elt varchar2(32 char) not null
    );

    create table identityiq.spt_object_config (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        object_attributes clob,
        config_attributes clob,
        primary key (id)
    );

    create table identityiq.spt_partition_result (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        stack clob,
        attributes clob,
        launcher varchar2(255 char),
        host varchar2(255 char),
        launched number(19,0),
        progress varchar2(255 char),
        percent_complete number(10,0),
        type varchar2(255 char),
        messages clob,
        completed number(19,0),
        task_result varchar2(32 char),
        name varchar2(255 char) not null unique,
        task_terminated number(1,0),
        completion_status varchar2(255 char),
        primary key (id)
    );

    create table identityiq.spt_password_policy (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        name varchar2(128 char) not null unique,
        description varchar2(512 char),
        password_constraints clob,
        primary key (id)
    );

    create table identityiq.spt_password_policy_holder (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        policy varchar2(32 char),
        selector clob,
        application varchar2(32 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_persisted_file (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(256 char),
        description varchar2(1024 char),
        content_type varchar2(128 char),
        content_length number(19,0),
        primary key (id)
    );

    create table identityiq.spt_plugin (
        id varchar2(32 char) not null,
        name varchar2(255 char),
        created number(19,0),
        modified number(19,0),
        install_date number(19,0),
        display_name varchar2(255 char),
        version varchar2(255 char),
        disabled number(1,0),
        right_required varchar2(255 char),
        min_system_version varchar2(255 char),
        max_system_version varchar2(255 char),
        attributes clob,
        position number(10,0),
        certification_level varchar2(255 char),
        file_id varchar2(32 char) unique,
        primary key (id)
    );

    create table identityiq.spt_policy (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        template number(1,0),
        type varchar2(255 char),
        type_key varchar2(255 char),
        executor varchar2(255 char),
        config_page varchar2(255 char),
        certification_actions varchar2(255 char),
        violation_owner_type varchar2(255 char),
        violation_owner varchar2(32 char),
        violation_owner_rule varchar2(32 char),
        state varchar2(255 char),
        arguments clob,
        signature clob,
        alert clob,
        primary key (id)
    );

    create table identityiq.spt_policy_violation (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(2000 char),
        description varchar2(4000 char),
        identity_id varchar2(32 char),
        pending_workflow varchar2(32 char),
        renderer varchar2(255 char),
        active number(1,0),
        policy_id varchar2(255 char),
        policy_name varchar2(255 char),
        constraint_id varchar2(255 char),
        status varchar2(255 char),
        constraint_name varchar2(2000 char),
        left_bundles clob,
        right_bundles clob,
        activity_id varchar2(255 char),
        bundles_marked_for_remediation clob,
        entitlements_marked_for_remed clob,
        mitigator varchar2(255 char),
        arguments clob,
        primary key (id)
    );

    create table identityiq.spt_process_log (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        process_name varchar2(128 char),
        case_id varchar2(128 char),
        workflow_case_name varchar2(450 char),
        launcher varchar2(128 char),
        case_status varchar2(128 char),
        step_name varchar2(128 char),
        approval_name varchar2(128 char),
        owner_name varchar2(128 char),
        start_time number(19,0),
        end_time number(19,0),
        step_duration number(10,0),
        escalations number(10,0),
        primary key (id)
    );

    create table identityiq.spt_profile (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        description varchar2(1024 char),
        bundle_id varchar2(32 char),
        disabled number(1,0),
        account_type varchar2(128 char),
        application varchar2(32 char),
        attributes clob,
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_profile_constraints (
        profile varchar2(32 char) not null,
        elt clob,
        idx number(10,0) not null,
        primary key (profile, idx)
    );

    create table identityiq.spt_profile_permissions (
        profile varchar2(32 char) not null,
        target varchar2(255 char),
        rights varchar2(4000 char),
        attributes clob,
        idx number(10,0) not null,
        primary key (profile, idx)
    );

    create table identityiq.spt_provisioning_request (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        identity_id varchar2(32 char),
        target varchar2(128 char),
        requester varchar2(128 char),
        expiration number(19,0),
        provisioning_plan clob,
        primary key (id)
    );

    create table identityiq.spt_provisioning_transaction (
        id varchar2(32 char) not null,
        name varchar2(255 char),
        created number(19,0),
        modified number(19,0),
        operation varchar2(255 char),
        source varchar2(255 char),
        application_name varchar2(255 char),
        identity_name varchar2(255 char),
        identity_display_name varchar2(255 char),
        native_identity varchar2(322 char),
        account_display_name varchar2(322 char),
        attributes clob,
        integration varchar2(255 char),
        certification_id varchar2(32 char),
        forced number(1,0),
        type varchar2(255 char),
        status varchar2(255 char),
        primary key (id)
    );

    create table identityiq.spt_quick_link (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        message_key varchar2(128 char),
        description varchar2(1024 char),
        action varchar2(128 char),
        css_class varchar2(128 char),
        hidden number(1,0),
        category varchar2(128 char),
        ordering number(10,0),
        arguments clob,
        primary key (id)
    );

    create table identityiq.spt_quick_link_options (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        allow_bulk number(1,0),
        allow_other number(1,0),
        allow_self number(1,0),
        options clob,
        dynamic_scope varchar2(32 char) not null,
        quick_link varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_remediation_item (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        description varchar2(1024 char),
        remediation_entity_type varchar2(255 char),
        work_item_id varchar2(32 char),
        certification_item varchar2(255 char),
        assignee varchar2(32 char),
        remediation_identity varchar2(255 char),
        remediation_details clob,
        completion_comments clob,
        completion_date number(19,0),
        assimilated number(1,0),
        comments clob,
        attributes clob,
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_remote_login_token (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null,
        creator varchar2(128 char) not null,
        remote_host varchar2(128 char),
        expiration number(19,0),
        primary key (id)
    );

    create table identityiq.spt_request (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        stack clob,
        attributes clob,
        launcher varchar2(255 char),
        host varchar2(255 char),
        launched number(19,0),
        progress varchar2(255 char),
        percent_complete number(10,0),
        type varchar2(255 char),
        messages clob,
        completed number(19,0),
        expiration number(19,0),
        name varchar2(450 char),
        definition varchar2(32 char),
        task_result varchar2(32 char),
        phase number(10,0),
        dependent_phase number(10,0),
        next_launch number(19,0),
        retry_count number(10,0),
        retry_interval number(10,0),
        string1 varchar2(2048 char),
        completion_status varchar2(255 char),
        primary key (id)
    );

    create table identityiq.spt_request_arguments (
        signature varchar2(32 char) not null,
        name varchar2(255 char),
        type varchar2(255 char),
        filter_string varchar2(255 char),
        description clob,
        prompt clob,
        multi number(1,0),
        required number(1,0),
        idx number(10,0) not null,
        primary key (signature, idx)
    );

    create table identityiq.spt_request_definition (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(4000 char),
        executor varchar2(255 char),
        form_path varchar2(128 char),
        template number(1,0),
        hidden number(1,0),
        result_expiration number(10,0),
        progress_interval number(10,0),
        sub_type varchar2(128 char),
        type varchar2(255 char),
        progress_mode varchar2(255 char),
        arguments clob,
        parent varchar2(32 char),
        retry_max number(10,0),
        retry_interval number(10,0),
        sig_description clob,
        return_type varchar2(255 char),
        primary key (id)
    );

    create table identityiq.spt_request_definition_rights (
        request_definition_id varchar2(32 char) not null,
        right_id varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (request_definition_id, idx)
    );

    create table identityiq.spt_request_returns (
        signature varchar2(32 char) not null,
        name varchar2(255 char),
        type varchar2(255 char),
        filter_string varchar2(255 char),
        description clob,
        prompt clob,
        multi number(1,0),
        idx number(10,0) not null,
        primary key (signature, idx)
    );

    create table identityiq.spt_request_state (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        name varchar2(450 char),
        attributes clob,
        request_id varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_resource_event (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        application varchar2(32 char),
        provisioning_plan clob,
        primary key (id)
    );

    create table identityiq.spt_right (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        display_name varchar2(128 char),
        primary key (id)
    );

    create table identityiq.spt_right_config (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        rights clob,
        primary key (id)
    );

    create table identityiq.spt_role_change_event (
        id varchar2(32 char) not null,
        created number(19,0),
        bundle_id varchar2(128 char),
        bundle_name varchar2(128 char),
        provisioning_plan clob,
        bundle_deleted number(1,0),
        primary key (id)
    );

    create table identityiq.spt_role_index (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        incomplete number(1,0),
        composite_score number(10,0),
        attributes clob,
        items clob,
        bundle varchar2(32 char),
        assigned_count number(10,0),
        detected_count number(10,0),
        associated_to_role number(1,0),
        last_certified_membership number(19,0),
        last_certified_composition number(19,0),
        last_assigned number(19,0),
        entitlement_count number(10,0),
        entitlement_count_inheritance number(10,0),
        primary key (id)
    );

    create table identityiq.spt_role_metadata (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        role varchar2(32 char),
        name varchar2(255 char),
        additional_entitlements number(1,0),
        missing_required number(1,0),
        assigned number(1,0),
        detected number(1,0),
        detected_exception number(1,0),
        primary key (id)
    );

    create table identityiq.spt_role_mining_result (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        pending number(1,0),
        config clob,
        roles clob,
        primary key (id)
    );

    create table identityiq.spt_role_scorecard (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        role_id varchar2(32 char),
        members number(10,0),
        members_extra_ent number(10,0),
        members_missing_req number(10,0),
        detected number(10,0),
        detected_exc number(10,0),
        provisioned_ent number(10,0),
        permitted_ent number(10,0),
        primary key (id)
    );

    create table identityiq.spt_rule (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        language varchar2(255 char),
        source clob,
        type varchar2(255 char),
        attributes clob,
        sig_description clob,
        return_type varchar2(255 char),
        primary key (id)
    );

    create table identityiq.spt_rule_dependencies (
        rule_id varchar2(32 char) not null,
        dependency varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (rule_id, idx)
    );

    create table identityiq.spt_rule_registry (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        templates clob,
        primary key (id)
    );

    create table identityiq.spt_rule_registry_callouts (
        rule_registry_id varchar2(32 char) not null,
        rule_id varchar2(32 char) not null,
        callout varchar2(78 char) not null,
        primary key (rule_registry_id, callout)
    );

    create table identityiq.spt_rule_signature_arguments (
        signature varchar2(32 char) not null,
        name varchar2(255 char),
        type varchar2(255 char),
        filter_string varchar2(255 char),
        description clob,
        prompt clob,
        multi number(1,0),
        idx number(10,0) not null,
        primary key (signature, idx)
    );

    create table identityiq.spt_rule_signature_returns (
        signature varchar2(32 char) not null,
        name varchar2(255 char),
        type varchar2(255 char),
        filter_string varchar2(255 char),
        description clob,
        prompt clob,
        multi number(1,0),
        idx number(10,0) not null,
        primary key (signature, idx)
    );

    create table identityiq.spt_schema_attributes (
        applicationschema varchar2(32 char) not null,
        name varchar2(255 char),
        type varchar2(255 char),
        description clob,
        required number(1,0),
        entitlement number(1,0),
        is_group number(1,0),
        managed number(1,0),
        multi_valued number(1,0),
        minable number(1,0),
        indexed number(1,0),
        correlation_key number(10,0),
        source varchar2(255 char),
        internal_name varchar2(255 char),
        default_value varchar2(255 char),
        remed_mod_type varchar2(255 char),
        schema_object_type varchar2(255 char),
        object_mapping varchar2(255 char),
        idx number(10,0) not null,
        primary key (applicationschema, idx)
    );

    create table identityiq.spt_scope (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null,
        display_name varchar2(128 char),
        parent_id varchar2(32 char),
        manually_created number(1,0),
        dormant number(1,0),
        path varchar2(450 char),
        dirty number(1,0),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_score_config (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        maximum_score number(10,0),
        maximum_number_of_bands number(10,0),
        application_configs clob,
        identity_scores clob,
        application_scores clob,
        bands clob,
        right_config varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_scorecard (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        incomplete number(1,0),
        composite_score number(10,0),
        attributes clob,
        items clob,
        business_role_score number(10,0),
        raw_business_role_score number(10,0),
        entitlement_score number(10,0),
        raw_entitlement_score number(10,0),
        policy_score number(10,0),
        raw_policy_score number(10,0),
        certification_score number(10,0),
        total_violations number(10,0),
        total_remediations number(10,0),
        total_delegations number(10,0),
        total_mitigations number(10,0),
        total_approvals number(10,0),
        identity_id varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_server (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        extended1 varchar2(255 char),
        name varchar2(128 char) not null unique,
        heartbeat number(19,0),
        inactive number(1,0),
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_server_statistic (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        name varchar2(128 char) not null,
        snapshot_name varchar2(128 char),
        value varchar2(4000 char),
        value_type varchar2(128 char),
        host varchar2(32 char),
        attributes clob,
        target varchar2(128 char),
        target_type varchar2(128 char),
        monitoring_statistic varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_service_definition (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        executor varchar2(255 char),
        exec_interval number(10,0),
        hosts varchar2(1024 char),
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_service_status (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        name varchar2(128 char) not null unique,
        description varchar2(1024 char),
        definition varchar2(32 char),
        host varchar2(255 char),
        last_start number(19,0),
        last_end number(19,0),
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_sign_off_history (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        sign_date number(19,0),
        signer_id varchar2(128 char),
        signer_name varchar2(128 char),
        signer_display_name varchar2(128 char),
        application varchar2(128 char),
        account varchar2(128 char),
        text clob,
        electronic_sign number(1,0),
        certification_id varchar2(32 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_snapshot_permissions (
        snapshot varchar2(32 char) not null,
        target varchar2(255 char),
        rights varchar2(4000 char),
        attributes clob,
        idx number(10,0) not null,
        primary key (snapshot, idx)
    );

    create table identityiq.spt_sodconstraint (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(2000 char),
        description varchar2(4000 char),
        policy varchar2(32 char),
        violation_owner_type varchar2(255 char),
        violation_owner varchar2(32 char),
        violation_owner_rule varchar2(32 char),
        compensating_control clob,
        disabled number(1,0),
        weight number(10,0),
        remediation_advice clob,
        violation_summary clob,
        arguments clob,
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_sodconstraint_left (
        sodconstraint varchar2(32 char) not null,
        businessrole varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (sodconstraint, idx)
    );

    create table identityiq.spt_sodconstraint_right (
        sodconstraint varchar2(32 char) not null,
        businessrole varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (sodconstraint, idx)
    );

    create table identityiq.spt_sync_roles (
        config varchar2(32 char) not null,
        bundle varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (config, idx)
    );

    create table identityiq.spt_syslog_event (
        id varchar2(32 char) not null,
        created number(19,0),
        quick_key varchar2(12 char),
        event_level varchar2(6 char),
        classname varchar2(128 char),
        line_number varchar2(6 char),
        message varchar2(450 char),
        thread varchar2(128 char),
        server varchar2(128 char),
        username varchar2(128 char),
        stacktrace clob,
        primary key (id)
    );

    create table identityiq.spt_tag (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        primary key (id)
    );

    create table identityiq.spt_target (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        extended1 varchar2(255 char),
        name varchar2(512 char),
        native_owner_id varchar2(128 char),
        target_source varchar2(32 char),
        application varchar2(32 char),
        target_host varchar2(1024 char),
        display_name varchar2(400 char),
        full_path clob,
        unique_name_hash varchar2(128 char),
        attributes clob,
        native_object_id varchar2(322 char),
        parent varchar2(32 char),
        target_size number(19,0),
        last_aggregation number(19,0),
        primary key (id)
    );

    create table identityiq.spt_target_association (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        object_id varchar2(32 char),
        type varchar2(8 char),
        hierarchy varchar2(512 char),
        flattened number(1,0),
        application_name varchar2(128 char),
        target_type varchar2(128 char),
        target_name varchar2(255 char),
        target_id varchar2(32 char),
        rights varchar2(512 char),
        inherited number(1,0),
        effective number(10,0),
        deny_permission number(1,0),
        last_aggregation number(19,0),
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_target_source (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        description varchar2(1024 char),
        collector varchar2(255 char),
        last_refresh number(19,0),
        configuration clob,
        correlation_rule varchar2(32 char),
        creation_rule varchar2(32 char),
        refresh_rule varchar2(32 char),
        transformation_rule varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_target_sources (
        application varchar2(32 char) not null,
        elt varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (application, idx)
    );

    create table identityiq.spt_task_definition (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(4000 char),
        executor varchar2(255 char),
        form_path varchar2(128 char),
        template number(1,0),
        hidden number(1,0),
        result_expiration number(10,0),
        progress_interval number(10,0),
        sub_type varchar2(128 char),
        type varchar2(255 char),
        progress_mode varchar2(255 char),
        arguments clob,
        parent varchar2(32 char),
        result_renderer varchar2(255 char),
        concurrent number(1,0),
        deprecated number(1,0) not null,
        result_action varchar2(255 char),
        signoff_config varchar2(32 char),
        sig_description clob,
        return_type varchar2(255 char),
        primary key (id)
    );

    create table identityiq.spt_task_definition_rights (
        task_definition_id varchar2(32 char) not null,
        right_id varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (task_definition_id, idx)
    );

    create table identityiq.spt_task_event (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        phase varchar2(128 char),
        task_result varchar2(32 char),
        rule_id varchar2(32 char),
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_task_result (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        stack clob,
        attributes clob,
        launcher varchar2(255 char),
        host varchar2(255 char),
        launched number(19,0),
        progress varchar2(255 char),
        percent_complete number(10,0),
        type varchar2(255 char),
        messages clob,
        completed number(19,0),
        expiration number(19,0),
        verified number(19,0),
        name varchar2(255 char) not null unique,
        definition varchar2(32 char),
        schedule varchar2(255 char),
        pending_signoffs number(10,0),
        signoff clob,
        report varchar2(32 char),
        target_class varchar2(255 char),
        target_id varchar2(255 char),
        target_name varchar2(255 char),
        task_terminated number(1,0),
        partitioned number(1,0),
        completion_status varchar2(255 char),
        run_length number(10,0),
        run_length_average number(10,0),
        run_length_deviation number(10,0),
        primary key (id)
    );

    create table identityiq.spt_task_signature_arguments (
        signature varchar2(32 char) not null,
        name varchar2(255 char),
        type varchar2(255 char),
        filter_string varchar2(255 char),
        help_key varchar2(255 char),
        input_template varchar2(255 char),
        description clob,
        prompt clob,
        multi number(1,0),
        required number(1,0),
        default_value varchar2(255 char),
        idx number(10,0) not null,
        primary key (signature, idx)
    );

    create table identityiq.spt_task_signature_returns (
        signature varchar2(32 char) not null,
        name varchar2(255 char),
        type varchar2(255 char),
        filter_string varchar2(255 char),
        description clob,
        prompt clob,
        multi number(1,0),
        idx number(10,0) not null,
        primary key (signature, idx)
    );

    create table identityiq.spt_time_period (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        classifier varchar2(255 char),
        init_parameters clob,
        primary key (id)
    );

    create table identityiq.spt_uiconfig (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_uipreferences (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        preferences clob,
        primary key (id)
    );

    create table identityiq.spt_widget (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        title varchar2(128 char),
        selector clob,
        primary key (id)
    );

    create table identityiq.spt_work_item (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(255 char),
        description varchar2(1024 char),
        handler varchar2(255 char),
        renderer varchar2(255 char),
        target_class varchar2(255 char),
        target_id varchar2(255 char),
        target_name varchar2(255 char),
        type varchar2(255 char),
        state varchar2(255 char),
        severity varchar2(255 char),
        requester varchar2(32 char),
        completion_comments clob,
        notification number(19,0),
        expiration number(19,0),
        wake_up_date number(19,0),
        reminders number(10,0),
        escalation_count number(10,0),
        notification_config clob,
        workflow_case varchar2(32 char),
        attributes clob,
        owner_history clob,
        certification varchar2(255 char),
        certification_entity varchar2(255 char),
        certification_item varchar2(255 char),
        identity_request_id varchar2(128 char),
        assignee varchar2(32 char),
        iiqlock varchar2(128 char),
        certification_ref_id varchar2(32 char),
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_work_item_archive (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        work_item_id varchar2(128 char),
        name varchar2(255 char),
        owner_name varchar2(255 char),
        identity_request_id varchar2(128 char),
        assignee varchar2(255 char),
        requester varchar2(255 char),
        description varchar2(1024 char),
        handler varchar2(255 char),
        renderer varchar2(255 char),
        target_class varchar2(255 char),
        target_id varchar2(255 char),
        target_name varchar2(255 char),
        archived number(19,0),
        type varchar2(255 char),
        state varchar2(255 char),
        severity varchar2(255 char),
        attributes clob,
        system_attributes clob,
        immutable number(1,0),
        signed number(1,0),
        completer varchar2(255 char),
        primary key (id)
    );

    create table identityiq.spt_work_item_comments (
        work_item varchar2(32 char) not null,
        author varchar2(255 char),
        comments clob,
        comment_date number(19,0),
        idx number(10,0) not null,
        primary key (work_item, idx)
    );

    create table identityiq.spt_work_item_config (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        description_template varchar2(1024 char),
        disabled number(1,0),
        no_work_item number(1,0),
        parent varchar2(32 char),
        owner_rule varchar2(32 char),
        hours_till_escalation number(10,0),
        hours_between_reminders number(10,0),
        max_reminders number(10,0),
        notification_email varchar2(32 char),
        reminder_email varchar2(32 char),
        escalation_email varchar2(32 char),
        escalation_rule varchar2(32 char),
        primary key (id)
    );

    create table identityiq.spt_work_item_owners (
        config varchar2(32 char) not null,
        elt varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (config, idx)
    );

    create table identityiq.spt_workflow (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        description varchar2(4000 char),
        type varchar2(128 char),
        task_type varchar2(255 char),
        template number(1,0),
        explicit_transitions number(1,0),
        monitored number(1,0),
        result_expiration number(10,0),
        complete number(1,0),
        handler varchar2(128 char),
        work_item_renderer varchar2(128 char),
        variable_definitions clob,
        config_form varchar2(128 char),
        steps clob,
        work_item_config clob,
        variables clob,
        libraries varchar2(128 char),
        primary key (id)
    );

    create table identityiq.spt_workflow_case (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        stack clob,
        attributes clob,
        launcher varchar2(255 char),
        host varchar2(255 char),
        launched number(19,0),
        progress varchar2(255 char),
        percent_complete number(10,0),
        type varchar2(255 char),
        messages clob,
        completed number(19,0),
        name varchar2(450 char),
        description varchar2(1024 char),
        complete number(1,0),
        target_class varchar2(255 char),
        target_id varchar2(255 char),
        target_name varchar2(255 char),
        workflow clob,
        iiqlock varchar2(128 char),
        primary key (id)
    );

    create table identityiq.spt_workflow_registry (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char) not null unique,
        types clob,
        templates clob,
        callables clob,
        attributes clob,
        primary key (id)
    );

    create table identityiq.spt_workflow_rule_libraries (
        rule_id varchar2(32 char) not null,
        dependency varchar2(32 char) not null,
        idx number(10,0) not null,
        primary key (rule_id, idx)
    );

    create table identityiq.spt_workflow_target (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        owner varchar2(32 char),
        assigned_scope varchar2(32 char),
        assigned_scope_path varchar2(450 char),
        name varchar2(128 char),
        description varchar2(1024 char),
        class_name varchar2(255 char),
        object_id varchar2(255 char),
        object_name varchar2(255 char),
        workflow_case_id varchar2(32 char) not null,
        idx number(10,0),
        primary key (id)
    );

    create table identityiq.spt_workflow_test_suite (
        id varchar2(32 char) not null,
        created number(19,0),
        modified number(19,0),
        name varchar2(128 char) not null unique,
        description varchar2(4000 char),
        replicated number(1,0),
        case_name varchar2(255 char),
        tests clob,
        responses clob,
        attributes clob,
        primary key (id)
    );





    create index identityiq.spt_actgroup_lastAggregation on identityiq.spt_account_group (last_target_aggregation);

    create index identityiq.spt_actgroup_attr on identityiq.spt_account_group (reference_attribute);



    alter table identityiq.spt_account_group 
        add constraint FK54D39165A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK54D39165A5FB1B1 on identityiq.spt_account_group (owner);

    alter table identityiq.spt_account_group 
        add constraint FK54D3916539D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FK54D3916539D71460 on identityiq.spt_account_group (application);

    alter table identityiq.spt_account_group 
        add constraint FK54D39165486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK54D39165486634B7 on identityiq.spt_account_group (assigned_scope);

    alter table identityiq.spt_account_group_inheritance 
        add constraint FK64E35CF0B106CC7F 
        foreign key (account_group) 
        references identityiq.spt_account_group;

    create index identityiq.FK64E35CF0B106CC7F on identityiq.spt_account_group_inheritance (account_group);

    alter table identityiq.spt_account_group_inheritance 
        add constraint FK64E35CF034D1C743 
        foreign key (inherits_from) 
        references identityiq.spt_account_group;

    create index identityiq.FK64E35CF034D1C743 on identityiq.spt_account_group_inheritance (inherits_from);

    alter table identityiq.spt_account_group_perms 
        add constraint FK196E8029128ABF04 
        foreign key (accountgroup) 
        references identityiq.spt_account_group;

    create index identityiq.FK196E8029128ABF04 on identityiq.spt_account_group_perms (accountgroup);

    alter table identityiq.spt_account_group_target_perms 
        add constraint FK8C6393EF128ABF04 
        foreign key (accountgroup) 
        references identityiq.spt_account_group;

    create index identityiq.FK8C6393EF128ABF04 on identityiq.spt_account_group_target_perms (accountgroup);

    alter table identityiq.spt_activity_constraint 
        add constraint FKD7E39285A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKD7E39285A5FB1B1 on identityiq.spt_activity_constraint (owner);

    alter table identityiq.spt_activity_constraint 
        add constraint FKD7E3928516E8C617 
        foreign key (violation_owner) 
        references identityiq.spt_identity;

    create index identityiq.FKD7E3928516E8C617 on identityiq.spt_activity_constraint (violation_owner);

    alter table identityiq.spt_activity_constraint 
        add constraint FKD7E39285486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKD7E39285486634B7 on identityiq.spt_activity_constraint (assigned_scope);

    alter table identityiq.spt_activity_constraint 
        add constraint FKD7E392852E02D59E 
        foreign key (violation_owner_rule) 
        references identityiq.spt_rule;

    create index identityiq.FKD7E392852E02D59E on identityiq.spt_activity_constraint (violation_owner_rule);

    alter table identityiq.spt_activity_constraint 
        add constraint FKD7E3928557FD28A4 
        foreign key (policy) 
        references identityiq.spt_policy;

    create index identityiq.FKD7E3928557FD28A4 on identityiq.spt_activity_constraint (policy);

    alter table identityiq.spt_activity_data_source 
        add constraint FK34D17AA8A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK34D17AA8A5FB1B1 on identityiq.spt_activity_data_source (owner);

    alter table identityiq.spt_activity_data_source 
        add constraint FK34D17AA839D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FK34D17AA839D71460 on identityiq.spt_activity_data_source (application);

    alter table identityiq.spt_activity_data_source 
        add constraint FK34D17AA8B854BFAE 
        foreign key (transformation_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK34D17AA8B854BFAE on identityiq.spt_activity_data_source (transformation_rule);

    alter table identityiq.spt_activity_data_source 
        add constraint FK34D17AA8486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK34D17AA8486634B7 on identityiq.spt_activity_data_source (assigned_scope);

    alter table identityiq.spt_activity_data_source 
        add constraint FK34D17AA8BE1EE0D5 
        foreign key (correlation_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK34D17AA8BE1EE0D5 on identityiq.spt_activity_data_source (correlation_rule);

    alter table identityiq.spt_activity_time_periods 
        add constraint FK7ABC1208E6D76F5D 
        foreign key (application_activity) 
        references identityiq.spt_application_activity;

    create index identityiq.FK7ABC1208E6D76F5D on identityiq.spt_activity_time_periods (application_activity);

    alter table identityiq.spt_activity_time_periods 
        add constraint FK7ABC1208E6ED34A1 
        foreign key (time_period) 
        references identityiq.spt_time_period;

    create index identityiq.FK7ABC1208E6ED34A1 on identityiq.spt_activity_time_periods (time_period);

    create index identityiq.spt_alert_last_processed on identityiq.spt_alert (last_processed);

    create index identityiq.spt_alert_name on identityiq.spt_alert (name);


    alter table identityiq.spt_alert 
        add constraint FKAD3A44D4A7C3772B 
        foreign key (source) 
        references identityiq.spt_application;

    create index identityiq.FKAD3A44D4A7C3772B on identityiq.spt_alert (source);

    alter table identityiq.spt_alert_action 
        add constraint FK89E001BF1C6C78 
        foreign key (alert) 
        references identityiq.spt_alert;

    create index identityiq.FK89E001BF1C6C78 on identityiq.spt_alert_action (alert);

    alter table identityiq.spt_alert_definition 
        add constraint FK3DF7B99EA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK3DF7B99EA5FB1B1 on identityiq.spt_alert_definition (owner);

    alter table identityiq.spt_alert_definition 
        add constraint FK3DF7B99E486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK3DF7B99E486634B7 on identityiq.spt_alert_definition (assigned_scope);

    alter table identityiq.spt_app_dependencies 
        add constraint FK4354140F39D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FK4354140F39D71460 on identityiq.spt_app_dependencies (application);

    alter table identityiq.spt_app_dependencies 
        add constraint FK4354140FDBA1E25B 
        foreign key (dependency) 
        references identityiq.spt_application;

    create index identityiq.FK4354140FDBA1E25B on identityiq.spt_app_dependencies (dependency);

    alter table identityiq.spt_app_secondary_owners 
        add constraint FK1228593139D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FK1228593139D71460 on identityiq.spt_app_secondary_owners (application);

    alter table identityiq.spt_app_secondary_owners 
        add constraint FK1228593140D47AB 
        foreign key (elt) 
        references identityiq.spt_identity;

    create index identityiq.FK1228593140D47AB on identityiq.spt_app_secondary_owners (elt);

    create index identityiq.spt_application_cluster on identityiq.spt_application (app_cluster);

    create index identityiq.spt_application_acct_only on identityiq.spt_application (supports_account_only);

    create index identityiq.spt_application_logical on identityiq.spt_application (logical);

    create index identityiq.spt_application_provisioning on identityiq.spt_application (supports_provisioning);


    create index identityiq.spt_application_authoritative on identityiq.spt_application (authoritative);

    create index identityiq.spt_app_sync_provisioning on identityiq.spt_application (sync_provisioning);

    create index identityiq.spt_application_mgd_apps on identityiq.spt_application (manages_other_apps);

    create index identityiq.spt_application_authenticate on identityiq.spt_application (supports_authenticate);

    create index identityiq.spt_application_addt_acct on identityiq.spt_application (supports_additional_accounts);

    create index identityiq.spt_app_proxied_name on identityiq.spt_application (proxied_name);

    create index identityiq.spt_application_no_agg on identityiq.spt_application (no_aggregation);

    alter table identityiq.spt_application 
        add constraint FK798846C8A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK798846C8A5FB1B1 on identityiq.spt_application (owner);

    alter table identityiq.spt_application 
        add constraint FK798846C84FE65998 
        foreign key (creation_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK798846C84FE65998 on identityiq.spt_application (creation_rule);

    alter table identityiq.spt_application 
        add constraint FK798846C86FB29924 
        foreign key (customization_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK798846C86FB29924 on identityiq.spt_application (customization_rule);

    alter table identityiq.spt_application 
        add constraint FK798846C8E392D97E 
        foreign key (proxy) 
        references identityiq.spt_application;

    create index identityiq.FK798846C8E392D97E on identityiq.spt_application (proxy);

    alter table identityiq.spt_application 
        add constraint FK798846C88954E327 
        foreign key (manager_correlation_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK798846C88954E327 on identityiq.spt_application (manager_correlation_rule);

    alter table identityiq.spt_application 
        add constraint FK798846C82F001D5 
        foreign key (target_source) 
        references identityiq.spt_target_source;

    create index identityiq.FK798846C82F001D5 on identityiq.spt_application (target_source);

    alter table identityiq.spt_application 
        add constraint FK798846C8198B5515 
        foreign key (account_correlation_config) 
        references identityiq.spt_correlation_config;

    create index identityiq.FK798846C8198B5515 on identityiq.spt_application (account_correlation_config);

    alter table identityiq.spt_application 
        add constraint FK798846C8486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK798846C8486634B7 on identityiq.spt_application (assigned_scope);

    alter table identityiq.spt_application 
        add constraint FK798846C8BE1EE0D5 
        foreign key (correlation_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK798846C8BE1EE0D5 on identityiq.spt_application (correlation_rule);

    alter table identityiq.spt_application 
        add constraint FK798846C83D65E622 
        foreign key (managed_attr_customize_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK798846C83D65E622 on identityiq.spt_application (managed_attr_customize_rule);

    alter table identityiq.spt_application 
        add constraint FK798846C853AF4414 
        foreign key (scorecard) 
        references identityiq.spt_application_scorecard;

    create index identityiq.FK798846C853AF4414 on identityiq.spt_application (scorecard);

    alter table identityiq.spt_application_activity 
        add constraint FK5077FEA6486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK5077FEA6486634B7 on identityiq.spt_application_activity (assigned_scope);

    alter table identityiq.spt_application_remediators 
        add constraint FKA10D3C1639D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FKA10D3C1639D71460 on identityiq.spt_application_remediators (application);

    alter table identityiq.spt_application_remediators 
        add constraint FKA10D3C1640D47AB 
        foreign key (elt) 
        references identityiq.spt_identity;

    create index identityiq.FKA10D3C1640D47AB on identityiq.spt_application_remediators (elt);

    alter table identityiq.spt_application_schema 
        add constraint FK62F93AF8A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK62F93AF8A5FB1B1 on identityiq.spt_application_schema (owner);

    alter table identityiq.spt_application_schema 
        add constraint FK62F93AF84FE65998 
        foreign key (creation_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK62F93AF84FE65998 on identityiq.spt_application_schema (creation_rule);

    alter table identityiq.spt_application_schema 
        add constraint FK62F93AF86FB29924 
        foreign key (customization_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK62F93AF86FB29924 on identityiq.spt_application_schema (customization_rule);

    alter table identityiq.spt_application_schema 
        add constraint FK62F93AF839D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FK62F93AF839D71460 on identityiq.spt_application_schema (application);

    alter table identityiq.spt_application_schema 
        add constraint FK62F93AF8486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK62F93AF8486634B7 on identityiq.spt_application_schema (assigned_scope);

    alter table identityiq.spt_application_schema 
        add constraint FK62F93AF8BE1EE0D5 
        foreign key (correlation_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK62F93AF8BE1EE0D5 on identityiq.spt_application_schema (correlation_rule);

    alter table identityiq.spt_application_schema 
        add constraint FK62F93AF8D9F8531C 
        foreign key (refresh_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK62F93AF8D9F8531C on identityiq.spt_application_schema (refresh_rule);

    create index identityiq.app_scorecard_cscore on identityiq.spt_application_scorecard (composite_score);

    alter table identityiq.spt_application_scorecard 
        add constraint FK314187EBA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK314187EBA5FB1B1 on identityiq.spt_application_scorecard (owner);

    alter table identityiq.spt_application_scorecard 
        add constraint FK314187EB486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK314187EB486634B7 on identityiq.spt_application_scorecard (assigned_scope);

    alter table identityiq.spt_application_scorecard 
        add constraint FK314187EB907AB97A 
        foreign key (application_id) 
        references identityiq.spt_application;

    create index identityiq.FK314187EB907AB97A on identityiq.spt_application_scorecard (application_id);

    alter table identityiq.spt_arch_cert_item_apps 
        add constraint FKFBD89444D6D1B4E0 
        foreign key (arch_cert_item_id) 
        references identityiq.spt_archived_cert_item;

    create index identityiq.FKFBD89444D6D1B4E0 on identityiq.spt_arch_cert_item_apps (arch_cert_item_id);

    create index identityiq.spt_arch_entity_ref_attr on identityiq.spt_archived_cert_entity (reference_attribute);

    create index identityiq.spt_arch_entity_target_id on identityiq.spt_archived_cert_entity (target_id);


    create index identityiq.spt_arch_entity_app on identityiq.spt_archived_cert_entity (application);


    create index identityiq.spt_arch_entity_tgt_display on identityiq.spt_archived_cert_entity (target_display_name);


    create index identityiq.spt_arch_entity_native_id on identityiq.spt_archived_cert_entity (native_identity);

    alter table identityiq.spt_archived_cert_entity 
        add constraint FKE3ED1F09A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKE3ED1F09A5FB1B1 on identityiq.spt_archived_cert_entity (owner);

    alter table identityiq.spt_archived_cert_entity 
        add constraint FKE3ED1F09DB59193A 
        foreign key (certification_id) 
        references identityiq.spt_certification;

    create index identityiq.FKE3ED1F09DB59193A on identityiq.spt_archived_cert_entity (certification_id);

    alter table identityiq.spt_archived_cert_entity 
        add constraint FKE3ED1F09486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKE3ED1F09486634B7 on identityiq.spt_archived_cert_entity (assigned_scope);

    create index identityiq.spt_arch_item_bundle on identityiq.spt_archived_cert_item (bundle);

    create index identityiq.spt_arch_item_policy on identityiq.spt_archived_cert_item (policy);

    create index identityiq.spt_arch_cert_item_tname on identityiq.spt_archived_cert_item (target_name);

    create index identityiq.spt_arch_item_native_id on identityiq.spt_archived_cert_item (exception_native_identity);

    create index identityiq.spt_arch_cert_item_tdisplay on identityiq.spt_archived_cert_item (target_display_name);

    create index identityiq.spt_arch_cert_item_type on identityiq.spt_archived_cert_item (type);

    create index identityiq.spt_arch_item_app on identityiq.spt_archived_cert_item (exception_application);

    alter table identityiq.spt_archived_cert_item 
        add constraint FK764147B9A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK764147B9A5FB1B1 on identityiq.spt_archived_cert_item (owner);

    alter table identityiq.spt_archived_cert_item 
        add constraint FK764147B9BAC8DC8B 
        foreign key (parent_id) 
        references identityiq.spt_archived_cert_entity;

    create index identityiq.FK764147B9BAC8DC8B on identityiq.spt_archived_cert_item (parent_id);

    alter table identityiq.spt_archived_cert_item 
        add constraint FK764147B9486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK764147B9486634B7 on identityiq.spt_archived_cert_item (assigned_scope);

    alter table identityiq.spt_audit_config 
        add constraint FK15F2D5AEA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK15F2D5AEA5FB1B1 on identityiq.spt_audit_config (owner);

    alter table identityiq.spt_audit_config 
        add constraint FK15F2D5AE486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK15F2D5AE486634B7 on identityiq.spt_audit_config (assigned_scope);











    alter table identityiq.spt_audit_event 
        add constraint FK536922AEA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK536922AEA5FB1B1 on identityiq.spt_audit_event (owner);

    alter table identityiq.spt_audit_event 
        add constraint FK536922AE486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK536922AE486634B7 on identityiq.spt_audit_event (assigned_scope);

    alter table identityiq.spt_authentication_answer 
        add constraint FK157EEDDA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK157EEDDA5FB1B1 on identityiq.spt_authentication_answer (owner);

    alter table identityiq.spt_authentication_answer 
        add constraint FK157EEDD56651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK157EEDD56651F3A on identityiq.spt_authentication_answer (identity_id);

    alter table identityiq.spt_authentication_answer 
        add constraint FK157EEDD48ADCCD2 
        foreign key (question_id) 
        references identityiq.spt_authentication_question;

    create index identityiq.FK157EEDD48ADCCD2 on identityiq.spt_authentication_answer (question_id);

    alter table identityiq.spt_authentication_question 
        add constraint FKE3609F45A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKE3609F45A5FB1B1 on identityiq.spt_authentication_question (owner);

    alter table identityiq.spt_authentication_question 
        add constraint FKE3609F45486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKE3609F45486634B7 on identityiq.spt_authentication_question (assigned_scope);

    alter table identityiq.spt_batch_request 
        add constraint FKA7055A02A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKA7055A02A5FB1B1 on identityiq.spt_batch_request (owner);

    alter table identityiq.spt_batch_request 
        add constraint FKA7055A02486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKA7055A02486634B7 on identityiq.spt_batch_request (assigned_scope);

    alter table identityiq.spt_batch_request_item 
        add constraint FK9118CB30A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK9118CB30A5FB1B1 on identityiq.spt_batch_request_item (owner);

    alter table identityiq.spt_batch_request_item 
        add constraint FK9118CB302C200325 
        foreign key (batch_request_id) 
        references identityiq.spt_batch_request;

    create index identityiq.FK9118CB302C200325 on identityiq.spt_batch_request_item (batch_request_id);

    alter table identityiq.spt_batch_request_item 
        add constraint FK9118CB30486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK9118CB30486634B7 on identityiq.spt_batch_request_item (assigned_scope);

    create index identityiq.spt_bundle_disabled on identityiq.spt_bundle (disabled);

    create index identityiq.spt_bundle_type on identityiq.spt_bundle (type);



    alter table identityiq.spt_bundle 
        add constraint FKFC45E40AA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKFC45E40AA5FB1B1 on identityiq.spt_bundle (owner);

    alter table identityiq.spt_bundle 
        add constraint FKFC45E40AF7616785 
        foreign key (role_index) 
        references identityiq.spt_role_index;

    create index identityiq.FKFC45E40AF7616785 on identityiq.spt_bundle (role_index);

    alter table identityiq.spt_bundle 
        add constraint FKFC45E40A486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKFC45E40A486634B7 on identityiq.spt_bundle (assigned_scope);

    alter table identityiq.spt_bundle 
        add constraint FKFC45E40ABD5A5736 
        foreign key (pending_workflow) 
        references identityiq.spt_workflow_case;

    create index identityiq.FKFC45E40ABD5A5736 on identityiq.spt_bundle (pending_workflow);

    alter table identityiq.spt_bundle 
        add constraint FKFC45E40ABF46222D 
        foreign key (join_rule) 
        references identityiq.spt_rule;

    create index identityiq.FKFC45E40ABF46222D on identityiq.spt_bundle (join_rule);

    alter table identityiq.spt_bundle 
        add constraint FKFC45E40ACC129F2E 
        foreign key (scorecard) 
        references identityiq.spt_role_scorecard;

    create index identityiq.FKFC45E40ACC129F2E on identityiq.spt_bundle (scorecard);

    create index identityiq.spt_bundle_archive_source on identityiq.spt_bundle_archive (source_id);

    alter table identityiq.spt_bundle_archive 
        add constraint FK4C6C18DA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK4C6C18DA5FB1B1 on identityiq.spt_bundle_archive (owner);

    alter table identityiq.spt_bundle_archive 
        add constraint FK4C6C18D486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK4C6C18D486634B7 on identityiq.spt_bundle_archive (assigned_scope);

    alter table identityiq.spt_bundle_children 
        add constraint FK5D48969428E03F44 
        foreign key (bundle) 
        references identityiq.spt_bundle;

    create index identityiq.FK5D48969428E03F44 on identityiq.spt_bundle_children (bundle);

    alter table identityiq.spt_bundle_children 
        add constraint FK5D48969480A503DE 
        foreign key (child) 
        references identityiq.spt_bundle;

    create index identityiq.FK5D48969480A503DE on identityiq.spt_bundle_children (child);

    alter table identityiq.spt_bundle_permits 
        add constraint FK8EAE08328E03F44 
        foreign key (bundle) 
        references identityiq.spt_bundle;

    create index identityiq.FK8EAE08328E03F44 on identityiq.spt_bundle_permits (bundle);

    alter table identityiq.spt_bundle_permits 
        add constraint FK8EAE08380A503DE 
        foreign key (child) 
        references identityiq.spt_bundle;

    create index identityiq.FK8EAE08380A503DE on identityiq.spt_bundle_permits (child);

    alter table identityiq.spt_bundle_requirements 
        add constraint FK582892A528E03F44 
        foreign key (bundle) 
        references identityiq.spt_bundle;

    create index identityiq.FK582892A528E03F44 on identityiq.spt_bundle_requirements (bundle);

    alter table identityiq.spt_bundle_requirements 
        add constraint FK582892A580A503DE 
        foreign key (child) 
        references identityiq.spt_bundle;

    create index identityiq.FK582892A580A503DE on identityiq.spt_bundle_requirements (child);

    alter table identityiq.spt_capability 
        add constraint FK5E9BD4A0A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK5E9BD4A0A5FB1B1 on identityiq.spt_capability (owner);

    alter table identityiq.spt_capability 
        add constraint FK5E9BD4A0486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK5E9BD4A0486634B7 on identityiq.spt_capability (assigned_scope);

    alter table identityiq.spt_capability_children 
        add constraint FKC7A8EEBEC4BCFA76 
        foreign key (child_id) 
        references identityiq.spt_capability;

    create index identityiq.FKC7A8EEBEC4BCFA76 on identityiq.spt_capability_children (child_id);

    alter table identityiq.spt_capability_children 
        add constraint FKC7A8EEBEA526F8FA 
        foreign key (capability_id) 
        references identityiq.spt_capability;

    create index identityiq.FKC7A8EEBEA526F8FA on identityiq.spt_capability_children (capability_id);

    alter table identityiq.spt_capability_rights 
        add constraint FKDCDA3656A526F8FA 
        foreign key (capability_id) 
        references identityiq.spt_capability;

    create index identityiq.FKDCDA3656A526F8FA on identityiq.spt_capability_rights (capability_id);

    alter table identityiq.spt_capability_rights 
        add constraint FKDCDA3656D22635BD 
        foreign key (right_id) 
        references identityiq.spt_right;

    create index identityiq.FKDCDA3656D22635BD on identityiq.spt_capability_rights (right_id);

    alter table identityiq.spt_category 
        add constraint FK528AAE86A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK528AAE86A5FB1B1 on identityiq.spt_category (owner);

    alter table identityiq.spt_category 
        add constraint FK528AAE86486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK528AAE86486634B7 on identityiq.spt_category (assigned_scope);

    alter table identityiq.spt_cert_action_assoc 
        add constraint FK9F3F8E7F84D52C6E 
        foreign key (child_id) 
        references identityiq.spt_certification_action;

    create index identityiq.FK9F3F8E7F84D52C6E on identityiq.spt_cert_action_assoc (child_id);

    alter table identityiq.spt_cert_action_assoc 
        add constraint FK9F3F8E7F9D51C620 
        foreign key (parent_id) 
        references identityiq.spt_certification_action;

    create index identityiq.FK9F3F8E7F9D51C620 on identityiq.spt_cert_action_assoc (parent_id);

    alter table identityiq.spt_cert_item_applications 
        add constraint FK4F97C0FCBCA86BEF 
        foreign key (certification_item_id) 
        references identityiq.spt_certification_item;

    create index identityiq.FK4F97C0FCBCA86BEF on identityiq.spt_cert_item_applications (certification_item_id);

    create index identityiq.spt_cert_group_id on identityiq.spt_certification (group_definition_id);

    create index identityiq.spt_cert_type on identityiq.spt_certification (type);

    create index identityiq.spt_certification_phase on identityiq.spt_certification (phase);

    create index identityiq.spt_cert_nextRemediationScan on identityiq.spt_certification (next_remediation_scan);

    create index identityiq.spt_cert_group_name on identityiq.spt_certification (group_definition_name);

    create index identityiq.spt_cert_nxt_phs_tran on identityiq.spt_certification (next_phase_transition);

    create index identityiq.spt_certification_short_name on identityiq.spt_certification (short_name);

    create index identityiq.spt_cert_exclude_inactive on identityiq.spt_certification (exclude_inactive);

    create index identityiq.spt_certification_signed on identityiq.spt_certification (signed);

    create index identityiq.spt_cert_auto_close_date on identityiq.spt_certification (automatic_closing_date);

    create index identityiq.spt_cert_application on identityiq.spt_certification (application_id);

    create index identityiq.nxt_overdue_scan on identityiq.spt_certification (next_overdue_scan);

    create index identityiq.spt_cert_electronic_signed on identityiq.spt_certification (electronically_signed);

    create index identityiq.spt_cert_cert_def_id on identityiq.spt_certification (certification_definition_id);

    create index identityiq.spt_certification_name on identityiq.spt_certification (name);

    create index identityiq.spt_cert_trigger_id on identityiq.spt_certification (trigger_id);

    create index identityiq.nxt_cert_req_scan on identityiq.spt_certification (next_cert_required_scan);

    create index identityiq.spt_cert_manager on identityiq.spt_certification (manager);

    create index identityiq.spt_cert_percent_complete on identityiq.spt_certification (percent_complete);

    create index identityiq.spt_certification_finished on identityiq.spt_certification (finished);

    create index identityiq.spt_cert_task_sched_id on identityiq.spt_certification (task_schedule_id);

    alter table identityiq.spt_certification 
        add constraint FK4E6F1832A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK4E6F1832A5FB1B1 on identityiq.spt_certification (owner);

    alter table identityiq.spt_certification 
        add constraint FK4E6F18323733F724 
        foreign key (parent) 
        references identityiq.spt_certification;

    create index identityiq.FK4E6F18323733F724 on identityiq.spt_certification (parent);

    alter table identityiq.spt_certification 
        add constraint FK4E6F1832486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK4E6F1832486634B7 on identityiq.spt_certification (assigned_scope);

    create index identityiq.spt_item_ready_for_remed on identityiq.spt_certification_action (ready_for_remediation);

    alter table identityiq.spt_certification_action 
        add constraint FK198026E3A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK198026E3A5FB1B1 on identityiq.spt_certification_action (owner);

    alter table identityiq.spt_certification_action 
        add constraint FK198026E310F4E42A 
        foreign key (source_action) 
        references identityiq.spt_certification_action;

    create index identityiq.FK198026E310F4E42A on identityiq.spt_certification_action (source_action);

    alter table identityiq.spt_certification_action 
        add constraint FK198026E3486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK198026E3486634B7 on identityiq.spt_certification_action (assigned_scope);

    create index identityiq.spt_cert_archive_grp_id on identityiq.spt_certification_archive (certification_group_id);

    create index identityiq.spt_cert_archive_id on identityiq.spt_certification_archive (certification_id);

    create index identityiq.spt_cert_archive_creator on identityiq.spt_certification_archive (creator);

    alter table identityiq.spt_certification_archive 
        add constraint FK2F2D4DB5A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK2F2D4DB5A5FB1B1 on identityiq.spt_certification_archive (owner);

    alter table identityiq.spt_certification_archive 
        add constraint FK2F2D4DB5486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK2F2D4DB5486634B7 on identityiq.spt_certification_archive (assigned_scope);

    alter table identityiq.spt_certification_challenge 
        add constraint FKCFF77896A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKCFF77896A5FB1B1 on identityiq.spt_certification_challenge (owner);

    alter table identityiq.spt_certification_challenge 
        add constraint FKCFF77896486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKCFF77896486634B7 on identityiq.spt_certification_challenge (assigned_scope);

    alter table identityiq.spt_certification_def_tags 
        add constraint FK4313558015CFE57D 
        foreign key (cert_def_id) 
        references identityiq.spt_certification_definition;

    create index identityiq.FK4313558015CFE57D on identityiq.spt_certification_def_tags (cert_def_id);

    alter table identityiq.spt_certification_def_tags 
        add constraint FK43135580E6181207 
        foreign key (elt) 
        references identityiq.spt_tag;

    create index identityiq.FK43135580E6181207 on identityiq.spt_certification_def_tags (elt);

    alter table identityiq.spt_certification_definition 
        add constraint FKD2CBBF80A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKD2CBBF80A5FB1B1 on identityiq.spt_certification_definition (owner);

    alter table identityiq.spt_certification_definition 
        add constraint FKD2CBBF80486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKD2CBBF80486634B7 on identityiq.spt_certification_definition (assigned_scope);

    alter table identityiq.spt_certification_delegation 
        add constraint FK62173755A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK62173755A5FB1B1 on identityiq.spt_certification_delegation (owner);

    alter table identityiq.spt_certification_delegation 
        add constraint FK62173755486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK62173755486634B7 on identityiq.spt_certification_delegation (assigned_scope);

    create index identityiq.spt_certification_entity_diffs on identityiq.spt_certification_entity (has_differences);

    create index identityiq.spt_certification_entity_stat on identityiq.spt_certification_entity (summary_status);

    create index identityiq.spt_certification_entity_nsc on identityiq.spt_certification_entity (next_continuous_state_change);

    create index identityiq.spt_certification_entity_state on identityiq.spt_certification_entity (continuous_state);

    create index identityiq.spt_certification_entity_ld on identityiq.spt_certification_entity (last_decision);

    create index identityiq.spt_certification_entity_tn on identityiq.spt_certification_entity (target_name);

    create index identityiq.spt_certification_entity_due on identityiq.spt_certification_entity (overdue_date);


    create index identityiq.spt_cert_entity_pending on identityiq.spt_certification_entity (pending_certification);


    create index identityiq.spt_cert_entity_identity on identityiq.spt_certification_entity (identity_id);

    create index identityiq.spt_cert_entity_new_user on identityiq.spt_certification_entity (new_user);

    create index identityiq.spt_cert_entity_cscore on identityiq.spt_certification_entity (composite_score);

    alter table identityiq.spt_certification_entity 
        add constraint FK20EE8C90DB59193A 
        foreign key (certification_id) 
        references identityiq.spt_certification;

    create index identityiq.FK20EE8C90DB59193A on identityiq.spt_certification_entity (certification_id);

    alter table identityiq.spt_certification_entity 
        add constraint FK641BE42DA5FB1B120ee8c90 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK641BE42DA5FB1B120ee8c90 on identityiq.spt_certification_entity (owner);

    alter table identityiq.spt_certification_entity 
        add constraint FK641BE42DCD1A938620ee8c90 
        foreign key (action) 
        references identityiq.spt_certification_action;

    create index identityiq.FK641BE42DCD1A938620ee8c90 on identityiq.spt_certification_entity (action);

    alter table identityiq.spt_certification_entity 
        add constraint FK641BE42D486634B720ee8c90 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK641BE42D486634B720ee8c90 on identityiq.spt_certification_entity (assigned_scope);

    alter table identityiq.spt_certification_entity 
        add constraint FK641BE42D982FD46A20ee8c90 
        foreign key (delegation) 
        references identityiq.spt_certification_delegation;

    create index identityiq.FK641BE42D982FD46A20ee8c90 on identityiq.spt_certification_entity (delegation);

    create index identityiq.spt_cert_group_type on identityiq.spt_certification_group (type);

    create index identityiq.spt_cert_group_status on identityiq.spt_certification_group (status);

    create index identityiq.spt_cert_grp_perc_comp on identityiq.spt_certification_group (percent_complete);

    alter table identityiq.spt_certification_group 
        add constraint FK11B20432A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK11B20432A5FB1B1 on identityiq.spt_certification_group (owner);

    alter table identityiq.spt_certification_group 
        add constraint FK11B20432486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK11B20432486634B7 on identityiq.spt_certification_group (assigned_scope);

    alter table identityiq.spt_certification_group 
        add constraint FK11B2043263178D65 
        foreign key (certification_definition) 
        references identityiq.spt_certification_definition;

    create index identityiq.FK11B2043263178D65 on identityiq.spt_certification_group (certification_definition);

    alter table identityiq.spt_certification_groups 
        add constraint FK248E8281DB59193A 
        foreign key (certification_id) 
        references identityiq.spt_certification;

    create index identityiq.FK248E8281DB59193A on identityiq.spt_certification_groups (certification_id);

    alter table identityiq.spt_certification_groups 
        add constraint FK248E8281F6578B00 
        foreign key (group_id) 
        references identityiq.spt_certification_group;

    create index identityiq.FK248E8281F6578B00 on identityiq.spt_certification_groups (group_id);

    create index identityiq.spt_certification_item_diffs on identityiq.spt_certification_item (has_differences);

    create index identityiq.spt_certification_item_stat on identityiq.spt_certification_item (summary_status);

    create index identityiq.spt_certification_item_nsc on identityiq.spt_certification_item (next_continuous_state_change);

    create index identityiq.spt_certification_item_state on identityiq.spt_certification_item (continuous_state);

    create index identityiq.spt_certification_item_ld on identityiq.spt_certification_item (last_decision);

    create index identityiq.spt_certification_item_tn on identityiq.spt_certification_item (target_name);

    create index identityiq.spt_certification_item_due on identityiq.spt_certification_item (overdue_date);

    create index identityiq.spt_cert_item_type on identityiq.spt_certification_item (type);


    create index identityiq.spt_cert_item_perm_target on identityiq.spt_certification_item (exception_permission_target);

    create index identityiq.spt_cert_item_perm_right on identityiq.spt_certification_item (exception_permission_right);

    create index identityiq.spt_cert_item_bundle on identityiq.spt_certification_item (bundle);

    create index identityiq.spt_needs_refresh on identityiq.spt_certification_item (needs_refresh);

    create index identityiq.spt_cert_item_nxt_phs_tran on identityiq.spt_certification_item (next_phase_transition);

    create index identityiq.spt_cert_item_phase on identityiq.spt_certification_item (phase);

    create index identityiq.spt_cert_item_exception_app on identityiq.spt_certification_item (exception_application);

    create index identityiq.spt_cert_item_wk_up on identityiq.spt_certification_item (wake_up_date);

    alter table identityiq.spt_certification_item 
        add constraint FK641BE42DA5FB1B1adfe6b00 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK641BE42DA5FB1B1adfe6b00 on identityiq.spt_certification_item (owner);

    alter table identityiq.spt_certification_item 
        add constraint FKADFE6B00809C88AF 
        foreign key (certification_entity_id) 
        references identityiq.spt_certification_entity;

    create index identityiq.FKADFE6B00809C88AF on identityiq.spt_certification_item (certification_entity_id);

    alter table identityiq.spt_certification_item 
        add constraint FKADFE6B00B749D36C 
        foreign key (challenge) 
        references identityiq.spt_certification_challenge;

    create index identityiq.FKADFE6B00B749D36C on identityiq.spt_certification_item (challenge);

    alter table identityiq.spt_certification_item 
        add constraint FK641BE42DCD1A9386adfe6b00 
        foreign key (action) 
        references identityiq.spt_certification_action;

    create index identityiq.FK641BE42DCD1A9386adfe6b00 on identityiq.spt_certification_item (action);

    alter table identityiq.spt_certification_item 
        add constraint FK641BE42D486634B7adfe6b00 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK641BE42D486634B7adfe6b00 on identityiq.spt_certification_item (assigned_scope);

    alter table identityiq.spt_certification_item 
        add constraint FK641BE42D982FD46Aadfe6b00 
        foreign key (delegation) 
        references identityiq.spt_certification_delegation;

    create index identityiq.FK641BE42D982FD46Aadfe6b00 on identityiq.spt_certification_item (delegation);

    alter table identityiq.spt_certification_item 
        add constraint FKADFE6B008C97EA7 
        foreign key (exception_entitlements) 
        references identityiq.spt_entitlement_snapshot;

    create index identityiq.FKADFE6B008C97EA7 on identityiq.spt_certification_item (exception_entitlements);

    alter table identityiq.spt_certification_tags 
        add constraint FKAE032406DB59193A 
        foreign key (certification_id) 
        references identityiq.spt_certification;

    create index identityiq.FKAE032406DB59193A on identityiq.spt_certification_tags (certification_id);

    alter table identityiq.spt_certification_tags 
        add constraint FKAE032406E6181207 
        foreign key (elt) 
        references identityiq.spt_tag;

    create index identityiq.FKAE032406E6181207 on identityiq.spt_certification_tags (elt);

    alter table identityiq.spt_certifiers 
        add constraint FK784C89A6DB59193A 
        foreign key (certification_id) 
        references identityiq.spt_certification;

    create index identityiq.FK784C89A6DB59193A on identityiq.spt_certifiers (certification_id);

    alter table identityiq.spt_child_certification_ids 
        add constraint FK2D614AC817639745 
        foreign key (certification_archive_id) 
        references identityiq.spt_certification_archive;

    create index identityiq.FK2D614AC817639745 on identityiq.spt_child_certification_ids (certification_archive_id);

    alter table identityiq.spt_configuration 
        add constraint FKE80D386EA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKE80D386EA5FB1B1 on identityiq.spt_configuration (owner);

    alter table identityiq.spt_configuration 
        add constraint FKE80D386E486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKE80D386E486634B7 on identityiq.spt_configuration (assigned_scope);

    alter table identityiq.spt_correlation_config 
        add constraint FK3A3DBC27A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK3A3DBC27A5FB1B1 on identityiq.spt_correlation_config (owner);

    alter table identityiq.spt_correlation_config 
        add constraint FK3A3DBC27486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK3A3DBC27486634B7 on identityiq.spt_correlation_config (assigned_scope);


    alter table identityiq.spt_custom 
        add constraint FKFDFD3EF9A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKFDFD3EF9A5FB1B1 on identityiq.spt_custom (owner);

    alter table identityiq.spt_custom 
        add constraint FKFDFD3EF9486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKFDFD3EF9486634B7 on identityiq.spt_custom (assigned_scope);

    create index identityiq.spt_dashboard_content_task on identityiq.spt_dashboard_content (source_task_id);

    create index identityiq.spt_dashboard_type on identityiq.spt_dashboard_content (type);

    alter table identityiq.spt_dashboard_content 
        add constraint FKC4B33946A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKC4B33946A5FB1B1 on identityiq.spt_dashboard_content (owner);

    alter table identityiq.spt_dashboard_content 
        add constraint FKC4B33946B513AA2F 
        foreign key (parent) 
        references identityiq.spt_dashboard_content;

    create index identityiq.FKC4B33946B513AA2F on identityiq.spt_dashboard_content (parent);

    alter table identityiq.spt_dashboard_content 
        add constraint FKC4B33946486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKC4B33946486634B7 on identityiq.spt_dashboard_content (assigned_scope);

    alter table identityiq.spt_dashboard_content_rights 
        add constraint FK106D6AF0D22635BD 
        foreign key (right_id) 
        references identityiq.spt_right;

    create index identityiq.FK106D6AF0D22635BD on identityiq.spt_dashboard_content_rights (right_id);

    alter table identityiq.spt_dashboard_content_rights 
        add constraint FK106D6AF0D91E26B1 
        foreign key (dashboard_content_id) 
        references identityiq.spt_dashboard_content;

    create index identityiq.FK106D6AF0D91E26B1 on identityiq.spt_dashboard_content_rights (dashboard_content_id);

    alter table identityiq.spt_dashboard_layout 
        add constraint FK9914A8BDA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK9914A8BDA5FB1B1 on identityiq.spt_dashboard_layout (owner);

    alter table identityiq.spt_dashboard_layout 
        add constraint FK9914A8BD486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK9914A8BD486634B7 on identityiq.spt_dashboard_layout (assigned_scope);

    alter table identityiq.spt_dashboard_reference 
        add constraint FK45E944D8A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK45E944D8A5FB1B1 on identityiq.spt_dashboard_reference (owner);

    alter table identityiq.spt_dashboard_reference 
        add constraint FK45E944D8878775BD 
        foreign key (identity_dashboard_id) 
        references identityiq.spt_identity_dashboard;

    create index identityiq.FK45E944D8878775BD on identityiq.spt_dashboard_reference (identity_dashboard_id);

    alter table identityiq.spt_dashboard_reference 
        add constraint FK45E944D82D6026 
        foreign key (content_id) 
        references identityiq.spt_dashboard_content;

    create index identityiq.FK45E944D82D6026 on identityiq.spt_dashboard_reference (content_id);

    alter table identityiq.spt_dashboard_reference 
        add constraint FK45E944D8486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK45E944D8486634B7 on identityiq.spt_dashboard_reference (assigned_scope);




    create index identityiq.spt_delObj_lastRefresh on identityiq.spt_deleted_object (last_refresh);

    alter table identityiq.spt_deleted_object 
        add constraint FKA08C7DADA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKA08C7DADA5FB1B1 on identityiq.spt_deleted_object (owner);

    alter table identityiq.spt_deleted_object 
        add constraint FKA08C7DAD39D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FKA08C7DAD39D71460 on identityiq.spt_deleted_object (application);

    alter table identityiq.spt_deleted_object 
        add constraint FKA08C7DAD486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKA08C7DAD486634B7 on identityiq.spt_deleted_object (assigned_scope);

    alter table identityiq.spt_dictionary 
        add constraint FKA7F7201EA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKA7F7201EA5FB1B1 on identityiq.spt_dictionary (owner);

    alter table identityiq.spt_dictionary 
        add constraint FKA7F7201E486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKA7F7201E486634B7 on identityiq.spt_dictionary (assigned_scope);

    alter table identityiq.spt_dictionary_term 
        add constraint FK8E1F3FEDA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK8E1F3FEDA5FB1B1 on identityiq.spt_dictionary_term (owner);

    alter table identityiq.spt_dictionary_term 
        add constraint FK8E1F3FED486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK8E1F3FED486634B7 on identityiq.spt_dictionary_term (assigned_scope);

    alter table identityiq.spt_dictionary_term 
        add constraint FK8E1F3FED8598603A 
        foreign key (dictionary_id) 
        references identityiq.spt_dictionary;

    create index identityiq.FK8E1F3FED8598603A on identityiq.spt_dictionary_term (dictionary_id);

    alter table identityiq.spt_dynamic_scope 
        add constraint FKA73F59CCA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKA73F59CCA5FB1B1 on identityiq.spt_dynamic_scope (owner);

    alter table identityiq.spt_dynamic_scope 
        add constraint FKA73F59CC8A8BFFA 
        foreign key (application_request_control) 
        references identityiq.spt_rule;

    create index identityiq.FKA73F59CC8A8BFFA on identityiq.spt_dynamic_scope (application_request_control);

    alter table identityiq.spt_dynamic_scope 
        add constraint FKA73F59CCE677873B 
        foreign key (managed_attr_request_control) 
        references identityiq.spt_rule;

    create index identityiq.FKA73F59CCE677873B on identityiq.spt_dynamic_scope (managed_attr_request_control);

    alter table identityiq.spt_dynamic_scope 
        add constraint FKA73F59CC11B2F20 
        foreign key (role_request_control) 
        references identityiq.spt_rule;

    create index identityiq.FKA73F59CC11B2F20 on identityiq.spt_dynamic_scope (role_request_control);

    alter table identityiq.spt_dynamic_scope 
        add constraint FKA73F59CC486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKA73F59CC486634B7 on identityiq.spt_dynamic_scope (assigned_scope);

    alter table identityiq.spt_dynamic_scope_exclusions 
        add constraint FKFCBD20B86F1CB67B 
        foreign key (dynamic_scope_id) 
        references identityiq.spt_dynamic_scope;

    create index identityiq.FKFCBD20B86F1CB67B on identityiq.spt_dynamic_scope_exclusions (dynamic_scope_id);

    alter table identityiq.spt_dynamic_scope_exclusions 
        add constraint FKFCBD20B856651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FKFCBD20B856651F3A on identityiq.spt_dynamic_scope_exclusions (identity_id);

    alter table identityiq.spt_dynamic_scope_inclusions 
        add constraint FK3368F2A6F1CB67B 
        foreign key (dynamic_scope_id) 
        references identityiq.spt_dynamic_scope;

    create index identityiq.FK3368F2A6F1CB67B on identityiq.spt_dynamic_scope_inclusions (dynamic_scope_id);

    alter table identityiq.spt_dynamic_scope_inclusions 
        add constraint FK3368F2A56651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK3368F2A56651F3A on identityiq.spt_dynamic_scope_inclusions (identity_id);

    alter table identityiq.spt_email_template 
        add constraint FK9261AD45A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK9261AD45A5FB1B1 on identityiq.spt_email_template (owner);

    alter table identityiq.spt_email_template 
        add constraint FK9261AD45486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK9261AD45486634B7 on identityiq.spt_email_template (assigned_scope);

    alter table identityiq.spt_email_template_properties 
        add constraint emailtemplateproperties 
        foreign key (id) 
        references identityiq.spt_email_template;

    create index identityiq.emailtemplateproperties on identityiq.spt_email_template_properties (id);

    alter table identityiq.spt_entitlement_group 
        add constraint FK13D2B865A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK13D2B865A5FB1B1 on identityiq.spt_entitlement_group (owner);

    alter table identityiq.spt_entitlement_group 
        add constraint FK13D2B86539D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FK13D2B86539D71460 on identityiq.spt_entitlement_group (application);

    alter table identityiq.spt_entitlement_group 
        add constraint FK13D2B86556651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK13D2B86556651F3A on identityiq.spt_entitlement_group (identity_id);

    alter table identityiq.spt_entitlement_group 
        add constraint FK13D2B865486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK13D2B865486634B7 on identityiq.spt_entitlement_group (assigned_scope);




    alter table identityiq.spt_entitlement_snapshot 
        add constraint FKC98E021EBCA86BEF 
        foreign key (certification_item_id) 
        references identityiq.spt_certification_item;

    create index identityiq.FKC98E021EBCA86BEF on identityiq.spt_entitlement_snapshot (certification_item_id);

    create index identityiq.file_bucketNumber on identityiq.spt_file_bucket (file_index);

    alter table identityiq.spt_file_bucket 
        add constraint FK7A22AF85A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK7A22AF85A5FB1B1 on identityiq.spt_file_bucket (owner);

    alter table identityiq.spt_file_bucket 
        add constraint FK7A22AF85A620641F 
        foreign key (parent_id) 
        references identityiq.spt_persisted_file;

    create index identityiq.FK7A22AF85A620641F on identityiq.spt_file_bucket (parent_id);

    alter table identityiq.spt_file_bucket 
        add constraint FK7A22AF85486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK7A22AF85486634B7 on identityiq.spt_file_bucket (assigned_scope);

    alter table identityiq.spt_form 
        add constraint FK9A3E024CA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK9A3E024CA5FB1B1 on identityiq.spt_form (owner);

    alter table identityiq.spt_form 
        add constraint FK9A3E024C39D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FK9A3E024C39D71460 on identityiq.spt_form (application);

    alter table identityiq.spt_form 
        add constraint FK9A3E024C486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK9A3E024C486634B7 on identityiq.spt_form (assigned_scope);

    alter table identityiq.spt_generic_constraint 
        add constraint FK1A3C4CCDA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK1A3C4CCDA5FB1B1 on identityiq.spt_generic_constraint (owner);

    alter table identityiq.spt_generic_constraint 
        add constraint FK1A3C4CCD16E8C617 
        foreign key (violation_owner) 
        references identityiq.spt_identity;

    create index identityiq.FK1A3C4CCD16E8C617 on identityiq.spt_generic_constraint (violation_owner);

    alter table identityiq.spt_generic_constraint 
        add constraint FK1A3C4CCD486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK1A3C4CCD486634B7 on identityiq.spt_generic_constraint (assigned_scope);

    alter table identityiq.spt_generic_constraint 
        add constraint FK1A3C4CCD2E02D59E 
        foreign key (violation_owner_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK1A3C4CCD2E02D59E on identityiq.spt_generic_constraint (violation_owner_rule);

    alter table identityiq.spt_generic_constraint 
        add constraint FK1A3C4CCD57FD28A4 
        foreign key (policy) 
        references identityiq.spt_policy;

    create index identityiq.FK1A3C4CCD57FD28A4 on identityiq.spt_generic_constraint (policy);

    alter table identityiq.spt_group_definition 
        add constraint FK21F3C89BA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK21F3C89BA5FB1B1 on identityiq.spt_group_definition (owner);

    alter table identityiq.spt_group_definition 
        add constraint FK21F3C89BFA54B4D5 
        foreign key (factory) 
        references identityiq.spt_group_factory;

    create index identityiq.FK21F3C89BFA54B4D5 on identityiq.spt_group_definition (factory);

    alter table identityiq.spt_group_definition 
        add constraint FK21F3C89B486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK21F3C89B486634B7 on identityiq.spt_group_definition (assigned_scope);

    alter table identityiq.spt_group_definition 
        add constraint FK21F3C89B1CE09EE5 
        foreign key (group_index) 
        references identityiq.spt_group_index;

    create index identityiq.FK21F3C89B1CE09EE5 on identityiq.spt_group_definition (group_index);

    alter table identityiq.spt_group_factory 
        add constraint FK36D2A2C2A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK36D2A2C2A5FB1B1 on identityiq.spt_group_factory (owner);

    alter table identityiq.spt_group_factory 
        add constraint FK36D2A2C252F9C404 
        foreign key (group_owner_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK36D2A2C252F9C404 on identityiq.spt_group_factory (group_owner_rule);

    alter table identityiq.spt_group_factory 
        add constraint FK36D2A2C2486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK36D2A2C2486634B7 on identityiq.spt_group_factory (assigned_scope);

    create index identityiq.group_index_cscore on identityiq.spt_group_index (composite_score);

    alter table identityiq.spt_group_index 
        add constraint FK5E03A88AA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK5E03A88AA5FB1B1 on identityiq.spt_group_index (owner);

    alter table identityiq.spt_group_index 
        add constraint FK5E03A88A486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK5E03A88A486634B7 on identityiq.spt_group_index (assigned_scope);

    alter table identityiq.spt_group_index 
        add constraint FK5E03A88AF7729445 
        foreign key (definition) 
        references identityiq.spt_group_definition;

    create index identityiq.FK5E03A88AF7729445 on identityiq.spt_group_index (definition);

    alter table identityiq.spt_group_permissions 
        add constraint FKB27ACA3CC60D993F 
        foreign key (entitlement_group_id) 
        references identityiq.spt_entitlement_group;

    create index identityiq.FKB27ACA3CC60D993F on identityiq.spt_group_permissions (entitlement_group_id);

    create index identityiq.spt_identity_lastRefresh on identityiq.spt_identity (last_refresh);

    create index identityiq.spt_identity_isworkgroup on identityiq.spt_identity (workgroup);







    create index identityiq.spt_identity_manager_status on identityiq.spt_identity (manager_status);


    create index identityiq.spt_identity_inactive on identityiq.spt_identity (inactive);


    create index identityiq.spt_identity_correlated on identityiq.spt_identity (correlated);

    create index identityiq.spt_identity_needs_refresh on identityiq.spt_identity (needs_refresh);




    alter table identityiq.spt_identity 
        add constraint FK47706246A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK47706246A5FB1B1 on identityiq.spt_identity (owner);

    alter table identityiq.spt_identity 
        add constraint FK47706246DD2B81CB 
        foreign key (administrator) 
        references identityiq.spt_identity;

    create index identityiq.FK47706246DD2B81CB on identityiq.spt_identity (administrator);

    alter table identityiq.spt_identity 
        add constraint FK4770624622315AAF 
        foreign key (extended_identity5) 
        references identityiq.spt_identity;

    create index identityiq.FK4770624622315AAF on identityiq.spt_identity (extended_identity5);

    alter table identityiq.spt_identity 
        add constraint FK4770624635D4CEAB 
        foreign key (manager) 
        references identityiq.spt_identity;

    create index identityiq.FK4770624635D4CEAB on identityiq.spt_identity (manager);

    alter table identityiq.spt_identity 
        add constraint FK4770624622315AAE 
        foreign key (extended_identity4) 
        references identityiq.spt_identity;

    create index identityiq.FK4770624622315AAE on identityiq.spt_identity (extended_identity4);

    alter table identityiq.spt_identity 
        add constraint FK4770624622315AAB 
        foreign key (extended_identity1) 
        references identityiq.spt_identity;

    create index identityiq.FK4770624622315AAB on identityiq.spt_identity (extended_identity1);

    alter table identityiq.spt_identity 
        add constraint FK47706246486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK47706246486634B7 on identityiq.spt_identity (assigned_scope);

    alter table identityiq.spt_identity 
        add constraint FK4770624622315AAD 
        foreign key (extended_identity3) 
        references identityiq.spt_identity;

    create index identityiq.FK4770624622315AAD on identityiq.spt_identity (extended_identity3);

    alter table identityiq.spt_identity 
        add constraint FK4770624622315AAC 
        foreign key (extended_identity2) 
        references identityiq.spt_identity;

    create index identityiq.FK4770624622315AAC on identityiq.spt_identity (extended_identity2);

    alter table identityiq.spt_identity 
        add constraint FK4770624646DBED88 
        foreign key (uipreferences) 
        references identityiq.spt_uipreferences;

    create index identityiq.FK4770624646DBED88 on identityiq.spt_identity (uipreferences);

    alter table identityiq.spt_identity 
        add constraint FK47706246761EBB04 
        foreign key (scorecard) 
        references identityiq.spt_scorecard;

    create index identityiq.FK47706246761EBB04 on identityiq.spt_identity (scorecard);

    create index identityiq.spt_identity_archive_source on identityiq.spt_identity_archive (source_id);

    alter table identityiq.spt_identity_archive 
        add constraint FKF49D43C9A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKF49D43C9A5FB1B1 on identityiq.spt_identity_archive (owner);

    alter table identityiq.spt_identity_archive 
        add constraint FKF49D43C9486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKF49D43C9486634B7 on identityiq.spt_identity_archive (assigned_scope);

    alter table identityiq.spt_identity_assigned_roles 
        add constraint FK559F642556651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK559F642556651F3A on identityiq.spt_identity_assigned_roles (identity_id);

    alter table identityiq.spt_identity_assigned_roles 
        add constraint FK559F642528E03F44 
        foreign key (bundle) 
        references identityiq.spt_bundle;

    create index identityiq.FK559F642528E03F44 on identityiq.spt_identity_assigned_roles (bundle);

    alter table identityiq.spt_identity_bundles 
        add constraint FK2F3B433856651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK2F3B433856651F3A on identityiq.spt_identity_bundles (identity_id);

    alter table identityiq.spt_identity_bundles 
        add constraint FK2F3B433828E03F44 
        foreign key (bundle) 
        references identityiq.spt_bundle;

    create index identityiq.FK2F3B433828E03F44 on identityiq.spt_identity_bundles (bundle);

    alter table identityiq.spt_identity_capabilities 
        add constraint FK2258790F56651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK2258790F56651F3A on identityiq.spt_identity_capabilities (identity_id);

    alter table identityiq.spt_identity_capabilities 
        add constraint FK2258790FA526F8FA 
        foreign key (capability_id) 
        references identityiq.spt_capability;

    create index identityiq.FK2258790FA526F8FA on identityiq.spt_identity_capabilities (capability_id);

    alter table identityiq.spt_identity_controlled_scopes 
        add constraint FK926D30B79D803AFA 
        foreign key (scope_id) 
        references identityiq.spt_scope;

    create index identityiq.FK926D30B79D803AFA on identityiq.spt_identity_controlled_scopes (scope_id);

    alter table identityiq.spt_identity_controlled_scopes 
        add constraint FK926D30B756651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK926D30B756651F3A on identityiq.spt_identity_controlled_scopes (identity_id);

    create index identityiq.spt_identity_dashboard_type on identityiq.spt_identity_dashboard (type);

    alter table identityiq.spt_identity_dashboard 
        add constraint FK6732A7DBA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK6732A7DBA5FB1B1 on identityiq.spt_identity_dashboard (owner);

    alter table identityiq.spt_identity_dashboard 
        add constraint FK6732A7DB68DCB7C8 
        foreign key (layout) 
        references identityiq.spt_dashboard_layout;

    create index identityiq.FK6732A7DB68DCB7C8 on identityiq.spt_identity_dashboard (layout);

    alter table identityiq.spt_identity_dashboard 
        add constraint FK6732A7DB56651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK6732A7DB56651F3A on identityiq.spt_identity_dashboard (identity_id);

    alter table identityiq.spt_identity_dashboard 
        add constraint FK6732A7DB486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK6732A7DB486634B7 on identityiq.spt_identity_dashboard (assigned_scope);

    create index identityiq.spt_identity_ent_ag_state on identityiq.spt_identity_entitlement (aggregation_state);

    create index identityiq.spt_identity_ent_assgnid on identityiq.spt_identity_entitlement (assignment_id);

    create index identityiq.spt_identity_ent_assigned on identityiq.spt_identity_entitlement (assigned);



    create index identityiq.spt_identity_ent_type on identityiq.spt_identity_entitlement (type);

    create index identityiq.spt_identity_ent_role_granted on identityiq.spt_identity_entitlement (granted_by_role);




    create index identityiq.spt_identity_ent_allowed on identityiq.spt_identity_entitlement (allowed);

    alter table identityiq.spt_identity_entitlement 
        add constraint FK1134F4B4A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK1134F4B4A5FB1B1 on identityiq.spt_identity_entitlement (owner);

    alter table identityiq.spt_identity_entitlement 
        add constraint FK1134F4B439D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FK1134F4B439D71460 on identityiq.spt_identity_entitlement (application);

    alter table identityiq.spt_identity_entitlement 
        add constraint FK1134F4B456651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK1134F4B456651F3A on identityiq.spt_identity_entitlement (identity_id);

    alter table identityiq.spt_identity_entitlement 
        add constraint FK1134F4B484ACD425 
        foreign key (certification_item) 
        references identityiq.spt_certification_item;

    create index identityiq.FK1134F4B484ACD425 on identityiq.spt_identity_entitlement (certification_item);

    alter table identityiq.spt_identity_entitlement 
        add constraint FK1134F4B4D9C563CD 
        foreign key (pending_certification_item) 
        references identityiq.spt_certification_item;

    create index identityiq.FK1134F4B4D9C563CD on identityiq.spt_identity_entitlement (pending_certification_item);

    alter table identityiq.spt_identity_entitlement 
        add constraint FK1134F4B47AEC327 
        foreign key (request_item) 
        references identityiq.spt_identity_request_item;

    create index identityiq.FK1134F4B47AEC327 on identityiq.spt_identity_entitlement (request_item);

    alter table identityiq.spt_identity_entitlement 
        add constraint FK1134F4B4FFB630CF 
        foreign key (pending_request_item) 
        references identityiq.spt_identity_request_item;

    create index identityiq.FK1134F4B4FFB630CF on identityiq.spt_identity_entitlement (pending_request_item);

    create index identityiq.spt_id_hist_item_entry_date on identityiq.spt_identity_history_item (entry_date);

    create index identityiq.spt_id_hist_item_application on identityiq.spt_identity_history_item (application);


    create index identityiq.spt_id_hist_item_instance on identityiq.spt_identity_history_item (instance);

    create index identityiq.spt_id_hist_item_status on identityiq.spt_identity_history_item (status);


    create index identityiq.spt_id_hist_item_policy on identityiq.spt_identity_history_item (policy);

    create index identityiq.spt_id_hist_item_role on identityiq.spt_identity_history_item (role);


    create index identityiq.spt_id_hist_item_cert_type on identityiq.spt_identity_history_item (certification_type);


    create index identityiq.spt_id_hist_item_actor on identityiq.spt_identity_history_item (actor);

    alter table identityiq.spt_identity_history_item 
        add constraint FK60B7537A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK60B7537A5FB1B1 on identityiq.spt_identity_history_item (owner);

    alter table identityiq.spt_identity_history_item 
        add constraint FK60B753756651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK60B753756651F3A on identityiq.spt_identity_history_item (identity_id);

    create index identityiq.spt_idrequest_endDate on identityiq.spt_identity_request (end_date);

    create index identityiq.spt_idrequest_target_id on identityiq.spt_identity_request (target_id);

    create index identityiq.spt_idrequest_priority on identityiq.spt_identity_request (priority);


    create index identityiq.spt_idrequest_name on identityiq.spt_identity_request (name);

    create index identityiq.spt_idrequest_requestor_id on identityiq.spt_identity_request (requester_id);

    create index identityiq.spt_idrequest_verified on identityiq.spt_identity_request (verified);



    create index identityiq.spt_idrequest_compl_status on identityiq.spt_identity_request (completion_status);

    create index identityiq.spt_idrequest_exec_status on identityiq.spt_identity_request (execution_status);

    create index identityiq.spt_idrequest_has_messages on identityiq.spt_identity_request (has_messages);

    create index identityiq.spt_idrequest_state on identityiq.spt_identity_request (state);

    create index identityiq.spt_idrequest_type on identityiq.spt_identity_request (type);

    alter table identityiq.spt_identity_request 
        add constraint FK62835596A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK62835596A5FB1B1 on identityiq.spt_identity_request (owner);

    alter table identityiq.spt_identity_request 
        add constraint FK62835596486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK62835596486634B7 on identityiq.spt_identity_request (assigned_scope);


    create index identityiq.spt_reqitem_approvername on identityiq.spt_identity_request_item (approver_name);

    create index identityiq.spt_reqitem_provisioning_state on identityiq.spt_identity_request_item (provisioning_state);

    create index identityiq.spt_reqitem_ownername on identityiq.spt_identity_request_item (owner_name);


    create index identityiq.spt_reqitem_comp_status on identityiq.spt_identity_request_item (compilation_status);

    create index identityiq.spt_reqitem_exp_cause on identityiq.spt_identity_request_item (expansion_cause);



    create index identityiq.spt_reqitem_approval_state on identityiq.spt_identity_request_item (approval_state);

    alter table identityiq.spt_identity_request_item 
        add constraint FKC8ACEC1CA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKC8ACEC1CA5FB1B1 on identityiq.spt_identity_request_item (owner);

    alter table identityiq.spt_identity_request_item 
        add constraint FKC8ACEC1C7733749D 
        foreign key (identity_request_id) 
        references identityiq.spt_identity_request;

    create index identityiq.FKC8ACEC1C7733749D on identityiq.spt_identity_request_item (identity_request_id);

    alter table identityiq.spt_identity_role_metadata 
        add constraint FK8DD1129F56651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK8DD1129F56651F3A on identityiq.spt_identity_role_metadata (identity_id);

    alter table identityiq.spt_identity_role_metadata 
        add constraint FK8DD1129F539509E7 
        foreign key (role_metadata_id) 
        references identityiq.spt_role_metadata;

    create index identityiq.FK8DD1129F539509E7 on identityiq.spt_identity_role_metadata (role_metadata_id);

    create index identityiq.spt_idsnap_id_name on identityiq.spt_identity_snapshot (identity_name);

    create index identityiq.spt_identity_id on identityiq.spt_identity_snapshot (identity_id);

    alter table identityiq.spt_identity_snapshot 
        add constraint FK1652D39DA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK1652D39DA5FB1B1 on identityiq.spt_identity_snapshot (owner);

    alter table identityiq.spt_identity_snapshot 
        add constraint FK1652D39D486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK1652D39D486634B7 on identityiq.spt_identity_snapshot (assigned_scope);

    alter table identityiq.spt_identity_trigger 
        add constraint FKE207B8BFA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKE207B8BFA5FB1B1 on identityiq.spt_identity_trigger (owner);

    alter table identityiq.spt_identity_trigger 
        add constraint FKE207B8BF3908AE7A 
        foreign key (rule_id) 
        references identityiq.spt_rule;

    create index identityiq.FKE207B8BF3908AE7A on identityiq.spt_identity_trigger (rule_id);

    alter table identityiq.spt_identity_trigger 
        add constraint FKE207B8BF486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKE207B8BF486634B7 on identityiq.spt_identity_trigger (assigned_scope);

    alter table identityiq.spt_identity_workgroups 
        add constraint FKFBDE3BBE457BB10C 
        foreign key (workgroup) 
        references identityiq.spt_identity;

    create index identityiq.FKFBDE3BBE457BB10C on identityiq.spt_identity_workgroups (workgroup);

    alter table identityiq.spt_identity_workgroups 
        add constraint FKFBDE3BBE56651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FKFBDE3BBE56651F3A on identityiq.spt_identity_workgroups (identity_id);

    alter table identityiq.spt_integration_config 
        add constraint FK12CC3B95A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK12CC3B95A5FB1B1 on identityiq.spt_integration_config (owner);

    alter table identityiq.spt_integration_config 
        add constraint FK12CC3B95486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK12CC3B95486634B7 on identityiq.spt_integration_config (assigned_scope);

    alter table identityiq.spt_integration_config 
        add constraint FK12CC3B95907AB97A 
        foreign key (application_id) 
        references identityiq.spt_application;

    create index identityiq.FK12CC3B95907AB97A on identityiq.spt_integration_config (application_id);

    alter table identityiq.spt_integration_config 
        add constraint FK12CC3B95AAEC2008 
        foreign key (plan_initializer) 
        references identityiq.spt_rule;

    create index identityiq.FK12CC3B95AAEC2008 on identityiq.spt_integration_config (plan_initializer);

    alter table identityiq.spt_integration_config 
        add constraint FK12CC3B95FAA8585B 
        foreign key (container_id) 
        references identityiq.spt_bundle;

    create index identityiq.FK12CC3B95FAA8585B on identityiq.spt_integration_config (container_id);

    alter table identityiq.spt_jasper_files 
        add constraint FKE710B7C1AAD4575B 
        foreign key (result) 
        references identityiq.spt_jasper_result;

    create index identityiq.FKE710B7C1AAD4575B on identityiq.spt_jasper_files (result);

    alter table identityiq.spt_jasper_files 
        add constraint FKE710B7C12ABB3BFC 
        foreign key (elt) 
        references identityiq.spt_persisted_file;

    create index identityiq.FKE710B7C12ABB3BFC on identityiq.spt_jasper_files (elt);

    create index identityiq.handlerId on identityiq.spt_jasper_page_bucket (handler_id);

    create index identityiq.bucketNumber on identityiq.spt_jasper_page_bucket (bucket_number);

    alter table identityiq.spt_jasper_page_bucket 
        add constraint FKA6291364A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKA6291364A5FB1B1 on identityiq.spt_jasper_page_bucket (owner);

    alter table identityiq.spt_jasper_page_bucket 
        add constraint FKA6291364486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKA6291364486634B7 on identityiq.spt_jasper_page_bucket (assigned_scope);

    alter table identityiq.spt_jasper_result 
        add constraint FKF4B7413A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKF4B7413A5FB1B1 on identityiq.spt_jasper_result (owner);

    alter table identityiq.spt_jasper_result 
        add constraint FKF4B7413486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKF4B7413486634B7 on identityiq.spt_jasper_result (assigned_scope);

    alter table identityiq.spt_jasper_template 
        add constraint FK2F7D52F0A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK2F7D52F0A5FB1B1 on identityiq.spt_jasper_template (owner);

    alter table identityiq.spt_jasper_template 
        add constraint FK2F7D52F0486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK2F7D52F0486634B7 on identityiq.spt_jasper_template (assigned_scope);


    create index identityiq.spt_link_entitlements on identityiq.spt_link (entitlements);




    create index identityiq.spt_link_lastAggregation on identityiq.spt_link (last_target_aggregation);

    create index identityiq.spt_link_lastRefresh on identityiq.spt_link (last_refresh);

    alter table identityiq.spt_link 
        add constraint FK9A40A582A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK9A40A582A5FB1B1 on identityiq.spt_link (owner);

    alter table identityiq.spt_link 
        add constraint FK9A40A58239D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FK9A40A58239D71460 on identityiq.spt_link (application);

    alter table identityiq.spt_link 
        add constraint FK9A40A58256651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK9A40A58256651F3A on identityiq.spt_link (identity_id);

    alter table identityiq.spt_link 
        add constraint FK9A40A582486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK9A40A582486634B7 on identityiq.spt_link (assigned_scope);

    create index identityiq.spt_localized_attr_locale on identityiq.spt_localized_attribute (locale);

    create index identityiq.spt_localized_attr_attr on identityiq.spt_localized_attribute (attribute);

    create index identityiq.spt_localized_attr_targetname on identityiq.spt_localized_attribute (target_name);

    create index identityiq.spt_localized_attr_targetid on identityiq.spt_localized_attribute (target_id);

    create index identityiq.spt_localized_attr_name on identityiq.spt_localized_attribute (name);

    alter table identityiq.spt_localized_attribute 
        add constraint FK93ADD450A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK93ADD450A5FB1B1 on identityiq.spt_localized_attribute (owner);

    alter table identityiq.spt_managed_attr_inheritance 
        add constraint FK53B8B9A42C3CA9DA 
        foreign key (managedattribute) 
        references identityiq.spt_managed_attribute;

    create index identityiq.FK53B8B9A42C3CA9DA on identityiq.spt_managed_attr_inheritance (managedattribute);

    alter table identityiq.spt_managed_attr_inheritance 
        add constraint FK53B8B9A4C7A4B4AE 
        foreign key (inherits_from) 
        references identityiq.spt_managed_attribute;

    create index identityiq.FK53B8B9A4C7A4B4AE on identityiq.spt_managed_attr_inheritance (inherits_from);

    alter table identityiq.spt_managed_attr_perms 
        add constraint FKB7E473DD2C3CA9DA 
        foreign key (managedattribute) 
        references identityiq.spt_managed_attribute;

    create index identityiq.FKB7E473DD2C3CA9DA on identityiq.spt_managed_attr_perms (managedattribute);

    alter table identityiq.spt_managed_attr_target_perms 
        add constraint FK7839CDBB2C3CA9DA 
        foreign key (managedattribute) 
        references identityiq.spt_managed_attribute;

    create index identityiq.FK7839CDBB2C3CA9DA on identityiq.spt_managed_attr_target_perms (managedattribute);


    create index identityiq.spt_managed_attr_last_tgt_agg on identityiq.spt_managed_attribute (last_target_aggregation);



    create index identityiq.spt_managed_attr_aggregated on identityiq.spt_managed_attribute (aggregated);


    create index identityiq.spt_managed_attr_requestable on identityiq.spt_managed_attribute (requestable);

    create index identityiq.spt_managed_attr_type on identityiq.spt_managed_attribute (type);








    alter table identityiq.spt_managed_attribute 
        add constraint FKF5F14174A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKF5F14174A5FB1B1 on identityiq.spt_managed_attribute (owner);

    alter table identityiq.spt_managed_attribute 
        add constraint FKF5F1417439D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FKF5F1417439D71460 on identityiq.spt_managed_attribute (application);

    alter table identityiq.spt_managed_attribute 
        add constraint FKF5F14174486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKF5F14174486634B7 on identityiq.spt_managed_attribute (assigned_scope);

    alter table identityiq.spt_message_template 
        add constraint FKD78FF3AA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKD78FF3AA5FB1B1 on identityiq.spt_message_template (owner);

    alter table identityiq.spt_message_template 
        add constraint FKD78FF3A486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKD78FF3A486634B7 on identityiq.spt_message_template (assigned_scope);

    alter table identityiq.spt_mining_config 
        add constraint FK2894D189A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK2894D189A5FB1B1 on identityiq.spt_mining_config (owner);

    alter table identityiq.spt_mining_config 
        add constraint FK2894D189486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK2894D189486634B7 on identityiq.spt_mining_config (assigned_scope);

    create index identityiq.spt_mitigation_policy on identityiq.spt_mitigation_expiration (policy);


    create index identityiq.spt_mitigation_app on identityiq.spt_mitigation_expiration (application);


    create index identityiq.spt_mitigation_permission on identityiq.spt_mitigation_expiration (permission);


    create index identityiq.spt_mitigation_role on identityiq.spt_mitigation_expiration (role_name);

    create index identityiq.spt_mitigation_instance on identityiq.spt_mitigation_expiration (instance);

    alter table identityiq.spt_mitigation_expiration 
        add constraint FK6C200727A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK6C200727A5FB1B1 on identityiq.spt_mitigation_expiration (owner);

    alter table identityiq.spt_mitigation_expiration 
        add constraint FK6C20072756651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK6C20072756651F3A on identityiq.spt_mitigation_expiration (identity_id);

    alter table identityiq.spt_mitigation_expiration 
        add constraint FK6C200727486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK6C200727486634B7 on identityiq.spt_mitigation_expiration (assigned_scope);

    alter table identityiq.spt_mitigation_expiration 
        add constraint FK6C20072771E36ACA 
        foreign key (mitigator) 
        references identityiq.spt_identity;

    create index identityiq.FK6C20072771E36ACA on identityiq.spt_mitigation_expiration (mitigator);

    alter table identityiq.spt_monitoring_statistic 
        add constraint FK9B2F43A1A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK9B2F43A1A5FB1B1 on identityiq.spt_monitoring_statistic (owner);

    alter table identityiq.spt_monitoring_statistic 
        add constraint FK9B2F43A1486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK9B2F43A1486634B7 on identityiq.spt_monitoring_statistic (assigned_scope);

    alter table identityiq.spt_monitoring_statistic_tags 
        add constraint FK770FC5F7E6181207 
        foreign key (elt) 
        references identityiq.spt_tag;

    create index identityiq.FK770FC5F7E6181207 on identityiq.spt_monitoring_statistic_tags (elt);

    alter table identityiq.spt_monitoring_statistic_tags 
        add constraint FK770FC5F7315E4612 
        foreign key (statistic_id) 
        references identityiq.spt_monitoring_statistic;

    create index identityiq.FK770FC5F7315E4612 on identityiq.spt_monitoring_statistic_tags (statistic_id);

    alter table identityiq.spt_object_config 
        add constraint FK92854BBAA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK92854BBAA5FB1B1 on identityiq.spt_object_config (owner);

    alter table identityiq.spt_object_config 
        add constraint FK92854BBA486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK92854BBA486634B7 on identityiq.spt_object_config (assigned_scope);

    create index identityiq.spt_partition_status on identityiq.spt_partition_result (completion_status);

    alter table identityiq.spt_partition_result 
        add constraint FK9541609AA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK9541609AA5FB1B1 on identityiq.spt_partition_result (owner);

    alter table identityiq.spt_partition_result 
        add constraint FK9541609A3EE0F059 
        foreign key (task_result) 
        references identityiq.spt_task_result;

    create index identityiq.FK9541609A3EE0F059 on identityiq.spt_partition_result (task_result);

    alter table identityiq.spt_partition_result 
        add constraint FK9541609A486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK9541609A486634B7 on identityiq.spt_partition_result (assigned_scope);

    alter table identityiq.spt_password_policy 
        add constraint FK479B98CEA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK479B98CEA5FB1B1 on identityiq.spt_password_policy (owner);

    alter table identityiq.spt_password_policy_holder 
        add constraint FKA7124E3DA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKA7124E3DA5FB1B1 on identityiq.spt_password_policy_holder (owner);

    alter table identityiq.spt_password_policy_holder 
        add constraint FKA7124E3D39D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FKA7124E3D39D71460 on identityiq.spt_password_policy_holder (application);

    alter table identityiq.spt_password_policy_holder 
        add constraint FKA7124E3D25FBEF1F 
        foreign key (policy) 
        references identityiq.spt_password_policy;

    create index identityiq.FKA7124E3D25FBEF1F on identityiq.spt_password_policy_holder (policy);

    alter table identityiq.spt_persisted_file 
        add constraint FKCEBAA850A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKCEBAA850A5FB1B1 on identityiq.spt_persisted_file (owner);

    alter table identityiq.spt_persisted_file 
        add constraint FKCEBAA850486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKCEBAA850486634B7 on identityiq.spt_persisted_file (assigned_scope);



    alter table identityiq.spt_plugin 
        add constraint FK13AE22BBF7C36E0D 
        foreign key (file_id) 
        references identityiq.spt_persisted_file;

    alter table identityiq.spt_policy 
        add constraint FK13D458BAA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK13D458BAA5FB1B1 on identityiq.spt_policy (owner);

    alter table identityiq.spt_policy 
        add constraint FK13D458BA16E8C617 
        foreign key (violation_owner) 
        references identityiq.spt_identity;

    create index identityiq.FK13D458BA16E8C617 on identityiq.spt_policy (violation_owner);

    alter table identityiq.spt_policy 
        add constraint FK13D458BA486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK13D458BA486634B7 on identityiq.spt_policy (assigned_scope);

    alter table identityiq.spt_policy 
        add constraint FK13D458BA2E02D59E 
        foreign key (violation_owner_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK13D458BA2E02D59E on identityiq.spt_policy (violation_owner_rule);

    create index identityiq.spt_policy_violation_active on identityiq.spt_policy_violation (active);

    alter table identityiq.spt_policy_violation 
        add constraint FK6E4413E0A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK6E4413E0A5FB1B1 on identityiq.spt_policy_violation (owner);

    alter table identityiq.spt_policy_violation 
        add constraint FK6E4413E056651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK6E4413E056651F3A on identityiq.spt_policy_violation (identity_id);

    alter table identityiq.spt_policy_violation 
        add constraint FK6E4413E0486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK6E4413E0486634B7 on identityiq.spt_policy_violation (assigned_scope);

    alter table identityiq.spt_policy_violation 
        add constraint FK6E4413E0BD5A5736 
        foreign key (pending_workflow) 
        references identityiq.spt_workflow_case;

    create index identityiq.FK6E4413E0BD5A5736 on identityiq.spt_policy_violation (pending_workflow);

    create index identityiq.spt_process_log_owner_name on identityiq.spt_process_log (owner_name);

    create index identityiq.spt_process_log_case_id on identityiq.spt_process_log (case_id);

    create index identityiq.spt_process_log_wf_case_name on identityiq.spt_process_log (workflow_case_name);

    create index identityiq.spt_process_log_process_name on identityiq.spt_process_log (process_name);

    create index identityiq.spt_process_log_case_status on identityiq.spt_process_log (case_status);

    create index identityiq.spt_process_log_step_name on identityiq.spt_process_log (step_name);

    create index identityiq.spt_process_log_approval_name on identityiq.spt_process_log (approval_name);

    alter table identityiq.spt_process_log 
        add constraint FK28FB62ECA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK28FB62ECA5FB1B1 on identityiq.spt_process_log (owner);

    alter table identityiq.spt_process_log 
        add constraint FK28FB62EC486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK28FB62EC486634B7 on identityiq.spt_process_log (assigned_scope);

    alter table identityiq.spt_profile 
        add constraint FK6BFE4721A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK6BFE4721A5FB1B1 on identityiq.spt_profile (owner);

    alter table identityiq.spt_profile 
        add constraint FK6BFE472139D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FK6BFE472139D71460 on identityiq.spt_profile (application);

    alter table identityiq.spt_profile 
        add constraint FK6BFE472122D068BA 
        foreign key (bundle_id) 
        references identityiq.spt_bundle;

    create index identityiq.FK6BFE472122D068BA on identityiq.spt_profile (bundle_id);

    alter table identityiq.spt_profile 
        add constraint FK6BFE4721486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK6BFE4721486634B7 on identityiq.spt_profile (assigned_scope);

    alter table identityiq.spt_profile_constraints 
        add constraint FKEFD7A218B236FD12 
        foreign key (profile) 
        references identityiq.spt_profile;

    create index identityiq.FKEFD7A218B236FD12 on identityiq.spt_profile_constraints (profile);

    alter table identityiq.spt_profile_permissions 
        add constraint FK932EF066B236FD12 
        foreign key (profile) 
        references identityiq.spt_profile;

    create index identityiq.FK932EF066B236FD12 on identityiq.spt_profile_permissions (profile);

    create index identityiq.spt_provreq_expiration on identityiq.spt_provisioning_request (expiration);

    alter table identityiq.spt_provisioning_request 
        add constraint FK604114C5A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK604114C5A5FB1B1 on identityiq.spt_provisioning_request (owner);

    alter table identityiq.spt_provisioning_request 
        add constraint FK604114C556651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK604114C556651F3A on identityiq.spt_provisioning_request (identity_id);

    alter table identityiq.spt_provisioning_request 
        add constraint FK604114C5486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK604114C5486634B7 on identityiq.spt_provisioning_request (assigned_scope);

    create index identityiq.spt_prvtrans_name on identityiq.spt_provisioning_transaction (name);

    create index identityiq.spt_prvtrans_status on identityiq.spt_provisioning_transaction (status);


    create index identityiq.spt_prvtrans_src on identityiq.spt_provisioning_transaction (source);


    create index identityiq.spt_prvtrans_forced on identityiq.spt_provisioning_transaction (forced);



    create index identityiq.spt_prvtrans_type on identityiq.spt_provisioning_transaction (type);



    create index identityiq.spt_prvtrans_op on identityiq.spt_provisioning_transaction (operation);

    alter table identityiq.spt_quick_link 
        add constraint FKF16B9E94A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKF16B9E94A5FB1B1 on identityiq.spt_quick_link (owner);

    alter table identityiq.spt_quick_link 
        add constraint FKF16B9E94486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKF16B9E94486634B7 on identityiq.spt_quick_link (assigned_scope);

    alter table identityiq.spt_quick_link_options 
        add constraint FK8C93F7F3A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK8C93F7F3A5FB1B1 on identityiq.spt_quick_link_options (owner);

    alter table identityiq.spt_quick_link_options 
        add constraint FK8C93F7F3E5B001E9 
        foreign key (dynamic_scope) 
        references identityiq.spt_dynamic_scope;

    create index identityiq.FK8C93F7F3E5B001E9 on identityiq.spt_quick_link_options (dynamic_scope);

    alter table identityiq.spt_quick_link_options 
        add constraint FK8C93F7F329E4F453 
        foreign key (quick_link) 
        references identityiq.spt_quick_link;

    create index identityiq.FK8C93F7F329E4F453 on identityiq.spt_quick_link_options (quick_link);

    alter table identityiq.spt_remediation_item 
        add constraint FK53608075A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK53608075A5FB1B1 on identityiq.spt_remediation_item (owner);

    alter table identityiq.spt_remediation_item 
        add constraint FK53608075FCF09A9D 
        foreign key (work_item_id) 
        references identityiq.spt_work_item;

    create index identityiq.FK53608075FCF09A9D on identityiq.spt_remediation_item (work_item_id);

    alter table identityiq.spt_remediation_item 
        add constraint FK53608075486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK53608075486634B7 on identityiq.spt_remediation_item (assigned_scope);

    alter table identityiq.spt_remediation_item 
        add constraint FK53608075EDFFCCCD 
        foreign key (assignee) 
        references identityiq.spt_identity;

    create index identityiq.FK53608075EDFFCCCD on identityiq.spt_remediation_item (assignee);

    create index identityiq.spt_remote_login_expiration on identityiq.spt_remote_login_token (expiration);

    alter table identityiq.spt_remote_login_token 
        add constraint FK45BCDEB2A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK45BCDEB2A5FB1B1 on identityiq.spt_remote_login_token (owner);

    alter table identityiq.spt_remote_login_token 
        add constraint FK45BCDEB2486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK45BCDEB2486634B7 on identityiq.spt_remote_login_token (assigned_scope);

    create index identityiq.spt_request_compl_status on identityiq.spt_request (completion_status);

    create index identityiq.spt_request_depPhase on identityiq.spt_request (dependent_phase);

    create index identityiq.spt_request_expiration on identityiq.spt_request (expiration);

    create index identityiq.spt_request_nextLaunch on identityiq.spt_request (next_launch);

    create index identityiq.spt_request_name on identityiq.spt_request (name);

    create index identityiq.spt_request_phase on identityiq.spt_request (phase);

    alter table identityiq.spt_request 
        add constraint FKBFBEB007A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKBFBEB007A5FB1B1 on identityiq.spt_request (owner);

    alter table identityiq.spt_request 
        add constraint FKBFBEB0073EE0F059 
        foreign key (task_result) 
        references identityiq.spt_task_result;

    create index identityiq.FKBFBEB0073EE0F059 on identityiq.spt_request (task_result);

    alter table identityiq.spt_request 
        add constraint FKBFBEB007486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKBFBEB007486634B7 on identityiq.spt_request (assigned_scope);

    alter table identityiq.spt_request 
        add constraint FKBFBEB007307D4C55 
        foreign key (definition) 
        references identityiq.spt_request_definition;

    create index identityiq.FKBFBEB007307D4C55 on identityiq.spt_request (definition);

    alter table identityiq.spt_request_arguments 
        add constraint FK2551071EACF1AFBA 
        foreign key (signature) 
        references identityiq.spt_request_definition;

    create index identityiq.FK2551071EACF1AFBA on identityiq.spt_request_arguments (signature);

    alter table identityiq.spt_request_definition 
        add constraint FKF976608BA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKF976608BA5FB1B1 on identityiq.spt_request_definition (owner);

    alter table identityiq.spt_request_definition 
        add constraint FKF976608B319F1FAC 
        foreign key (parent) 
        references identityiq.spt_request_definition;

    create index identityiq.FKF976608B319F1FAC on identityiq.spt_request_definition (parent);

    alter table identityiq.spt_request_definition 
        add constraint FKF976608B486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKF976608B486634B7 on identityiq.spt_request_definition (assigned_scope);

    alter table identityiq.spt_request_definition_rights 
        add constraint FKD7D17C0B77278CD9 
        foreign key (request_definition_id) 
        references identityiq.spt_request_definition;

    create index identityiq.FKD7D17C0B77278CD9 on identityiq.spt_request_definition_rights (request_definition_id);

    alter table identityiq.spt_request_definition_rights 
        add constraint FKD7D17C0BD22635BD 
        foreign key (right_id) 
        references identityiq.spt_right;

    create index identityiq.FKD7D17C0BD22635BD on identityiq.spt_request_definition_rights (right_id);

    alter table identityiq.spt_request_returns 
        add constraint FK9F6C90BACF1AFBA 
        foreign key (signature) 
        references identityiq.spt_request_definition;

    create index identityiq.FK9F6C90BACF1AFBA on identityiq.spt_request_returns (signature);

    alter table identityiq.spt_request_state 
        add constraint FKDCED76591A9F1D1A 
        foreign key (request_id) 
        references identityiq.spt_request;

    create index identityiq.FKDCED76591A9F1D1A on identityiq.spt_request_state (request_id);

    alter table identityiq.spt_resource_event 
        add constraint FK37A182B139D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FK37A182B139D71460 on identityiq.spt_resource_event (application);

    alter table identityiq.spt_right 
        add constraint FKAE287D94A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKAE287D94A5FB1B1 on identityiq.spt_right (owner);

    alter table identityiq.spt_right 
        add constraint FKAE287D94486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKAE287D94486634B7 on identityiq.spt_right (assigned_scope);

    alter table identityiq.spt_right_config 
        add constraint FKE69E544DA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKE69E544DA5FB1B1 on identityiq.spt_right_config (owner);

    alter table identityiq.spt_right_config 
        add constraint FKE69E544D486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKE69E544D486634B7 on identityiq.spt_right_config (assigned_scope);

    create index identityiq.role_index_cscore on identityiq.spt_role_index (composite_score);

    alter table identityiq.spt_role_index 
        add constraint FKF99E0B51A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKF99E0B51A5FB1B1 on identityiq.spt_role_index (owner);

    alter table identityiq.spt_role_index 
        add constraint FKF99E0B51486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKF99E0B51486634B7 on identityiq.spt_role_index (assigned_scope);

    alter table identityiq.spt_role_index 
        add constraint FKF99E0B5128E03F44 
        foreign key (bundle) 
        references identityiq.spt_bundle;

    create index identityiq.FKF99E0B5128E03F44 on identityiq.spt_role_index (bundle);

    alter table identityiq.spt_role_metadata 
        add constraint FK1D411450A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK1D411450A5FB1B1 on identityiq.spt_role_metadata (owner);

    alter table identityiq.spt_role_metadata 
        add constraint FK1D4114507B368F38 
        foreign key (role) 
        references identityiq.spt_bundle;

    create index identityiq.FK1D4114507B368F38 on identityiq.spt_role_metadata (role);

    alter table identityiq.spt_role_metadata 
        add constraint FK1D411450486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK1D411450486634B7 on identityiq.spt_role_metadata (assigned_scope);

    alter table identityiq.spt_role_mining_result 
        add constraint FKF65D466BA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKF65D466BA5FB1B1 on identityiq.spt_role_mining_result (owner);

    alter table identityiq.spt_role_mining_result 
        add constraint FKF65D466B486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKF65D466B486634B7 on identityiq.spt_role_mining_result (assigned_scope);

    alter table identityiq.spt_role_scorecard 
        add constraint FK494BABA1A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK494BABA1A5FB1B1 on identityiq.spt_role_scorecard (owner);

    alter table identityiq.spt_role_scorecard 
        add constraint FK494BABA1CD12A446 
        foreign key (role_id) 
        references identityiq.spt_bundle;

    create index identityiq.FK494BABA1CD12A446 on identityiq.spt_role_scorecard (role_id);

    alter table identityiq.spt_role_scorecard 
        add constraint FK494BABA1486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK494BABA1486634B7 on identityiq.spt_role_scorecard (assigned_scope);

    alter table identityiq.spt_rule 
        add constraint FK9A438C84A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK9A438C84A5FB1B1 on identityiq.spt_rule (owner);

    alter table identityiq.spt_rule 
        add constraint FK9A438C84486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK9A438C84486634B7 on identityiq.spt_rule (assigned_scope);

    alter table identityiq.spt_rule_dependencies 
        add constraint FKCBE251043908AE7A 
        foreign key (rule_id) 
        references identityiq.spt_rule;

    create index identityiq.FKCBE251043908AE7A on identityiq.spt_rule_dependencies (rule_id);

    alter table identityiq.spt_rule_dependencies 
        add constraint FKCBE25104DB28D887 
        foreign key (dependency) 
        references identityiq.spt_rule;

    create index identityiq.FKCBE25104DB28D887 on identityiq.spt_rule_dependencies (dependency);

    alter table identityiq.spt_rule_registry 
        add constraint FK3D19A998A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK3D19A998A5FB1B1 on identityiq.spt_rule_registry (owner);

    alter table identityiq.spt_rule_registry 
        add constraint FK3D19A998486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK3D19A998486634B7 on identityiq.spt_rule_registry (assigned_scope);

    alter table identityiq.spt_rule_registry_callouts 
        add constraint FKF177290A3908AE7A 
        foreign key (rule_id) 
        references identityiq.spt_rule;

    create index identityiq.FKF177290A3908AE7A on identityiq.spt_rule_registry_callouts (rule_id);

    alter table identityiq.spt_rule_registry_callouts 
        add constraint FKF177290AB7A3F533 
        foreign key (rule_registry_id) 
        references identityiq.spt_rule_registry;

    create index identityiq.FKF177290AB7A3F533 on identityiq.spt_rule_registry_callouts (rule_registry_id);

    alter table identityiq.spt_rule_signature_arguments 
        add constraint FK192036541CB79DF4 
        foreign key (signature) 
        references identityiq.spt_rule;

    create index identityiq.FK192036541CB79DF4 on identityiq.spt_rule_signature_arguments (signature);

    alter table identityiq.spt_rule_signature_returns 
        add constraint FKCF144DC11CB79DF4 
        foreign key (signature) 
        references identityiq.spt_rule;

    create index identityiq.FKCF144DC11CB79DF4 on identityiq.spt_rule_signature_returns (signature);

    create index identityiq.spt_app_attr_mod on identityiq.spt_schema_attributes (remed_mod_type);

    alter table identityiq.spt_schema_attributes 
        add constraint FK95BF22DB9A312D2 
        foreign key (applicationschema) 
        references identityiq.spt_application_schema;

    create index identityiq.FK95BF22DB9A312D2 on identityiq.spt_schema_attributes (applicationschema);

    create index identityiq.scope_dirty on identityiq.spt_scope (dirty);



    create index identityiq.scope_path on identityiq.spt_scope (path);

    alter table identityiq.spt_scope 
        add constraint FKAE33F9CCA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKAE33F9CCA5FB1B1 on identityiq.spt_scope (owner);

    alter table identityiq.spt_scope 
        add constraint FKAE33F9CC35F348E4 
        foreign key (parent_id) 
        references identityiq.spt_scope;

    create index identityiq.FKAE33F9CC35F348E4 on identityiq.spt_scope (parent_id);

    alter table identityiq.spt_scope 
        add constraint FKAE33F9CC486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKAE33F9CC486634B7 on identityiq.spt_scope (assigned_scope);

    alter table identityiq.spt_score_config 
        add constraint FKC7BA0717A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKC7BA0717A5FB1B1 on identityiq.spt_score_config (owner);

    alter table identityiq.spt_score_config 
        add constraint FKC7BA0717486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKC7BA0717486634B7 on identityiq.spt_score_config (assigned_scope);

    alter table identityiq.spt_score_config 
        add constraint FKC7BA0717B37A9D03 
        foreign key (right_config) 
        references identityiq.spt_right_config;

    create index identityiq.FKC7BA0717B37A9D03 on identityiq.spt_score_config (right_config);

    create index identityiq.identity_scorecard_cscore on identityiq.spt_scorecard (composite_score);

    alter table identityiq.spt_scorecard 
        add constraint FK2062601AA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK2062601AA5FB1B1 on identityiq.spt_scorecard (owner);

    alter table identityiq.spt_scorecard 
        add constraint FK2062601A56651F3A 
        foreign key (identity_id) 
        references identityiq.spt_identity;

    create index identityiq.FK2062601A56651F3A on identityiq.spt_scorecard (identity_id);

    alter table identityiq.spt_scorecard 
        add constraint FK2062601A486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK2062601A486634B7 on identityiq.spt_scorecard (assigned_scope);


    create index identityiq.server_stat_snapshot on identityiq.spt_server_statistic (snapshot_name);

    alter table identityiq.spt_server_statistic 
        add constraint FKD8C394DCAAD6EDC1 
        foreign key (monitoring_statistic) 
        references identityiq.spt_monitoring_statistic;

    create index identityiq.FKD8C394DCAAD6EDC1 on identityiq.spt_server_statistic (monitoring_statistic);

    alter table identityiq.spt_server_statistic 
        add constraint FKD8C394DC9755032B 
        foreign key (host) 
        references identityiq.spt_server;

    create index identityiq.FKD8C394DC9755032B on identityiq.spt_server_statistic (host);

    alter table identityiq.spt_service_status 
        add constraint FKB5E2AC44426BA8FB 
        foreign key (definition) 
        references identityiq.spt_service_definition;

    create index identityiq.FKB5E2AC44426BA8FB on identityiq.spt_service_status (definition);

    create index identityiq.spt_sign_off_history_esig on identityiq.spt_sign_off_history (electronic_sign);

    create index identityiq.sign_off_history_signer_id on identityiq.spt_sign_off_history (signer_id);

    alter table identityiq.spt_sign_off_history 
        add constraint FK2BDCCBCAA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK2BDCCBCAA5FB1B1 on identityiq.spt_sign_off_history (owner);

    alter table identityiq.spt_sign_off_history 
        add constraint FK2BDCCBCADB59193A 
        foreign key (certification_id) 
        references identityiq.spt_certification;

    create index identityiq.FK2BDCCBCADB59193A on identityiq.spt_sign_off_history (certification_id);

    alter table identityiq.spt_sign_off_history 
        add constraint FK2BDCCBCA486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK2BDCCBCA486634B7 on identityiq.spt_sign_off_history (assigned_scope);

    alter table identityiq.spt_snapshot_permissions 
        add constraint FK74F58811356B4995 
        foreign key (snapshot) 
        references identityiq.spt_entitlement_snapshot;

    create index identityiq.FK74F58811356B4995 on identityiq.spt_snapshot_permissions (snapshot);

    alter table identityiq.spt_sodconstraint 
        add constraint FKDB94CDDA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKDB94CDDA5FB1B1 on identityiq.spt_sodconstraint (owner);

    alter table identityiq.spt_sodconstraint 
        add constraint FKDB94CDD16E8C617 
        foreign key (violation_owner) 
        references identityiq.spt_identity;

    create index identityiq.FKDB94CDD16E8C617 on identityiq.spt_sodconstraint (violation_owner);

    alter table identityiq.spt_sodconstraint 
        add constraint FKDB94CDD486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKDB94CDD486634B7 on identityiq.spt_sodconstraint (assigned_scope);

    alter table identityiq.spt_sodconstraint 
        add constraint FKDB94CDD2E02D59E 
        foreign key (violation_owner_rule) 
        references identityiq.spt_rule;

    create index identityiq.FKDB94CDD2E02D59E on identityiq.spt_sodconstraint (violation_owner_rule);

    alter table identityiq.spt_sodconstraint 
        add constraint FKDB94CDD57FD28A4 
        foreign key (policy) 
        references identityiq.spt_policy;

    create index identityiq.FKDB94CDD57FD28A4 on identityiq.spt_sodconstraint (policy);

    alter table identityiq.spt_sodconstraint_left 
        add constraint FKCCC28E2952F56EF8 
        foreign key (businessrole) 
        references identityiq.spt_bundle;

    create index identityiq.FKCCC28E2952F56EF8 on identityiq.spt_sodconstraint_left (businessrole);

    alter table identityiq.spt_sodconstraint_left 
        add constraint FKCCC28E29AEB984AA 
        foreign key (sodconstraint) 
        references identityiq.spt_sodconstraint;

    create index identityiq.FKCCC28E29AEB984AA on identityiq.spt_sodconstraint_left (sodconstraint);

    alter table identityiq.spt_sodconstraint_right 
        add constraint FKCBE5983A52F56EF8 
        foreign key (businessrole) 
        references identityiq.spt_bundle;

    create index identityiq.FKCBE5983A52F56EF8 on identityiq.spt_sodconstraint_right (businessrole);

    alter table identityiq.spt_sodconstraint_right 
        add constraint FKCBE5983AAEB984AA 
        foreign key (sodconstraint) 
        references identityiq.spt_sodconstraint;

    create index identityiq.FKCBE5983AAEB984AA on identityiq.spt_sodconstraint_right (sodconstraint);

    alter table identityiq.spt_sync_roles 
        add constraint FK1F091BA128E03F44 
        foreign key (bundle) 
        references identityiq.spt_bundle;

    create index identityiq.FK1F091BA128E03F44 on identityiq.spt_sync_roles (bundle);

    alter table identityiq.spt_sync_roles 
        add constraint FK1F091BA1719E7338 
        foreign key (config) 
        references identityiq.spt_integration_config;

    create index identityiq.FK1F091BA1719E7338 on identityiq.spt_sync_roles (config);

    create index identityiq.spt_syslog_event_level on identityiq.spt_syslog_event (event_level);

    create index identityiq.spt_syslog_message on identityiq.spt_syslog_event (message);

    create index identityiq.spt_syslog_quickKey on identityiq.spt_syslog_event (quick_key);

    create index identityiq.spt_syslog_username on identityiq.spt_syslog_event (username);

    create index identityiq.spt_syslog_classname on identityiq.spt_syslog_event (classname);

    create index identityiq.spt_syslog_created on identityiq.spt_syslog_event (created);

    create index identityiq.spt_syslog_server on identityiq.spt_syslog_event (server);

    alter table identityiq.spt_tag 
        add constraint FK891AF912A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK891AF912A5FB1B1 on identityiq.spt_tag (owner);

    alter table identityiq.spt_tag 
        add constraint FK891AF912486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK891AF912486634B7 on identityiq.spt_tag (assigned_scope);

    create index identityiq.spt_target_last_agg on identityiq.spt_target (last_aggregation);


    create index identityiq.spt_target_unique_name_hash on identityiq.spt_target (unique_name_hash);

    create index identityiq.spt_target_native_obj_id on identityiq.spt_target (native_object_id);

    alter table identityiq.spt_target 
        add constraint FK19E52519A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK19E52519A5FB1B1 on identityiq.spt_target (owner);

    alter table identityiq.spt_target 
        add constraint FK19E525195D4B587B 
        foreign key (parent) 
        references identityiq.spt_target;

    create index identityiq.FK19E525195D4B587B on identityiq.spt_target (parent);

    alter table identityiq.spt_target 
        add constraint FK19E525192F001D5 
        foreign key (target_source) 
        references identityiq.spt_target_source;

    create index identityiq.FK19E525192F001D5 on identityiq.spt_target (target_source);

    alter table identityiq.spt_target 
        add constraint FK19E5251939D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FK19E5251939D71460 on identityiq.spt_target (application);

    alter table identityiq.spt_target 
        add constraint FK19E52519486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK19E52519486634B7 on identityiq.spt_target (assigned_scope);


    create index identityiq.spt_target_assoc_id on identityiq.spt_target_association (object_id);

    create index identityiq.spt_target_assoc_last_agg on identityiq.spt_target_association (last_aggregation);

    alter table identityiq.spt_target_association 
        add constraint FK7AD6825BA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK7AD6825BA5FB1B1 on identityiq.spt_target_association (owner);

    alter table identityiq.spt_target_association 
        add constraint FK7AD6825B486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK7AD6825B486634B7 on identityiq.spt_target_association (assigned_scope);

    alter table identityiq.spt_target_association 
        add constraint FK7AD6825B68039A5A 
        foreign key (target_id) 
        references identityiq.spt_target;

    create index identityiq.FK7AD6825B68039A5A on identityiq.spt_target_association (target_id);

    alter table identityiq.spt_target_source 
        add constraint FK6F50201A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK6F50201A5FB1B1 on identityiq.spt_target_source (owner);

    alter table identityiq.spt_target_source 
        add constraint FK6F502014FE65998 
        foreign key (creation_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK6F502014FE65998 on identityiq.spt_target_source (creation_rule);

    alter table identityiq.spt_target_source 
        add constraint FK6F50201B854BFAE 
        foreign key (transformation_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK6F50201B854BFAE on identityiq.spt_target_source (transformation_rule);

    alter table identityiq.spt_target_source 
        add constraint FK6F50201486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK6F50201486634B7 on identityiq.spt_target_source (assigned_scope);

    alter table identityiq.spt_target_source 
        add constraint FK6F50201BE1EE0D5 
        foreign key (correlation_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK6F50201BE1EE0D5 on identityiq.spt_target_source (correlation_rule);

    alter table identityiq.spt_target_source 
        add constraint FK6F50201D9F8531C 
        foreign key (refresh_rule) 
        references identityiq.spt_rule;

    create index identityiq.FK6F50201D9F8531C on identityiq.spt_target_source (refresh_rule);

    alter table identityiq.spt_target_sources 
        add constraint FKD7AB3E9239D71460 
        foreign key (application) 
        references identityiq.spt_application;

    create index identityiq.FKD7AB3E9239D71460 on identityiq.spt_target_sources (application);

    alter table identityiq.spt_target_sources 
        add constraint FKD7AB3E9270D64BF9 
        foreign key (elt) 
        references identityiq.spt_target_source;

    create index identityiq.FKD7AB3E9270D64BF9 on identityiq.spt_target_sources (elt);

    create index identityiq.spt_task_deprecated on identityiq.spt_task_definition (deprecated);

    alter table identityiq.spt_task_definition 
        add constraint FK526FE5C5A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK526FE5C5A5FB1B1 on identityiq.spt_task_definition (owner);

    alter table identityiq.spt_task_definition 
        add constraint FK526FE5C5ED0E8BA2 
        foreign key (parent) 
        references identityiq.spt_task_definition;

    create index identityiq.FK526FE5C5ED0E8BA2 on identityiq.spt_task_definition (parent);

    alter table identityiq.spt_task_definition 
        add constraint FK526FE5C5486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK526FE5C5486634B7 on identityiq.spt_task_definition (assigned_scope);

    alter table identityiq.spt_task_definition 
        add constraint FK526FE5C57A31ADF5 
        foreign key (signoff_config) 
        references identityiq.spt_work_item_config;

    create index identityiq.FK526FE5C57A31ADF5 on identityiq.spt_task_definition (signoff_config);

    alter table identityiq.spt_task_definition_rights 
        add constraint FKAA0C8191D22635BD 
        foreign key (right_id) 
        references identityiq.spt_right;

    create index identityiq.FKAA0C8191D22635BD on identityiq.spt_task_definition_rights (right_id);

    alter table identityiq.spt_task_definition_rights 
        add constraint FKAA0C81913B7AD545 
        foreign key (task_definition_id) 
        references identityiq.spt_task_definition;

    create index identityiq.FKAA0C81913B7AD545 on identityiq.spt_task_definition_rights (task_definition_id);

    create index identityiq.spt_task_event_phase on identityiq.spt_task_event (phase);

    alter table identityiq.spt_task_event 
        add constraint FKDACBC2E8A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKDACBC2E8A5FB1B1 on identityiq.spt_task_event (owner);

    alter table identityiq.spt_task_event 
        add constraint FKDACBC2E83908AE7A 
        foreign key (rule_id) 
        references identityiq.spt_rule;

    create index identityiq.FKDACBC2E83908AE7A on identityiq.spt_task_event (rule_id);

    alter table identityiq.spt_task_event 
        add constraint FKDACBC2E83EE0F059 
        foreign key (task_result) 
        references identityiq.spt_task_result;

    create index identityiq.FKDACBC2E83EE0F059 on identityiq.spt_task_event (task_result);

    alter table identityiq.spt_task_event 
        add constraint FKDACBC2E8486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKDACBC2E8486634B7 on identityiq.spt_task_event (assigned_scope);

    create index identityiq.spt_taskres_completed on identityiq.spt_task_result (completed);

    create index identityiq.spt_taskresult_schedule on identityiq.spt_task_result (schedule);

    create index identityiq.spt_taskres_verified on identityiq.spt_task_result (verified);

    create index identityiq.spt_taskresult_target on identityiq.spt_task_result (target_id);

    create index identityiq.spt_taskres_expiration on identityiq.spt_task_result (expiration);

    create index identityiq.spt_task_compl_status on identityiq.spt_task_result (completion_status);


    alter table identityiq.spt_task_result 
        add constraint FK93F2818FA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK93F2818FA5FB1B1 on identityiq.spt_task_result (owner);

    alter table identityiq.spt_task_result 
        add constraint FK93F2818FAAD2E472 
        foreign key (report) 
        references identityiq.spt_jasper_result;

    create index identityiq.FK93F2818FAAD2E472 on identityiq.spt_task_result (report);

    alter table identityiq.spt_task_result 
        add constraint FK93F2818F486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK93F2818F486634B7 on identityiq.spt_task_result (assigned_scope);

    alter table identityiq.spt_task_result 
        add constraint FK93F2818FEBECB84B 
        foreign key (definition) 
        references identityiq.spt_task_definition;

    create index identityiq.FK93F2818FEBECB84B on identityiq.spt_task_result (definition);

    alter table identityiq.spt_task_signature_arguments 
        add constraint FK3E81365D68611BB0 
        foreign key (signature) 
        references identityiq.spt_task_definition;

    create index identityiq.FK3E81365D68611BB0 on identityiq.spt_task_signature_arguments (signature);

    alter table identityiq.spt_task_signature_returns 
        add constraint FK797BC0A68611BB0 
        foreign key (signature) 
        references identityiq.spt_task_definition;

    create index identityiq.FK797BC0A68611BB0 on identityiq.spt_task_signature_returns (signature);

    alter table identityiq.spt_time_period 
        add constraint FK49F210EBA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK49F210EBA5FB1B1 on identityiq.spt_time_period (owner);

    alter table identityiq.spt_time_period 
        add constraint FK49F210EB486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK49F210EB486634B7 on identityiq.spt_time_period (assigned_scope);

    alter table identityiq.spt_uiconfig 
        add constraint FK2B1F445EA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK2B1F445EA5FB1B1 on identityiq.spt_uiconfig (owner);

    alter table identityiq.spt_uiconfig 
        add constraint FK2B1F445E486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK2B1F445E486634B7 on identityiq.spt_uiconfig (assigned_scope);

    alter table identityiq.spt_uipreferences 
        add constraint FK15336F5CA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK15336F5CA5FB1B1 on identityiq.spt_uipreferences (owner);

    alter table identityiq.spt_widget 
        add constraint FK1F6E0DCCA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK1F6E0DCCA5FB1B1 on identityiq.spt_widget (owner);

    alter table identityiq.spt_widget 
        add constraint FK1F6E0DCC486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK1F6E0DCC486634B7 on identityiq.spt_widget (assigned_scope);

    create index identityiq.spt_work_item_ident_req_id on identityiq.spt_work_item (identity_request_id);

    create index identityiq.spt_work_item_name on identityiq.spt_work_item (name);

    create index identityiq.spt_work_item_type on identityiq.spt_work_item (type);

    create index identityiq.spt_work_item_target on identityiq.spt_work_item (target_id);

    alter table identityiq.spt_work_item 
        add constraint FKE2716EF9A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKE2716EF9A5FB1B1 on identityiq.spt_work_item (owner);

    alter table identityiq.spt_work_item 
        add constraint FKE2716EF92D68567A 
        foreign key (requester) 
        references identityiq.spt_identity;

    create index identityiq.FKE2716EF92D68567A on identityiq.spt_work_item (requester);

    alter table identityiq.spt_work_item 
        add constraint FKE2716EF93257597F 
        foreign key (workflow_case) 
        references identityiq.spt_workflow_case;

    create index identityiq.FKE2716EF93257597F on identityiq.spt_work_item (workflow_case);

    alter table identityiq.spt_work_item 
        add constraint FKE2716EF9486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKE2716EF9486634B7 on identityiq.spt_work_item (assigned_scope);

    alter table identityiq.spt_work_item 
        add constraint FKE2716EF95D5F3DE6 
        foreign key (certification_ref_id) 
        references identityiq.spt_certification;

    create index identityiq.FKE2716EF95D5F3DE6 on identityiq.spt_work_item (certification_ref_id);

    alter table identityiq.spt_work_item 
        add constraint FKE2716EF9EDFFCCCD 
        foreign key (assignee) 
        references identityiq.spt_identity;

    create index identityiq.FKE2716EF9EDFFCCCD on identityiq.spt_work_item (assignee);

    create index identityiq.spt_item_archive_name on identityiq.spt_work_item_archive (name);



    create index identityiq.spt_item_archive_type on identityiq.spt_work_item_archive (type);

    create index identityiq.spt_item_archive_severity on identityiq.spt_work_item_archive (severity);

    create index identityiq.spt_item_archive_completer on identityiq.spt_work_item_archive (completer);

    create index identityiq.spt_item_archive_workItemId on identityiq.spt_work_item_archive (work_item_id);


    create index identityiq.spt_item_archive_ident_req on identityiq.spt_work_item_archive (identity_request_id);

    create index identityiq.spt_item_archive_target on identityiq.spt_work_item_archive (target_id);

    alter table identityiq.spt_work_item_archive 
        add constraint FKDFABED7CA5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKDFABED7CA5FB1B1 on identityiq.spt_work_item_archive (owner);

    alter table identityiq.spt_work_item_archive 
        add constraint FKDFABED7C486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKDFABED7C486634B7 on identityiq.spt_work_item_archive (assigned_scope);

    alter table identityiq.spt_work_item_comments 
        add constraint FK5836687A4F2D4385 
        foreign key (work_item) 
        references identityiq.spt_work_item;

    create index identityiq.FK5836687A4F2D4385 on identityiq.spt_work_item_comments (work_item);

    alter table identityiq.spt_work_item_config 
        add constraint FKC86AF748A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKC86AF748A5FB1B1 on identityiq.spt_work_item_config (owner);

    alter table identityiq.spt_work_item_config 
        add constraint FKC86AF7482E3B7910 
        foreign key (parent) 
        references identityiq.spt_work_item_config;

    create index identityiq.FKC86AF7482E3B7910 on identityiq.spt_work_item_config (parent);

    alter table identityiq.spt_work_item_config 
        add constraint FKC86AF7487EAF553E 
        foreign key (notification_email) 
        references identityiq.spt_email_template;

    create index identityiq.FKC86AF7487EAF553E on identityiq.spt_work_item_config (notification_email);

    alter table identityiq.spt_work_item_config 
        add constraint FKC86AF748F36F8B85 
        foreign key (reminder_email) 
        references identityiq.spt_email_template;

    create index identityiq.FKC86AF748F36F8B85 on identityiq.spt_work_item_config (reminder_email);

    alter table identityiq.spt_work_item_config 
        add constraint FKC86AF748C98DBFA2 
        foreign key (escalation_rule) 
        references identityiq.spt_rule;

    create index identityiq.FKC86AF748C98DBFA2 on identityiq.spt_work_item_config (escalation_rule);

    alter table identityiq.spt_work_item_config 
        add constraint FKC86AF748486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKC86AF748486634B7 on identityiq.spt_work_item_config (assigned_scope);

    alter table identityiq.spt_work_item_config 
        add constraint FKC86AF74884EC4F68 
        foreign key (escalation_email) 
        references identityiq.spt_email_template;

    create index identityiq.FKC86AF74884EC4F68 on identityiq.spt_work_item_config (escalation_email);

    alter table identityiq.spt_work_item_config 
        add constraint FKC86AF748FDF11A44 
        foreign key (owner_rule) 
        references identityiq.spt_rule;

    create index identityiq.FKC86AF748FDF11A44 on identityiq.spt_work_item_config (owner_rule);

    alter table identityiq.spt_work_item_owners 
        add constraint FKDD55D82640D47AB 
        foreign key (elt) 
        references identityiq.spt_identity;

    create index identityiq.FKDD55D82640D47AB on identityiq.spt_work_item_owners (elt);

    alter table identityiq.spt_work_item_owners 
        add constraint FKDD55D82618CFF3A8 
        foreign key (config) 
        references identityiq.spt_work_item_config;

    create index identityiq.FKDD55D82618CFF3A8 on identityiq.spt_work_item_owners (config);

    alter table identityiq.spt_workflow 
        add constraint FK51A3C947A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK51A3C947A5FB1B1 on identityiq.spt_workflow (owner);

    alter table identityiq.spt_workflow 
        add constraint FK51A3C947486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK51A3C947486634B7 on identityiq.spt_workflow (assigned_scope);

    create index identityiq.spt_workflowcase_target on identityiq.spt_workflow_case (target_id);

    alter table identityiq.spt_workflow_case 
        add constraint FKB8E31F28A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FKB8E31F28A5FB1B1 on identityiq.spt_workflow_case (owner);

    alter table identityiq.spt_workflow_case 
        add constraint FKB8E31F28486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FKB8E31F28486634B7 on identityiq.spt_workflow_case (assigned_scope);

    alter table identityiq.spt_workflow_registry 
        add constraint FK1C2E1835A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK1C2E1835A5FB1B1 on identityiq.spt_workflow_registry (owner);

    alter table identityiq.spt_workflow_registry 
        add constraint FK1C2E1835486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK1C2E1835486634B7 on identityiq.spt_workflow_registry (assigned_scope);

    alter table identityiq.spt_workflow_rule_libraries 
        add constraint FKAE96C70E6A8DCF3D 
        foreign key (rule_id) 
        references identityiq.spt_workflow;

    create index identityiq.FKAE96C70E6A8DCF3D on identityiq.spt_workflow_rule_libraries (rule_id);

    alter table identityiq.spt_workflow_rule_libraries 
        add constraint FKAE96C70EDB28D887 
        foreign key (dependency) 
        references identityiq.spt_rule;

    create index identityiq.FKAE96C70EDB28D887 on identityiq.spt_workflow_rule_libraries (dependency);

    alter table identityiq.spt_workflow_target 
        add constraint FK2999F789A5FB1B1 
        foreign key (owner) 
        references identityiq.spt_identity;

    create index identityiq.FK2999F789A5FB1B1 on identityiq.spt_workflow_target (owner);

    alter table identityiq.spt_workflow_target 
        add constraint FK2999F789486634B7 
        foreign key (assigned_scope) 
        references identityiq.spt_scope;

    create index identityiq.FK2999F789486634B7 on identityiq.spt_workflow_target (assigned_scope);

    alter table identityiq.spt_workflow_target 
        add constraint FK2999F7896B5435D9 
        foreign key (workflow_case_id) 
        references identityiq.spt_workflow_case;

    create index identityiq.FK2999F7896B5435D9 on identityiq.spt_workflow_target (workflow_case_id);

    create index identityiq.spt_managed_modified on identityiq.spt_managed_attribute (modified);

    create index identityiq.spt_managed_created on identityiq.spt_managed_attribute (created);

    create index identityiq.spt_managed_comp on identityiq.spt_managed_attribute (application, type, upper(attribute), upper(value));

    create index identityiq.spt_application_created on identityiq.spt_application (created);

    create index identityiq.spt_application_modified on identityiq.spt_application (modified);

    create index identityiq.spt_request_completed on identityiq.spt_request (completed);

    create index identityiq.spt_request_host on identityiq.spt_request (host);

    create index identityiq.spt_request_launched on identityiq.spt_request (launched);

    create index identityiq.spt_request_id_composite on identityiq.spt_request (completed, next_launch, launched);

    create index identityiq.spt_workitem_owner_type on identityiq.spt_work_item (owner, type);

    create index identityiq.spt_role_change_event_created on identityiq.spt_role_change_event (created);

    create index identityiq.spt_audit_event_created on identityiq.spt_audit_event (created);

    create index identityiq.spt_audit_event_targ_act_comp on identityiq.spt_audit_event (upper(target), upper(action));

    create index identityiq.spt_ident_entit_comp_name on identityiq.spt_identity_entitlement (identity_id, upper(name));

    create index identityiq.spt_identity_entitlement_comp on identityiq.spt_identity_entitlement (identity_id, application, upper(native_identity), upper(instance));

    create index identityiq.spt_idrequest_created on identityiq.spt_identity_request (created);

    create index identityiq.spt_arch_cert_item_apps_name on identityiq.spt_arch_cert_item_apps (application_name);

    create index identityiq.spt_appidcomposite on identityiq.spt_link (application, upper(native_identity));

    create index identityiq.spt_uuidcomposite on identityiq.spt_link (application, upper(uuid));

    create index identityiq.spt_task_result_host on identityiq.spt_task_result (upper(host));

    create index identityiq.spt_task_result_launcher on identityiq.spt_task_result (launcher);

    create index identityiq.spt_task_result_created on identityiq.spt_task_result (created);

    create index identityiq.spt_cert_item_apps_name on identityiq.spt_cert_item_applications (application_name);

    create index identityiq.spt_cert_item_att_name_ci on identityiq.spt_certification_item (upper(exception_attribute_name));

    create index identityiq.spt_certification_item_tdn_ci on identityiq.spt_certification_item (upper(target_display_name));

    create index identityiq.spt_appidcompositedelobj on identityiq.spt_deleted_object (application, upper(native_identity));

    create index identityiq.spt_uuidcompositedelobj on identityiq.spt_deleted_object (application, upper(uuid));

    create index identityiq.spt_cert_entity_tdn_ci on identityiq.spt_certification_entity (upper(target_display_name));

    create index identityiq.spt_integration_conf_modified on identityiq.spt_integration_config (modified);

    create index identityiq.spt_integration_conf_created on identityiq.spt_integration_config (created);

    create index identityiq.spt_bundle_modified on identityiq.spt_bundle (modified);

    create index identityiq.spt_bundle_created on identityiq.spt_bundle (created);

    create index identityiq.SPT_IDXE5D0EE5E14FE3C13 on identityiq.spt_certification_archive (created);

    create index identityiq.spt_identity_snapshot_created on identityiq.spt_identity_snapshot (created);

    create index identityiq.spt_certification_certifiers on identityiq.spt_certifiers (certifier);

    create index identityiq.spt_identity_modified on identityiq.spt_identity (modified);

    create index identityiq.spt_identity_created on identityiq.spt_identity (created);

    create index identityiq.spt_externaloidnamecomposite on identityiq.spt_identity_external_attr (object_id, upper(attribute_name));

    create index identityiq.SPT_IDX5B44307DE376B265 on identityiq.spt_link_external_attr (object_id, upper(attribute_name));

    create index identityiq.spt_externalobjectid on identityiq.spt_identity_external_attr (object_id);

    create index identityiq.SPT_IDX1CE9A5A5A51C278D on identityiq.spt_link_external_attr (object_id);

    create index identityiq.spt_externalnamevalcomposite on identityiq.spt_identity_external_attr (upper(attribute_name), upper(value));

    create index identityiq.SPT_IDX6810487CF042CA64 on identityiq.spt_link_external_attr (upper(attribute_name), upper(value));

    create index identityiq.SPT_IDXC8BAE6DCF83839CC on identityiq.spt_jasper_template (assigned_scope_path);

    create index identityiq.spt_custom_assignedscopepath on identityiq.spt_custom (assigned_scope_path);

    create index identityiq.SPT_IDX52403791F605046 on identityiq.spt_generic_constraint (assigned_scope_path);

    create index identityiq.SPT_IDX352BB37529C8F73E on identityiq.spt_identity_archive (assigned_scope_path);

    create index identityiq.SPT_IDXD9728B9EEB248FD0 on identityiq.spt_certification_group (assigned_scope_path);

    create index identityiq.SPT_IDXECB4C9F64AB87280 on identityiq.spt_group_index (assigned_scope_path);

    create index identityiq.SPT_IDX10AAF70777DD9EE2 on identityiq.spt_identity_dashboard (assigned_scope_path);

    create index identityiq.spt_category_assignedscopepath on identityiq.spt_category (assigned_scope_path);

    create index identityiq.SPT_IDXCA5C5C012C739356 on identityiq.spt_certification_delegation (assigned_scope_path);

    create index identityiq.SPT_IDX892D67C7AB213062 on identityiq.spt_group_definition (assigned_scope_path);

    create index identityiq.spt_right_assignedscopepath on identityiq.spt_right (assigned_scope_path);

    create index identityiq.SPT_IDX6B29BC60611AFDD4 on identityiq.spt_managed_attribute (assigned_scope_path, ' ');

    create index identityiq.SPT_IDXA6D194B42059DB7C on identityiq.spt_application (assigned_scope_path);

    create index identityiq.SPT_IDXE2B6FD83726D2C4 on identityiq.spt_process_log (assigned_scope_path);

    create index identityiq.spt_request_assignedscopepath on identityiq.spt_request (assigned_scope_path);

    create index identityiq.SPT_IDX6BA77F433361865A on identityiq.spt_score_config (assigned_scope_path);

    create index identityiq.SPT_IDX1647668E11063E4 on identityiq.spt_work_item_archive (assigned_scope_path);

    create index identityiq.SPT_IDX2AE3D4A6385CD3E0 on identityiq.spt_message_template (assigned_scope_path);

    create index identityiq.SPT_IDX749C6E992BBAE86 on identityiq.spt_dictionary_term (assigned_scope_path);

    create index identityiq.SPT_IDX836C2831FD8ED7B6 on identityiq.spt_file_bucket (assigned_scope_path);

    create index identityiq.SPT_IDX45D72A5E6CEE19E on identityiq.spt_work_item (assigned_scope_path);

    create index identityiq.SPT_IDX9542C8399A0989C6 on identityiq.spt_bundle_archive (assigned_scope_path);

    create index identityiq.SPT_IDX5BFDE38499178D1C on identityiq.spt_rule_registry (assigned_scope_path);

    create index identityiq.SPT_IDXBB0D4BCC29515FAC on identityiq.spt_policy_violation (assigned_scope_path);

    create index identityiq.SPT_IDXC1811197B7DE5802 on identityiq.spt_role_mining_result (assigned_scope_path);

    create index identityiq.SPT_IDX5165831AA4CEA5C8 on identityiq.spt_audit_event (assigned_scope_path);

    create index identityiq.spt_tag_assignedscopepath on identityiq.spt_tag (assigned_scope_path);

    create index identityiq.spt_uiconfig_assignedscopepath on identityiq.spt_uiconfig (assigned_scope_path);

    create index identityiq.SPT_IDX8F4ABD86AFAD1DA0 on identityiq.spt_scorecard (assigned_scope_path);

    create index identityiq.SPT_IDX8DFD31878D3B3E2 on identityiq.spt_target_association (assigned_scope_path);

    create index identityiq.SPT_IDX686990949D3B0B3C on identityiq.spt_activity_data_source (assigned_scope_path);

    create index identityiq.SPT_IDX59D4F6CD8690EEC on identityiq.spt_certification_definition (assigned_scope_path);

    create index identityiq.SPT_IDX377FCC029A032198 on identityiq.spt_identity_request (assigned_scope_path);

    create index identityiq.SPT_IDXA6919D21F9F21D96 on identityiq.spt_remediation_item (assigned_scope_path);

    create index identityiq.SPT_IDX608761A1BFB4BC8 on identityiq.spt_audit_config (assigned_scope_path);

    create index identityiq.spt_target_assignedscopepath on identityiq.spt_target (assigned_scope_path);

    create index identityiq.SPT_IDX99FA48D474C60BBC on identityiq.spt_task_event (assigned_scope_path);

    create index identityiq.SPT_IDXB52E1053EF6BCC7A on identityiq.spt_correlation_config (assigned_scope_path);

    create index identityiq.SPT_IDX7590C4E191BEDD16 on identityiq.spt_workflow_registry (assigned_scope_path);

    create index identityiq.SPT_IDX99763E0AD76DF7A8 on identityiq.spt_alert_definition (assigned_scope_path);

    create index identityiq.SPT_IDXE4B09B655AF1E31E on identityiq.spt_archived_cert_item (assigned_scope_path);

    create index identityiq.SPT_IDX321B16EB1422CFAA on identityiq.spt_identity_trigger (assigned_scope_path);

    create index identityiq.SPT_IDX660B15141EEE343C on identityiq.spt_workflow_case (assigned_scope_path);

    create index identityiq.spt_rule_assignedscopepath on identityiq.spt_rule (assigned_scope_path);

    create index identityiq.SPT_IDXECBE5C8C4B5A312C on identityiq.spt_capability (assigned_scope_path);

    create index identityiq.SPT_IDXD6F31180C85EB014 on identityiq.spt_quick_link (assigned_scope_path);

    create index identityiq.SPT_IDX4875A7F12BD64736 on identityiq.spt_authentication_question (assigned_scope_path);

    create index identityiq.spt_link_assignedscopepath on identityiq.spt_link (assigned_scope_path);

    create index identityiq.SPT_IDX8CEA0D6E33EF6770 on identityiq.spt_batch_request (assigned_scope_path);

    create index identityiq.SPT_IDX34534BBBC845CD4A on identityiq.spt_task_result (assigned_scope_path);

    create index identityiq.SPT_IDXDCCC1AEC8ACA85EC on identityiq.spt_certification_item (assigned_scope_path);

    create index identityiq.SPT_IDXBED7A8DAA6E4E148 on identityiq.spt_configuration (assigned_scope_path);

    create index identityiq.SPT_IDX5DA4B31DDBDDDB6 on identityiq.spt_activity_constraint (assigned_scope_path);

    create index identityiq.SPT_IDX11035135399822BE on identityiq.spt_mining_config (assigned_scope_path);

    create index identityiq.spt_scope_assignedscopepath on identityiq.spt_scope (assigned_scope_path);

    create index identityiq.SPT_IDX719553AD788A55AE on identityiq.spt_target_source (assigned_scope_path);

    create index identityiq.SPT_IDX1DB04E7170203436 on identityiq.spt_task_definition (assigned_scope_path);

    create index identityiq.SPT_IDXCE071F89DBC06C66 on identityiq.spt_sodconstraint (assigned_scope_path);

    create index identityiq.SPT_IDXC71C52111BEFE376 on identityiq.spt_account_group (assigned_scope_path);

    create index identityiq.SPT_IDXDE774369778BEC26 on identityiq.spt_dashboard_layout (assigned_scope_path);

    create index identityiq.SPT_IDX593FB9116D127176 on identityiq.spt_entitlement_group (assigned_scope_path);

    create index identityiq.SPT_IDX7F55103C9C96248C on identityiq.spt_role_metadata (assigned_scope_path);

    create index identityiq.SPT_IDXCEBEA62E59148F0 on identityiq.spt_group_factory (assigned_scope_path);

    create index identityiq.SPT_IDX7EDDBC591F6A3A06 on identityiq.spt_deleted_object (assigned_scope_path);

    create index identityiq.SPT_IDX1A2CF87C3B1B850C on identityiq.spt_certification_entity (assigned_scope_path);

    create index identityiq.SPT_IDXFB512F02CB48A798 on identityiq.spt_certification_challenge (assigned_scope_path);

    create index identityiq.SPT_IDXABF0D041BEBD0BD6 on identityiq.spt_integration_config (assigned_scope_path);

    create index identityiq.SPT_IDXAEACA8FDA84AB44E on identityiq.spt_role_index (assigned_scope_path);

    create index identityiq.SPT_IDXF70D54D58BC80EE on identityiq.spt_role_scorecard (assigned_scope_path);

    create index identityiq.spt_widget_assignedscopepath on identityiq.spt_widget (assigned_scope_path);

    create index identityiq.SPT_IDXCB6BC61E1128A4D0 on identityiq.spt_remote_login_token (assigned_scope_path);

    create index identityiq.spt_form_assignedscopepath on identityiq.spt_form (assigned_scope_path);

    create index identityiq.SPT_IDXA367F317D4A97B02 on identityiq.spt_application_scorecard (assigned_scope_path);

    create index identityiq.SPT_IDX2D52EC448BE739C on identityiq.spt_dashboard_reference (assigned_scope_path);

    create index identityiq.SPT_IDX54AF7352EE4EEBE on identityiq.spt_workflow_target (assigned_scope_path);

    create index identityiq.SPT_IDXA5EE253FB5399952 on identityiq.spt_jasper_result (assigned_scope_path);

    create index identityiq.SPT_IDXC439D3638206900 on identityiq.spt_sign_off_history (assigned_scope_path);

    create index identityiq.SPT_IDX6200CF1CF3199A4C on identityiq.spt_batch_request_item (assigned_scope_path);

    create index identityiq.SPT_IDXDD339B534953A27A on identityiq.spt_mitigation_expiration (assigned_scope_path);

    create index identityiq.SPT_IDX9D89C40FB709EAF2 on identityiq.spt_certification_action (assigned_scope_path);

    create index identityiq.SPT_IDXBAE32AF9A1817F46 on identityiq.spt_right_config (assigned_scope_path);

    create index identityiq.spt_workflow_assignedscopepath on identityiq.spt_workflow (assigned_scope_path);

    create index identityiq.SPT_IDXF89E6D4D93CDB0EE on identityiq.spt_monitoring_statistic (assigned_scope_path);

    create index identityiq.spt_profile_assignedscopepath on identityiq.spt_profile (assigned_scope_path);

    create index identityiq.spt_bundle_assignedscopepath on identityiq.spt_bundle (assigned_scope_path);

    create index identityiq.SPT_IDX823D9A61B16AE816 on identityiq.spt_certification_archive (assigned_scope_path);

    create index identityiq.SPT_IDXB1547649C7A749E6 on identityiq.spt_identity_snapshot (assigned_scope_path);

    create index identityiq.SPT_IDXBAF33EB59EE05DBE on identityiq.spt_archived_cert_entity (assigned_scope_path);

    create index identityiq.SPT_IDXFF9A9E0694DBFEA0 on identityiq.spt_partition_result (assigned_scope_path);

    create index identityiq.SPT_IDX133BD716174D236 on identityiq.spt_provisioning_request (assigned_scope_path);

    create index identityiq.SPT_IDX50B36EB8F7F2C884 on identityiq.spt_dynamic_scope (assigned_scope_path);

    create index identityiq.SPT_IDX95FDCE46C5917DC on identityiq.spt_application_schema (assigned_scope_path);

    create index identityiq.SPT_IDX85C023B24A735CF8 on identityiq.spt_dashboard_content (assigned_scope_path);

    create index identityiq.SPT_IDX52AF250AB5405B4 on identityiq.spt_jasper_page_bucket (assigned_scope_path);

    create index identityiq.SPT_IDX1E683C17685A4D02 on identityiq.spt_time_period (assigned_scope_path);

    create index identityiq.SPT_IDX90929F9EDF01B7D0 on identityiq.spt_certification (assigned_scope_path);

    create index identityiq.SPT_IDXEA8F35F17CF0E336 on identityiq.spt_email_template (assigned_scope_path);

    create index identityiq.spt_identity_assignedscopepath on identityiq.spt_identity (assigned_scope_path, ' ');

    create index identityiq.SPT_IDXA511A43C73CC4C8C on identityiq.spt_persisted_file (assigned_scope_path);

    create index identityiq.SPT_IDX9393E3B78D0A4442 on identityiq.spt_request_definition (assigned_scope_path);

    create index identityiq.SPT_IDXB999253482041C7C on identityiq.spt_work_item_config (assigned_scope_path);

    create index identityiq.SPT_IDXD9D9048A81D024A8 on identityiq.spt_dictionary (assigned_scope_path);

    create index identityiq.SPT_IDX6F2601261AB4CE0 on identityiq.spt_object_config (assigned_scope_path);

    create index identityiq.spt_policy_assignedscopepath on identityiq.spt_policy (assigned_scope_path);

    create index identityiq.spt_actgroup_name on identityiq.spt_account_group (name);

    create index identityiq.spt_actgroup_name_csi on identityiq.spt_account_group (upper(name));

    create index identityiq.spt_actgroup_key4_ci on identityiq.spt_account_group (upper(key4));

    create index identityiq.spt_actgroup_key3_ci on identityiq.spt_account_group (upper(key3));

    create index identityiq.spt_actgroup_native_ci on identityiq.spt_account_group (upper(native_identity));

    create index identityiq.spt_actgroup_key1_ci on identityiq.spt_account_group (upper(key1));

    create index identityiq.spt_actgroup_key2_ci on identityiq.spt_account_group (upper(key2));

    create index identityiq.spt_alert_extended1_ci on identityiq.spt_alert (upper(extended1));

    create index identityiq.spt_app_extended1_ci on identityiq.spt_application (upper(extended1));

    create index identityiq.spt_arch_entity_identity on identityiq.spt_archived_cert_entity (identity_name);

    create index identityiq.spt_arch_entity_identity_csi on identityiq.spt_archived_cert_entity (upper(identity_name));

    create index identityiq.spt_arch_entity_tgt_name on identityiq.spt_archived_cert_entity (target_name);

    create index identityiq.spt_arch_entity_tgt_name_csi on identityiq.spt_archived_cert_entity (upper(target_name));

    create index identityiq.spt_arch_entity_acct_grp on identityiq.spt_archived_cert_entity (account_group);

    create index identityiq.spt_arch_entity_acct_grp_csi on identityiq.spt_archived_cert_entity (upper(account_group));

    create index identityiq.spt_audit_action_ci on identityiq.spt_audit_event (upper(action));

    create index identityiq.spt_audit_instance_ci on identityiq.spt_audit_event (upper(instance));

    create index identityiq.spt_audit_attr_ci on identityiq.spt_audit_event (upper(attribute_name));

    create index identityiq.spt_audit_source_ci on identityiq.spt_audit_event (upper(source));

    create index identityiq.spt_audit_application_ci on identityiq.spt_audit_event (upper(application));

    create index identityiq.spt_audit_trackingid_ci on identityiq.spt_audit_event (upper(tracking_id));

    create index identityiq.spt_audit_interface_ci on identityiq.spt_audit_event (upper(interface));

    create index identityiq.spt_audit_attrVal_ci on identityiq.spt_audit_event (upper(attribute_value));

    create index identityiq.spt_audit_accountname_ci on identityiq.spt_audit_event (upper(account_name));

    create index identityiq.spt_audit_target_ci on identityiq.spt_audit_event (upper(target));

    create index identityiq.spt_bundle_dispname_ci on identityiq.spt_bundle (upper(displayable_name));

    create index identityiq.spt_bundle_extended1_ci on identityiq.spt_bundle (upper(extended1));

    create index identityiq.spt_cert_entity_firstname_ci on identityiq.spt_certification_entity (upper(firstname));

    create index identityiq.spt_cert_entity_lastname_ci on identityiq.spt_certification_entity (upper(lastname));

    create index identityiq.spt_certitem_extended1_ci on identityiq.spt_certification_item (upper(extended1));

    create index identityiq.spt_custom_name on identityiq.spt_custom (name);

    create index identityiq.spt_custom_name_csi on identityiq.spt_custom (upper(name));

    create index identityiq.spt_delObj_name_ci on identityiq.spt_deleted_object (upper(name));

    create index identityiq.spt_delObj_nativeIdentity_ci on identityiq.spt_deleted_object (upper(native_identity));

    create index identityiq.spt_delObj_objectType_ci on identityiq.spt_deleted_object (upper(object_type));

    create index identityiq.spt_ent_snap_application_ci on identityiq.spt_entitlement_snapshot (upper(application));

    create index identityiq.spt_ent_snap_nativeIdentity_ci on identityiq.spt_entitlement_snapshot (upper(native_identity));

    create index identityiq.spt_ent_snap_displayName_ci on identityiq.spt_entitlement_snapshot (upper(display_name));

    create index identityiq.spt_identity_type_ci on identityiq.spt_identity (upper(type));

    create index identityiq.spt_identity_displayName_ci on identityiq.spt_identity (upper(display_name));

    create index identityiq.spt_identity_lastname_ci on identityiq.spt_identity (upper(lastname));

    create index identityiq.spt_identity_sw_version_ci on identityiq.spt_identity (upper(software_version));

    create index identityiq.spt_identity_extended1_ci on identityiq.spt_identity (upper(extended1));

    create index identityiq.spt_identity_extended2_ci on identityiq.spt_identity (upper(extended2));

    create index identityiq.spt_identity_email_ci on identityiq.spt_identity (upper(email));

    create index identityiq.spt_identity_firstname_ci on identityiq.spt_identity (upper(firstname));

    create index identityiq.spt_identity_extended4_ci on identityiq.spt_identity (upper(extended4));

    create index identityiq.spt_identity_extended5_ci on identityiq.spt_identity (upper(extended5));

    create index identityiq.spt_identity_extended3_ci on identityiq.spt_identity (upper(extended3));

    create index identityiq.spt_identity_ent_name_ci on identityiq.spt_identity_entitlement (upper(name));

    create index identityiq.spt_identity_ent_nativeid_ci on identityiq.spt_identity_entitlement (upper(native_identity));

    create index identityiq.spt_identity_ent_source_ci on identityiq.spt_identity_entitlement (upper(source));

    create index identityiq.spt_identity_ent_value_ci on identityiq.spt_identity_entitlement (upper(value));

    create index identityiq.spt_identity_ent_instance_ci on identityiq.spt_identity_entitlement (upper(instance));

    create index identityiq.spt_id_hist_item_value_ci on identityiq.spt_identity_history_item (upper(value));

    create index identityiq.spt_id_hist_item_account_ci on identityiq.spt_identity_history_item (upper(account));

    create index identityiq.spt_id_hist_item_attribute_ci on identityiq.spt_identity_history_item (upper(attribute));

    create index identityiq.spt_id_hist_item_ntv_id_ci on identityiq.spt_identity_history_item (upper(native_identity));

    create index identityiq.spt_idrequest_ext_ticket_ci on identityiq.spt_identity_request (upper(external_ticket_id));

    create index identityiq.spt_idrequest_requestor_ci on identityiq.spt_identity_request (upper(requester_display_name));

    create index identityiq.spt_idrequest_target_ci on identityiq.spt_identity_request (upper(target_display_name));

    create index identityiq.spt_reqitem_nativeid_ci on identityiq.spt_identity_request_item (upper(native_identity));

    create index identityiq.spt_reqitem_instance_ci on identityiq.spt_identity_request_item (upper(instance));

    create index identityiq.spt_reqitem_name_ci on identityiq.spt_identity_request_item (upper(name));

    create index identityiq.spt_reqitem_value_ci on identityiq.spt_identity_request_item (upper(value));

    create index identityiq.spt_link_key1_ci on identityiq.spt_link (upper(key1));

    create index identityiq.spt_link_dispname_ci on identityiq.spt_link (upper(display_name));

    create index identityiq.spt_link_extended1_ci on identityiq.spt_link (upper(extended1));

    create index identityiq.spt_link_nativeIdentity_ci on identityiq.spt_link (upper(native_identity));

    create index identityiq.spt_managed_attr_uuid_ci on identityiq.spt_managed_attribute (upper(uuid));

    create index identityiq.spt_ma_key3_ci on identityiq.spt_managed_attribute (upper(key3));

    create index identityiq.spt_ma_key2_ci on identityiq.spt_managed_attribute (upper(key2));

    create index identityiq.spt_ma_key4_ci on identityiq.spt_managed_attribute (upper(key4));

    create index identityiq.spt_managed_attr_extended2_ci on identityiq.spt_managed_attribute (upper(extended2));

    create index identityiq.spt_managed_attr_extended1_ci on identityiq.spt_managed_attribute (upper(extended1));

    create index identityiq.spt_managed_attr_value_ci on identityiq.spt_managed_attribute (upper(value));

    create index identityiq.spt_ma_key1_ci on identityiq.spt_managed_attribute (upper(key1));

    create index identityiq.spt_managed_attr_extended3_ci on identityiq.spt_managed_attribute (upper(extended3));

    create index identityiq.spt_managed_attr_dispname_ci on identityiq.spt_managed_attribute (upper(displayable_name));

    create index identityiq.spt_managed_attr_attr_ci on identityiq.spt_managed_attribute (upper(attribute));

    create index identityiq.spt_mitigation_attr_val_ci on identityiq.spt_mitigation_expiration (upper(attribute_value));

    create index identityiq.spt_mitigation_attr_name_ci on identityiq.spt_mitigation_expiration (upper(attribute_name));

    create index identityiq.spt_mitigation_account_ci on identityiq.spt_mitigation_expiration (upper(native_identity));

    create index identityiq.spt_plugin_name_ci on identityiq.spt_plugin (upper(name));

    create index identityiq.spt_plugin_dn_ci on identityiq.spt_plugin (upper(display_name));

    create index identityiq.spt_prvtrans_iddn_ci on identityiq.spt_provisioning_transaction (upper(identity_display_name));

    create index identityiq.spt_prvtrans_integ_ci on identityiq.spt_provisioning_transaction (upper(integration));

    create index identityiq.spt_prvtrans_app_ci on identityiq.spt_provisioning_transaction (upper(application_name));

    create index identityiq.spt_prvtrans_adn_ci on identityiq.spt_provisioning_transaction (upper(account_display_name));

    create index identityiq.spt_prvtrans_idn_ci on identityiq.spt_provisioning_transaction (upper(identity_name));

    create index identityiq.spt_prvtrans_nid_ci on identityiq.spt_provisioning_transaction (upper(native_identity));

    create index identityiq.scope_disp_name_ci on identityiq.spt_scope (upper(display_name));

    create index identityiq.scope_name_ci on identityiq.spt_scope (upper(name));

    create index identityiq.spt_server_extended1_ci on identityiq.spt_server (upper(extended1));

    create index identityiq.spt_target_extended1_ci on identityiq.spt_target (upper(extended1));

    create index identityiq.spt_target_assoc_targ_name_ci on identityiq.spt_target_association (upper(target_name));

    create index identityiq.spt_taskresult_targetname_ci on identityiq.spt_task_result (upper(target_name));

    create index identityiq.spt_item_archive_assignee_ci on identityiq.spt_work_item_archive (upper(assignee));

    create index identityiq.spt_item_archive_requester_ci on identityiq.spt_work_item_archive (upper(requester));

    create index identityiq.spt_item_archive_owner_ci on identityiq.spt_work_item_archive (upper(owner_name));

    create index identityiq.spt_alert_definition_name on identityiq.spt_alert_definition (upper(name));

    create index identityiq.spt_application_name on identityiq.spt_application (upper(name));

    create index identityiq.spt_audit_config_name on identityiq.spt_audit_config (upper(name));

    create index identityiq.spt_bundle_name on identityiq.spt_bundle (upper(name));

    create index identityiq.spt_capability_name on identityiq.spt_capability (upper(name));

    create index identityiq.spt_category_name on identityiq.spt_category (upper(name));

    create index identityiq.spt_certification_definition_n on identityiq.spt_certification_definition (upper(name));

    create index identityiq.spt_configuration_name on identityiq.spt_configuration (upper(name));

    create index identityiq.spt_correlation_config_name on identityiq.spt_correlation_config (upper(name));

    create index identityiq.spt_dashboard_content_name on identityiq.spt_dashboard_content (upper(name));

    create index identityiq.spt_dashboard_layout_name on identityiq.spt_dashboard_layout (upper(name));

    create index identityiq.spt_dictionary_term_value on identityiq.spt_dictionary_term (upper(value));

    create index identityiq.spt_dynamic_scope_name on identityiq.spt_dynamic_scope (upper(name));

    create index identityiq.spt_email_template_name on identityiq.spt_email_template (upper(name));

    create index identityiq.spt_form_name on identityiq.spt_form (upper(name));

    create index identityiq.spt_full_text_index_name on identityiq.spt_full_text_index (upper(name));

    create index identityiq.spt_identity_name on identityiq.spt_identity (upper(name));

    create index identityiq.spt_integration_config_name on identityiq.spt_integration_config (upper(name));

    create index identityiq.spt_jasper_template_name on identityiq.spt_jasper_template (upper(name));

    create index identityiq.spt_managed_attribute_hash on identityiq.spt_managed_attribute (upper(hash));

    create index identityiq.spt_message_template_name on identityiq.spt_message_template (upper(name));

    create index identityiq.spt_mining_config_name on identityiq.spt_mining_config (upper(name));

    create index identityiq.spt_monitoring_statistic_name on identityiq.spt_monitoring_statistic (upper(name));

    create index identityiq.spt_object_config_name on identityiq.spt_object_config (upper(name));

    create index identityiq.spt_partition_result_name on identityiq.spt_partition_result (upper(name));

    create index identityiq.spt_password_policy_name on identityiq.spt_password_policy (upper(name));

    create index identityiq.spt_plugin_file_id on identityiq.spt_plugin (upper(file_id));

    create index identityiq.spt_policy_name on identityiq.spt_policy (upper(name));

    create index identityiq.spt_quick_link_name on identityiq.spt_quick_link (upper(name));

    create index identityiq.spt_request_definition_name on identityiq.spt_request_definition (upper(name));

    create index identityiq.spt_right_name on identityiq.spt_right (upper(name));

    create index identityiq.spt_right_config_name on identityiq.spt_right_config (upper(name));

    create index identityiq.spt_rule_name on identityiq.spt_rule (upper(name));

    create index identityiq.spt_rule_registry_name on identityiq.spt_rule_registry (upper(name));

    create index identityiq.spt_score_config_name on identityiq.spt_score_config (upper(name));

    create index identityiq.spt_server_name on identityiq.spt_server (upper(name));

    create index identityiq.spt_service_definition_name on identityiq.spt_service_definition (upper(name));

    create index identityiq.spt_service_status_name on identityiq.spt_service_status (upper(name));

    create index identityiq.spt_tag_name on identityiq.spt_tag (upper(name));

    create index identityiq.spt_task_definition_name on identityiq.spt_task_definition (upper(name));

    create index identityiq.spt_task_result_name on identityiq.spt_task_result (upper(name));

    create index identityiq.spt_uiconfig_name on identityiq.spt_uiconfig (upper(name));

    create index identityiq.spt_widget_name on identityiq.spt_widget (upper(name));

    create index identityiq.spt_workflow_name on identityiq.spt_workflow (upper(name));

    create index identityiq.spt_workflow_registry_name on identityiq.spt_workflow_registry (upper(name));

    create index identityiq.spt_workflow_test_suite_name on identityiq.spt_workflow_test_suite (upper(name));

    create sequence identityiq.spt_prv_trans_sequence start with 1 increment by 1 nocache;

    create sequence identityiq.spt_alert_sequence start with 1 increment by 1 nocache;

    create sequence identityiq.spt_identity_request_sequence start with 1 increment by 1 nocache;

    create sequence identityiq.spt_syslog_event_sequence start with 1 increment by 1 nocache;

    create sequence identityiq.spt_work_item_sequence start with 1 increment by 1 nocache;
