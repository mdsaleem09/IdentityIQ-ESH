<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Post Iterate" type="PostIterate">
  <Description>This rule is called after the connector processes the data in a file.

Stats is a Map passed in by the connector with the information it has gathered. Custom keys can be added here if necessary for validation.</Description>
  <Signature returnType="void">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="application">
        <Description>
          Application being iterated.
        </Description>
      </Argument>
      <Argument name="schema">
        <Description>
          Schema requested during iteration.
        </Description>
      </Argument>
      <Argument name="stats">
        <Description>
          A map of the stats for the current file that was just iterated.
          Contains keys:
            fileName : (String) filename of the file about to be processed
            absolutePath : (String) absolute filename
            length : (Long) length in bytes
            lastModified : (Long) last time the file was updated Java GMT
            columnNames : (List) column names that were used during the iteration
            objectsIterated : (Long) total number of objects iterated during this run
        </Description>
      </Argument>
    </Inputs>
  </Signature>
  <Source>import java.io.*;
 import java.io.BufferedReader;
  import java.io.File;
  import java.io.FileReader;
  import java.io.IOException;



String filePath = (String) stats.get("absolutePath");

File file= new File(filePath);

if (file.exists()) {
FileReader myreader = new FileReader(file);
 BufferedReader br=new BufferedReader(myreader);
String line=br.readLine();
      System.out.println("saleemLine"+line);
      if(line!=null )
       {
myreader.close();
      br.close();
}
    file.delete();
System.out.println("File deleted ");
} 


else{

System.out.println("unable to delete file");

}</Source>
</Rule>