<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Policy_Violation_Rule" type="Policy">
  <Description>This rule is used to determine if a Policy has been violated.</Description>
  <Signature returnType="PolicyViolation">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="identity">
        <Description>
          The Identity being inspected.
        </Description>
      </Argument>
      <Argument name="policy">
        <Description>
          The Policy being evaluated.
        </Description>
      </Argument>
      <Argument name="constraint">
        <Description>
          The Constraint being evaluated.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="violation">
        <Description>
          The PolicyViolation object.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>import sailpoint.object.Link;
import sailpoint.object.Filter;
import sailpoint.object.PolicyViolation;

PolicyViolation violation = new PolicyViolation();

System.out.println("In the First line");
if(identity!=null){
//String empType=identity.getAttribute("inactive");
boolean status=identity.getAttribute("inactive");
System.out.println("In the First if"+status);
if(!status){
Link link=context.getUniqueObject(Link.class,Filter.and(Filter.eq("application.name","HR - System"),Filter.eq("identity.name",identity.getName())));
System.out.println("In the second if "+link);

if(link!=null){
String cn=link.getAttribute("Name");
System.out.println("In the third if"+cn);

if(cn != null &amp;&amp; cn.equalsIgnoreCase("Edward Baker")){
System.out.println("In the Fourth if"+cn);
policy.setCertificationActions("Revoke");
System.out.println("In the Fourth if"+policy);

violation.setPolicy(policy);
 //violation.setIdentity(identity);
// violation.setPolicyName("AD Advance Policy");
// violation.setOwner(identity.getManager());
 return violation;
}
}
}
}
return null</Source>
</Rule>