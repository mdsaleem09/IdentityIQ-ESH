<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="test 07-14-2021 updated" type="Validation">
  <Description>This program will return all the objects from Identity Class</Description>
  <Source>
   import sailpoint.object.Identity;
  import sailpoint.object.*;
  import sailpoint.api.*;
  import sailpoint.object.Filter;
  import sailpoint.object.Profile;
  import sailpoint.api.IdIterator;

  import java.util.*;


  String roledisplayName=null;
  String groupName=null;

  String appName="Active- DemoJdbcApp";
  String owner="spadmin";

  Identity idObject=context.getObjectByName(Identity.class,"spadmin");
  Application appObj=context.getObjectByName(Application.class,appName);
  Filter filter=Filter.like("application.name",appName);
  QueryOptions opts=new QueryOptions();
  opts.addFilter(filter);
  opts.setCloneResults(true);

  Bundle orgBundle=context.getObjectByName(Bundle.class,"Org-SAP");
  if(orgBund==null)
  {
    System.out.println("inside orgBund bundle");
    orgBundle=new Bundle();
    orgBundle.setName("Org-SAP");
    orgBundle.setType("organizational");
    orgBundle.setDisplayName("Org-SAP");
    orgBundle.setOwner(idObject);
  }

  Iterator it=context.search(ManagedAttribute.class,opts);
  while(it.hasNext())
  {

    ManagedAttribute ma=(ManagedAttribute)it.next();
    System.out.println("Inside managed Attribute");
    //if(ma.getAttribute("Type")!=null &amp;&amp; ma.getAttribute("Type").equalsIgnoreCase("Composite"))


    if(ma!=null &amp;&amp; appObj.getOwner()!=null &amp;&amp;  ma.getDisplayName()!=null &amp;&amp; ma.getDisplayableName()!=null &amp;&amp;  ma.getAttribute("sysDescriptions")!=null)
    {

      Map map= ma.getAttribute("sysDescriptions");
      roledisplayName=map.get("en_US");


      Filter filter=Filter.and(Filter.eq("name",ma.getDisplayName()),Filter.eq("displayName",roledisplayName));

      Bundle bundObj=context.getUniqueObject(Bundle.class,filter);
      if(bundObj==null)
      {
        bundObj=new Bundle();
      }
      //bundObj=new Bundle();
      System.out.println("Inside else bundObj"+bundObj);


      String groupName = (String) ma.getDisplayName();
      System.out.println("groupName"+groupName);




      System.out.println("roledisplayName"+roledisplayName);
      System.out.println("MadisplayName"+ma.getDisplayableName());

      

      Classification cl=context.getObjectByName(Classification.class,"Privileged");
      ObjectClassification ob=new ObjectClassification();
      ob.setClassification(cl);

      bundObj.setDisplayName(roledisplayName);
      bundObj.setName(ma.getDisplayableName());
      bundObj.setType("Hybrid");
      
      
      
     // bundObj.setAttribute("Requestable","1");

      if(roledisplayName.contains("AuditMgmt"))
      {
        bundObj.addClassification(ob);
      }

      Bundle orgBundle=context.getObjectByName(Bundle.class,"Org-SAP");

      bundObj.addInheritance(orgBundle);

      context.saveObject(bundObj);
      //bundObj.setDescription(ma.getAttribute("Long Description"));
      bundObj.setOwner(appObj.getOwner());

      
      //Iterate through all applications managed Attributes

      System.out.println("bundObj in managedAttribute"+bundObj.toXml());



      Filter filter=Filter.like("application.name","Active");
      QueryOptions opts=new QueryOptions();
      opts.setCloneResults(true);

      opts.addFilter(filter);
      String description=null;
      Iterator it=context.search(ManagedAttribute.class,opts);
      //   IdIterator ents = new IdIterator(context, it);
      while(it.hasNext())
      {
        ManagedAttribute maObj=(ManagedAttribute)it.next();

        Map mapOb= maObj.getAttribute("sysDescriptions");
        description=mapOb.get("en_US");
        System.out.println("maObj description "+description);
        if(maObj!=null &amp;&amp; maObj.getDisplayName()!=null &amp;&amp;  maObj.getAttribute()!=null &amp;&amp; maObj.getDisplayableName()!=null &amp;&amp;  description!=null &amp;&amp;  roledisplayName!=null &amp;&amp;  description.equalsIgnoreCase(roledisplayName))
        {

          Application app= context.getObjectByName(Application.class,maObj.getApplication().getName());
          System.out.println("app"+app);
          Profile profile=new Profile();
          profile.setApplication(app);
          List entValues = new ArrayList();
          entValues.add(maObj.getValue());
          Filter fil = Filter.containsAll(maObj.getAttribute(), entValues);
          profile.addConstraint(fil);
          bundObj.add(profile);
          System.out.println("bundle in All ManagedAttributes:"+bundObj.toXml());
          context.saveObject(bundObj);
          context.commitTransaction();

        }
      }

    }
  

  context.decache();
  sailpoint.tools.Util.flushIterator(it); 
  }
  </Source>
</Rule>