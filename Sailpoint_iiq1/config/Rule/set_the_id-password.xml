<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="set the id-password" type="Validation">
  <Description>This program will return all the objects from Identity Class</Description>
  <Source>

  
/*  import sailpoint.object.Identity;
  import sailpoint.object.*;
  import sailpoint.api.*;
  */
  
  
  
  
  import sailpoint.object.*;
import sailpoint.api.*;
     import sailpoint.object.*;
   import sailpoint.object.ProvisioningPlan.AccountRequest;
   import sailpoint.object.ProvisioningPlan.AttributeRequest;
   import sailpoint.object.ProvisioningPlan.Operation;

  String identityName="James Smith";

        
        System.out.println("Inside this rule:");

  Identity idObj=context.getObjectByName(Identity.class,identityName);
  ProvisioningPlan plan=new ProvisioningPlan();
  plan.setIdentity(idObj);
  AccountRequest acctReq=new AccountRequest();
 acctReq.setApplication("Active Directory");
  
   acctReq.setOp(ProvisioningPlan.ObjectOperation.Disable);
  String nativeid="cn="+idObj.getName()+","+"OU=TestUsers,OU=Demo,DC=eshiam,DC=com";
        System.out.println("native"+native);
  acctReq.add(new AttributeRequest("AC_NewParent",ProvisioningPlan.Operation.Set,native));
        System.out.println("Plan in Disable Workflow2:"+plan.toXml());
  return plan;
  plan.add(acctReq);
  Provisioner provisioner = new Provisioner(context);
	provisioner.execute(plan);
	context.saveObject(idObj);
	context.commitTransaction();
  /*
  
  List identityObj=context.getObjects(Identity.class);
  for(Identity id:identityObj)
  {
    id.setPassword("admin");
    context.saveObject(id);
    context.commitTransaction();
  }
  
System.out.println("Inside the rule");
*/
  </Source>
</Rule>